name: Auto Rebase Branches
on:
  schedule:
    - cron:  '0 */1 * * *'   
  #    - cron:  '*/10 * * * *'   
  push:
    branches:
    - zrebase_all

env:
    ROOT_BRANCH_NAME: main
    BRANCHES_TO_REBASE: alex,tranchung,lets7512,andrescass
jobs:
  Rebase-All:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Rebasing branches ${{ env.BRANCHES_TO_REBASE }} with ${{ env.ROOT_BRANCH_NAME }}"
      - name: Checking out repository code into workspace...
        uses: actions/checkout@v3

      #### No desctructive add main and local and push ALL
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          echo "Fetching latest..."
          git fetch origin
          git checkout ${{ env.ROOT_BRANCH_NAME }}
          git pull
          echo "Beginning merge...."
          IFS=","
          for branch in $BRANCHES_TO_REBASE; do
            git checkout $branch
            git pull
            git merge $ROOT_BRANCH_NAME --no-edit || { git add -u . && git commit --no-edit ;}
            git push
            echo "Merge SUCCEEDED for branch $branch"
          done


      #########  Rebase version : create MANY conflicts
      # - run: |
      #     git config user.name github-actions
      #     git config user.email github-actions@github.com
      # - run: echo "Fetching latest..."
      # - run: git fetch origin
      # - run: git checkout ${{ env.ROOT_BRANCH_NAME }}
      # - run: git pull --rebase
      # - run: echo "Beginning rebase...."
      # - run: |
      #     IFS=","
      #     for branch in $BRANCHES_TO_REBASE; do
      #       { git checkout $branch  && \
      #         git pull && \
      #         git rebase $ROOT_BRANCH_NAME && \
      #         git push --force-with-lease && \
      #         echo "Rebase SUCCEEDED for branch $branch" ;} \
              
      #       || { echo "Rebase FAILED for branch $branch" && git rebase --abort ; }
            
      #     done



#### Iterate All branches  
#branches=()
#eval "$(git for-each-ref --shell --format='branches+=(%(refname))' refs/heads/)"
#for branch in "${branches[@]}"; do
#    # â€¦
#done
