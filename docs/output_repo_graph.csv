PyGithub/github/AccessToken.py:AccessToken:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/AccessToken.py:AccessToken:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/ApplicationOAuth.py:ApplicationOAuth:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/ApplicationOAuth.py:ApplicationOAuth:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/ApplicationOAuth.py:ApplicationOAuth:get_login_url, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/ApplicationOAuth.py:ApplicationOAuth:get_access_token, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/ApplicationOAuth.py:ApplicationOAuth:get_access_token, method, AccessToken, , , AccessToken
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:avatar_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:bio, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:blog, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:collaborators, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:company, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:disk_usage, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:email, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:events_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:followers, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:followers_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:following, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:following_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:gists_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:gravatar_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:hireable, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:location, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:login, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:node_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:organizations_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:owned_private_repos, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:plan, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:private_gists, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:public_gists, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:public_repos, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:received_events_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:repos_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:site_admin, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:starred_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:subscriptions_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:total_private_repos, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:type, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:add_to_emails, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:add_to_following, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:add_to_starred, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:add_to_subscriptions, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:add_to_watched, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:create_authorization, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:create_authorization, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:create_authorization, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:create_fork, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:create_gist, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:create_gist, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:create_gist, method, files.values, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: files:values
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:create_gist, method, files.items, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: files:items
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:create_key, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:create_project, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:create_repo, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:edit, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_authorization, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_authorization, method, get_authorizations, , , get_authorizations
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_emails, method, namedtuple, [FUNC] [SIDE_PACKAGE], C:/Python39/lib/collections, [FUNC] [SIDE_PACKAGE]: collections.namedtuple
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_gists, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_gists, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_gists, method, since.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: since:strftime
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_issues, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_issues, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_issues, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_issues, method, since.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: since:strftime
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_user_issues, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_user_issues, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_user_issues, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_user_issues, method, since.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: since:strftime
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_key, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_key, method, get_keys, , , get_keys
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_notification, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_notification, method, get_notifications, , , get_notifications
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_notifications, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_notifications, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_notifications, method, since.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: since:strftime
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_notifications, method, before.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: before:strftime
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_organization_events, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_repo, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_repo, method, get_repos, , , get_repos
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_repos, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_repos, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_starred, method, get_starred_gists, , , get_starred_gists
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:has_in_following, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:has_in_starred, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:has_in_subscriptions, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:has_in_watched, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:mark_notifications_as_read, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:mark_notifications_as_read, method, last_read_at.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: last_read_at:strftime
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:remove_from_emails, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:remove_from_following, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:remove_from_starred, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:remove_from_subscriptions, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:remove_from_watched, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:accept_invitation, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:create_migration, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:create_migration, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:get_organization_membership, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/AuthenticatedUser.py:AuthenticatedUser:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Authorization.py:Authorization:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Authorization.py:Authorization:app, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Authorization.py:Authorization:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Authorization.py:Authorization:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Authorization.py:Authorization:note, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Authorization.py:Authorization:note_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Authorization.py:Authorization:scopes, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Authorization.py:Authorization:token, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Authorization.py:Authorization:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Authorization.py:Authorization:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Authorization.py:Authorization:edit, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Authorization.py:Authorization:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Authorization.py:Authorization:edit, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/Authorization.py:Authorization:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/Authorization.py:Authorization:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Authorization.py:Authorization:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Authorization.py:Authorization:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Authorization.py:Authorization:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Authorization.py:Authorization:_useAttributes, method, self._makeListOfStringsAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfStringsAttribute
PyGithub/github/AuthorizationApplication.py:AuthorizationApplication:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/AuthorizationApplication.py:AuthorizationApplication:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthorizationApplication.py:AuthorizationApplication:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/AuthorizationApplication.py:AuthorizationApplication:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Branch.py:Branch:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Branch.py:Branch:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Branch.py:Branch:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Branch.py:Branch:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/Branch.py:Branch:edit_protection, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Branch.py:Branch:edit_protection, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Branch.py:Branch:edit_required_status_checks, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Branch.py:Branch:edit_required_status_checks, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Branch.py:Branch:edit_required_pull_request_reviews, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Branch.py:Branch:edit_required_pull_request_reviews, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Branch.py:Branch:add_user_push_restrictions, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Branch.py:Branch:replace_user_push_restrictions, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Branch.py:Branch:remove_user_push_restrictions, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Branch.py:Branch:add_team_push_restrictions, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Branch.py:Branch:replace_team_push_restrictions, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Branch.py:Branch:remove_team_push_restrictions, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/BranchProtection.py:BranchProtection:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/BranchProtection.py:BranchProtection:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/BranchProtection.py:BranchProtection:required_status_checks, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/BranchProtection.py:BranchProtection:enforce_admins, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/BranchProtection.py:BranchProtection:required_pull_request_reviews, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/BranchProtection.py:BranchProtection:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/BranchProtection.py:BranchProtection:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/BranchProtection.py:BranchProtection:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/CheckRun.py:CheckRun:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/CheckRun.py:CheckRun:app, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:check_suite_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:completed_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:conclusion, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:details_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:external_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:head_sha, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:node_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:output, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:pull_requests, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:started_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:status, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckRun.py:CheckRun:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/CheckRun.py:CheckRun:edit, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/CheckRun.py:CheckRun:edit, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/CheckRun.py:CheckRun:edit, method, started_at.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: started_at:strftime
PyGithub/github/CheckRun.py:CheckRun:edit, method, completed_at.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: completed_at:strftime
PyGithub/github/CheckRun.py:CheckRun:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/CheckRun.py:CheckRun:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/CheckRun.py:CheckRun:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/CheckRun.py:CheckRun:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/CheckRun.py:CheckRun:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/CheckRun.py:CheckRun:_useAttributes, method, self._makeListOfClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfClassesAttribute
PyGithub/github/CheckRunAnnotation.py:CheckRunAnnotation:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/CheckRunAnnotation.py:CheckRunAnnotation:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/CheckRunAnnotation.py:CheckRunAnnotation:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/CheckRunOutput.py:CheckRunOutput:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/CheckRunOutput.py:CheckRunOutput:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/CheckRunOutput.py:CheckRunOutput:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/CheckSuite.py:CheckSuite:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/CheckSuite.py:CheckSuite:after, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:app, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:before, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:check_runs_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:conclusion, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:head_branch, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:head_commit, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:head_sha, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:latest_check_runs_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:pull_requests, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:repository, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:status, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CheckSuite.py:CheckSuite:get_check_runs, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/CheckSuite.py:CheckSuite:get_check_runs, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/CheckSuite.py:CheckSuite:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/CheckSuite.py:CheckSuite:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/CheckSuite.py:CheckSuite:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/CheckSuite.py:CheckSuite:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/CheckSuite.py:CheckSuite:_useAttributes, method, self._makeListOfClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfClassesAttribute
PyGithub/github/Clones.py:Clones:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Clones.py:Clones:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Clones.py:Clones:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Commit.py:Commit:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Commit.py:Commit:author, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Commit.py:Commit:comments_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Commit.py:Commit:commit, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Commit.py:Commit:committer, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Commit.py:Commit:files, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Commit.py:Commit:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Commit.py:Commit:parents, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Commit.py:Commit:sha, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Commit.py:Commit:stats, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Commit.py:Commit:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Commit.py:Commit:create_comment, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Commit.py:Commit:create_status, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Commit.py:Commit:get_check_runs, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Commit.py:Commit:get_check_runs, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/Commit.py:Commit:get_check_suites, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Commit.py:Commit:get_check_suites, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/Commit.py:Commit:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Commit.py:Commit:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Commit.py:Commit:_useAttributes, method, self._makeListOfClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfClassesAttribute
PyGithub/github/CommitCombinedStatus.py:CommitCombinedStatus:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/CommitCombinedStatus.py:CommitCombinedStatus:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/CommitCombinedStatus.py:CommitCombinedStatus:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/CommitCombinedStatus.py:CommitCombinedStatus:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/CommitCombinedStatus.py:CommitCombinedStatus:_useAttributes, method, self._makeListOfClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfClassesAttribute
PyGithub/github/CommitComment.py:CommitComment:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/CommitComment.py:CommitComment:body, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CommitComment.py:CommitComment:commit_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CommitComment.py:CommitComment:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CommitComment.py:CommitComment:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CommitComment.py:CommitComment:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CommitComment.py:CommitComment:line, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CommitComment.py:CommitComment:path, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CommitComment.py:CommitComment:position, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CommitComment.py:CommitComment:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CommitComment.py:CommitComment:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CommitComment.py:CommitComment:user, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/CommitComment.py:CommitComment:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/CommitComment.py:CommitComment:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/CommitComment.py:CommitComment:create_reaction, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/CommitComment.py:CommitComment:delete_reaction, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/CommitComment.py:CommitComment:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/CommitComment.py:CommitComment:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/CommitComment.py:CommitComment:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/CommitComment.py:CommitComment:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/CommitStats.py:CommitStats:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/CommitStatus.py:CommitStatus:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/CommitStatus.py:CommitStatus:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/CommitStatus.py:CommitStatus:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/CommitStatus.py:CommitStatus:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/CommitStatus.py:CommitStatus:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Comparison.py:Comparison:ahead_by, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Comparison.py:Comparison:base_commit, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Comparison.py:Comparison:behind_by, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Comparison.py:Comparison:commits, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Comparison.py:Comparison:diff_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Comparison.py:Comparison:files, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Comparison.py:Comparison:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Comparison.py:Comparison:merge_base_commit, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Comparison.py:Comparison:patch_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Comparison.py:Comparison:permalink_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Comparison.py:Comparison:status, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Comparison.py:Comparison:total_commits, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Comparison.py:Comparison:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Comparison.py:Comparison:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Comparison.py:Comparison:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Comparison.py:Comparison:_useAttributes, method, self._makeListOfClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfClassesAttribute
PyGithub/github/Comparison.py:Comparison:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/ContentFile.py:ContentFile:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/ContentFile.py:ContentFile:content, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/ContentFile.py:ContentFile:decoded_content, method, base64.b64decode, [CLASS] [STDLIB], , [CLASS] [STDLIB]: base64:b64decode
PyGithub/github/ContentFile.py:ContentFile:download_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/ContentFile.py:ContentFile:encoding, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/ContentFile.py:ContentFile:git_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/ContentFile.py:ContentFile:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/ContentFile.py:ContentFile:license, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/ContentFile.py:ContentFile:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/ContentFile.py:ContentFile:path, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/ContentFile.py:ContentFile:sha, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/ContentFile.py:ContentFile:size, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/ContentFile.py:ContentFile:type, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/ContentFile.py:ContentFile:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/ContentFile.py:ContentFile:text_matches, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/ContentFile.py:ContentFile:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/ContentFile.py:ContentFile:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/ContentFile.py:ContentFile:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/ContentFile.py:ContentFile:_useAttributes, method, self._makeListOfDictsAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfDictsAttribute
PyGithub/github/Deployment.py:Deployment:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Deployment.py:Deployment:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Deployment.py:Deployment:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Deployment.py:Deployment:sha, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Deployment.py:Deployment:task, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Deployment.py:Deployment:payload, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Deployment.py:Deployment:original_environment, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Deployment.py:Deployment:environment, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Deployment.py:Deployment:production_environment, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Deployment.py:Deployment:transient_environment, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Deployment.py:Deployment:description, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Deployment.py:Deployment:creator, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Deployment.py:Deployment:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Deployment.py:Deployment:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Deployment.py:Deployment:statuses_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Deployment.py:Deployment:repository_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Deployment.py:Deployment:get_statuses, method, self._get_accept_header, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_get_accept_header
PyGithub/github/Deployment.py:Deployment:get_status, method, self._get_accept_header, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_get_accept_header
PyGithub/github/Deployment.py:Deployment:get_status, method, get_status, , , get_status
PyGithub/github/Deployment.py:Deployment:get_status, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Deployment.py:Deployment:create_status, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Deployment.py:Deployment:create_status, method, self._get_accept_header, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_get_accept_header
PyGithub/github/Deployment.py:Deployment:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Deployment.py:Deployment:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/Deployment.py:Deployment:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Deployment.py:Deployment:_useAttributes, method, self._makeDictAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDictAttribute
PyGithub/github/Deployment.py:Deployment:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Deployment.py:Deployment:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/DeploymentStatus.py:DeploymentStatus:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/DeploymentStatus.py:DeploymentStatus:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/DeploymentStatus.py:DeploymentStatus:creator, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/DeploymentStatus.py:DeploymentStatus:deployment_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/DeploymentStatus.py:DeploymentStatus:description, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/DeploymentStatus.py:DeploymentStatus:environment, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/DeploymentStatus.py:DeploymentStatus:environment_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/DeploymentStatus.py:DeploymentStatus:repository_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/DeploymentStatus.py:DeploymentStatus:state, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/DeploymentStatus.py:DeploymentStatus:target_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/DeploymentStatus.py:DeploymentStatus:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/DeploymentStatus.py:DeploymentStatus:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/DeploymentStatus.py:DeploymentStatus:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/DeploymentStatus.py:DeploymentStatus:node_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/DeploymentStatus.py:DeploymentStatus:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/DeploymentStatus.py:DeploymentStatus:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/DeploymentStatus.py:DeploymentStatus:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/DeploymentStatus.py:DeploymentStatus:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Download.py:Download:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Download.py:Download:accesskeyid, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:acl, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:bucket, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:content_type, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:description, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:download_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:expirationdate, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:mime_type, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:path, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:policy, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:prefix, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:redirect, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:s3_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:signature, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:size, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Download.py:Download:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Download.py:Download:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Download.py:Download:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Download.py:Download:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/Event.py:Event:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Event.py:Event:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Event.py:Event:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Event.py:Event:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Event.py:Event:_useAttributes, method, self._makeDictAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDictAttribute
PyGithub/github/Event.py:Event:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/File.py:File:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/File.py:File:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/File.py:File:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Gist.py:Gist:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Gist.py:Gist:comments, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:comments_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:commits_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:description, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:files, method, self._completeIfNeeded, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNeeded
PyGithub/github/Gist.py:Gist:fork_of, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:forks, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:forks_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:git_pull_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:git_push_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:history, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:owner, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:public, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:user, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Gist.py:Gist:create_comment, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Gist.py:Gist:create_fork, method, Gist, , , Gist
PyGithub/github/Gist.py:Gist:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Gist.py:Gist:edit, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Gist.py:Gist:edit, method, files.values, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: files:values
PyGithub/github/Gist.py:Gist:edit, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/Gist.py:Gist:edit, method, files.items, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: files:items
PyGithub/github/Gist.py:Gist:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/Gist.py:Gist:get_comment, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Gist.py:Gist:get_comment, method, get_comments, , , get_comments
PyGithub/github/Gist.py:Gist:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Gist.py:Gist:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Gist.py:Gist:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Gist.py:Gist:_useAttributes, method, self._makeDictOfStringsToClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDictOfStringsToClassesAttribute
PyGithub/github/Gist.py:Gist:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Gist.py:Gist:_useAttributes, method, self._makeListOfClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfClassesAttribute
PyGithub/github/Gist.py:Gist:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/GistComment.py:GistComment:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/GistComment.py:GistComment:body, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistComment.py:GistComment:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistComment.py:GistComment:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistComment.py:GistComment:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistComment.py:GistComment:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistComment.py:GistComment:user, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistComment.py:GistComment:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/GistComment.py:GistComment:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/GistComment.py:GistComment:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/GistComment.py:GistComment:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/GistComment.py:GistComment:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/GistComment.py:GistComment:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/GistFile.py:GistFile:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/GistFile.py:GistFile:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/GistFile.py:GistFile:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/GistHistoryState.py:GistHistoryState:change_status, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:comments, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:comments_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:commits_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:committed_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:description, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:files, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:forks, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:forks_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:git_pull_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:git_push_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:history, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:owner, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:public, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:user, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:version, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GistHistoryState.py:GistHistoryState:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/GistHistoryState.py:GistHistoryState:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/GistHistoryState.py:GistHistoryState:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/GistHistoryState.py:GistHistoryState:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/GistHistoryState.py:GistHistoryState:_useAttributes, method, self._makeDictOfStringsToClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDictOfStringsToClassesAttribute
PyGithub/github/GistHistoryState.py:GistHistoryState:_useAttributes, method, self._makeListOfClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfClassesAttribute
PyGithub/github/GistHistoryState.py:GistHistoryState:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/GitAuthor.py:GitAuthor:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/GitAuthor.py:GitAuthor:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/GitAuthor.py:GitAuthor:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/GitBlob.py:GitBlob:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/GitBlob.py:GitBlob:content, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitBlob.py:GitBlob:encoding, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitBlob.py:GitBlob:sha, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitBlob.py:GitBlob:size, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitBlob.py:GitBlob:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitBlob.py:GitBlob:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/GitBlob.py:GitBlob:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/GitCommit.py:GitCommit:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/GitCommit.py:GitCommit:author, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitCommit.py:GitCommit:committer, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitCommit.py:GitCommit:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitCommit.py:GitCommit:message, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitCommit.py:GitCommit:parents, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitCommit.py:GitCommit:sha, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitCommit.py:GitCommit:tree, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitCommit.py:GitCommit:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitCommit.py:GitCommit:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/GitCommit.py:GitCommit:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/GitCommit.py:GitCommit:_useAttributes, method, self._makeListOfClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfClassesAttribute
PyGithub/github/GithubApp.py:GithubApp:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/GithubApp.py:GithubApp:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GithubApp.py:GithubApp:description, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GithubApp.py:GithubApp:events, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GithubApp.py:GithubApp:external_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GithubApp.py:GithubApp:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GithubApp.py:GithubApp:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GithubApp.py:GithubApp:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GithubApp.py:GithubApp:owner, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GithubApp.py:GithubApp:permissions, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GithubApp.py:GithubApp:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GithubApp.py:GithubApp:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/GithubApp.py:GithubApp:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/GithubApp.py:GithubApp:_useAttributes, method, self._makeListOfStringsAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfStringsAttribute
PyGithub/github/GithubApp.py:GithubApp:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/GithubApp.py:GithubApp:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/GithubApp.py:GithubApp:_useAttributes, method, self._makeDictAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDictAttribute
PyGithub/github/GithubException.py:GithubException:__init__, method, super, , , super
PyGithub/github/GithubObject.py:_BadAttribute:value, method, GithubException.BadAttributeException, [CLASS] [REPO], , [CLASS] [REPO]: GithubException:BadAttributeException
PyGithub/github/GithubObject.py:GithubObject:__init__, method, self._initAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_initAttributes
PyGithub/github/GithubObject.py:GithubObject:__init__, method, self._storeAndUseAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_storeAndUseAttributes
PyGithub/github/GithubObject.py:GithubObject:__init__, method, requester.check_me, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: requester:check_me
PyGithub/github/GithubObject.py:GithubObject:_storeAndUseAttributes, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/GithubObject.py:GithubObject:raw_data, method, self._completeIfNeeded, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNeeded
PyGithub/github/GithubObject.py:GithubObject:raw_headers, method, self._completeIfNeeded, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNeeded
PyGithub/github/GithubObject.py:GithubObject:__makeSimpleAttribute, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/GithubObject.py:GithubObject:__makeSimpleAttribute, method, _ValuedAttribute, , , _ValuedAttribute
PyGithub/github/GithubObject.py:GithubObject:__makeSimpleAttribute, method, _BadAttribute, , , _BadAttribute
PyGithub/github/GithubObject.py:GithubObject:__makeSimpleListAttribute, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/GithubObject.py:GithubObject:__makeSimpleListAttribute, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/GithubObject.py:GithubObject:__makeSimpleListAttribute, method, _ValuedAttribute, , , _ValuedAttribute
PyGithub/github/GithubObject.py:GithubObject:__makeSimpleListAttribute, method, _BadAttribute, , , _BadAttribute
PyGithub/github/GithubObject.py:GithubObject:__makeTransformedAttribute, method, _ValuedAttribute, , , _ValuedAttribute
PyGithub/github/GithubObject.py:GithubObject:__makeTransformedAttribute, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/GithubObject.py:GithubObject:__makeTransformedAttribute, method, _BadAttribute, , , _BadAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeStringAttribute, method, GithubObject.__makeSimpleAttribute, [CLASS] [REPO], , [CLASS] [REPO]: GithubObject:__makeSimpleAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeIntAttribute, method, GithubObject.__makeSimpleAttribute, [CLASS] [REPO], , [CLASS] [REPO]: GithubObject:__makeSimpleAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeFloatAttribute, method, GithubObject.__makeSimpleAttribute, [CLASS] [REPO], , [CLASS] [REPO]: GithubObject:__makeSimpleAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeBoolAttribute, method, GithubObject.__makeSimpleAttribute, [CLASS] [REPO], , [CLASS] [REPO]: GithubObject:__makeSimpleAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeDictAttribute, method, GithubObject.__makeSimpleAttribute, [CLASS] [REPO], , [CLASS] [REPO]: GithubObject:__makeSimpleAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeTimestampAttribute, method, GithubObject.__makeTransformedAttribute, [CLASS] [REPO], , [CLASS] [REPO]: GithubObject:__makeTransformedAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeDatetimeAttribute, method, parseDatetime, , , parseDatetime
PyGithub/github/GithubObject.py:GithubObject:_makeDatetimeAttribute, method, len, , , len
PyGithub/github/GithubObject.py:GithubObject:_makeDatetimeAttribute, method, datetime.timedelta, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:timedelta
PyGithub/github/GithubObject.py:GithubObject:_makeDatetimeAttribute, method, minutes=int, , , minutes=int
PyGithub/github/GithubObject.py:GithubObject:_makeDatetimeAttribute, method, GithubObject.__makeTransformedAttribute, [CLASS] [REPO], , [CLASS] [REPO]: GithubObject:__makeTransformedAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeClassAttribute, method, GithubObject.__makeTransformedAttribute, [CLASS] [REPO], , [CLASS] [REPO]: GithubObject:__makeTransformedAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeClassAttribute, method, klass, , , klass
PyGithub/github/GithubObject.py:GithubObject:_makeListOfStringsAttribute, method, GithubObject.__makeSimpleListAttribute, [CLASS] [REPO], , [CLASS] [REPO]: GithubObject:__makeSimpleListAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeListOfIntsAttribute, method, GithubObject.__makeSimpleListAttribute, [CLASS] [REPO], , [CLASS] [REPO]: GithubObject:__makeSimpleListAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeListOfDictsAttribute, method, GithubObject.__makeSimpleListAttribute, [CLASS] [REPO], , [CLASS] [REPO]: GithubObject:__makeSimpleListAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeListOfListOfStringsAttribute, method, GithubObject.__makeSimpleListAttribute, [CLASS] [REPO], , [CLASS] [REPO]: GithubObject:__makeSimpleListAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeListOfClassesAttribute, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/GithubObject.py:GithubObject:_makeListOfClassesAttribute, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/GithubObject.py:GithubObject:_makeListOfClassesAttribute, method, _ValuedAttribute, , , _ValuedAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeListOfClassesAttribute, method, klass, , , klass
PyGithub/github/GithubObject.py:GithubObject:_makeListOfClassesAttribute, method, _BadAttribute, , , _BadAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeDictOfStringsToClassesAttribute, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/GithubObject.py:GithubObject:_makeDictOfStringsToClassesAttribute, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/GithubObject.py:GithubObject:_makeDictOfStringsToClassesAttribute, method, value.items, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: value:items
PyGithub/github/GithubObject.py:GithubObject:_makeDictOfStringsToClassesAttribute, method, _ValuedAttribute, , , _ValuedAttribute
PyGithub/github/GithubObject.py:GithubObject:_makeDictOfStringsToClassesAttribute, method, klass, , , klass
PyGithub/github/GithubObject.py:GithubObject:_makeDictOfStringsToClassesAttribute, method, _BadAttribute, , , _BadAttribute
PyGithub/github/GithubObject.py:GithubObject:get__repr__, method, format_params, , , format_params
PyGithub/github/GithubObject.py:GithubObject:get__repr__, method, list, , , list
PyGithub/github/GithubObject.py:GithubObject:get__repr__, method, sorted, [BUILT_IN], , [BUILT_IN]: sorted
PyGithub/github/GithubObject.py:GithubObject:get__repr__, method, key=itemgetter, , , key=itemgetter
PyGithub/github/GithubObject.py:GithubObject:get__repr__, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/GithubObject.py:GithubObject:get__repr__, method, v.decode, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: v:decode
PyGithub/github/GithubObject.py:CompletableGithubObject:__init__, method, super, , , super
PyGithub/github/GithubObject.py:CompletableGithubObject:__hash__, method, hash, [BUILT_IN], , [BUILT_IN]: hash
PyGithub/github/GithubObject.py:CompletableGithubObject:_completeIfNotSet, method, self._completeIfNeeded, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNeeded
PyGithub/github/GithubObject.py:CompletableGithubObject:_completeIfNeeded, method, self.__complete, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__complete
PyGithub/github/GithubObject.py:CompletableGithubObject:__complete, method, GithubException.IncompletableObject, [CLASS] [REPO], , [CLASS] [REPO]: GithubException:IncompletableObject
PyGithub/github/GithubObject.py:CompletableGithubObject:__complete, method, self._storeAndUseAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_storeAndUseAttributes
PyGithub/github/GithubObject.py:CompletableGithubObject:update, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/GithubObject.py:CompletableGithubObject:update, method, conditionalRequestHeader.update, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: conditionalRequestHeader:update
PyGithub/github/GithubObject.py:CompletableGithubObject:update, method, self._storeAndUseAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_storeAndUseAttributes
PyGithub/github/GitignoreTemplate.py:GitignoreTemplate:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/GitignoreTemplate.py:GitignoreTemplate:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/GitObject.py:GitObject:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/GitObject.py:GitObject:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/GitRef.py:GitRef:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/GitRef.py:GitRef:object, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRef.py:GitRef:ref, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRef.py:GitRef:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRef.py:GitRef:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/GitRef.py:GitRef:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/GitRef.py:GitRef:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/GitRef.py:GitRef:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/GitRelease.py:GitRelease:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/GitRelease.py:GitRelease:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRelease.py:GitRelease:body, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRelease.py:GitRelease:title, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRelease.py:GitRelease:tag_name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRelease.py:GitRelease:target_commitish, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRelease.py:GitRelease:draft, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRelease.py:GitRelease:prerelease, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRelease.py:GitRelease:author, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRelease.py:GitRelease:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRelease.py:GitRelease:published_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRelease.py:GitRelease:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRelease.py:GitRelease:upload_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRelease.py:GitRelease:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRelease.py:GitRelease:tarball_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRelease.py:GitRelease:zipball_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitRelease.py:GitRelease:update_release, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/GitRelease.py:GitRelease:upload_asset, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/GitRelease.py:GitRelease:upload_asset, method, basename, , , basename
PyGithub/github/GitRelease.py:GitRelease:upload_asset, method, upload_asset_from_memory, , , upload_asset_from_memory
PyGithub/github/GitRelease.py:GitRelease:upload_asset_from_memory, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/GitRelease.py:GitRelease:upload_asset_from_memory, method, str, [BUILT_IN], , [BUILT_IN]: str
PyGithub/github/GitRelease.py:GitRelease:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/GitRelease.py:GitRelease:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/GitRelease.py:GitRelease:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/GitRelease.py:GitRelease:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/GitRelease.py:GitRelease:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:label, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:content_type, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:state, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:size, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:download_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:browser_download_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:uploader, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:update_asset, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:update_asset, method, GitReleaseAsset, , , GitReleaseAsset
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/GitReleaseAsset.py:GitReleaseAsset:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/GitTag.py:GitTag:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/GitTag.py:GitTag:message, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitTag.py:GitTag:object, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitTag.py:GitTag:sha, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitTag.py:GitTag:tag, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitTag.py:GitTag:tagger, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitTag.py:GitTag:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitTag.py:GitTag:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/GitTag.py:GitTag:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/GitTree.py:GitTree:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/GitTree.py:GitTree:sha, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitTree.py:GitTree:tree, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitTree.py:GitTree:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/GitTree.py:GitTree:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/GitTree.py:GitTree:_useAttributes, method, self._makeListOfClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfClassesAttribute
PyGithub/github/GitTreeElement.py:GitTreeElement:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/GitTreeElement.py:GitTreeElement:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/GitTreeElement.py:GitTreeElement:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Hook.py:Hook:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Hook.py:Hook:active, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Hook.py:Hook:config, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Hook.py:Hook:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Hook.py:Hook:events, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Hook.py:Hook:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Hook.py:Hook:last_response, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Hook.py:Hook:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Hook.py:Hook:test_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Hook.py:Hook:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Hook.py:Hook:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Hook.py:Hook:ping_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Hook.py:Hook:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Hook.py:Hook:edit, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Hook.py:Hook:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/Hook.py:Hook:test, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Hook.py:Hook:ping, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Hook.py:Hook:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/Hook.py:Hook:_useAttributes, method, self._makeDictAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDictAttribute
PyGithub/github/Hook.py:Hook:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Hook.py:Hook:_useAttributes, method, self._makeListOfStringsAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfStringsAttribute
PyGithub/github/Hook.py:Hook:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Hook.py:Hook:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Hook.py:Hook:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/HookDescription.py:HookDescription:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/HookDescription.py:HookDescription:_useAttributes, method, self._makeListOfStringsAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfStringsAttribute
PyGithub/github/HookDescription.py:HookDescription:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/HookDescription.py:HookDescription:_useAttributes, method, self._makeListOfListOfStringsAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfListOfStringsAttribute
PyGithub/github/HookResponse.py:HookResponse:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/HookResponse.py:HookResponse:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/HookResponse.py:HookResponse:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/InputFileContent.py:InputFileContent:__init__, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/InputGitAuthor.py:InputGitAuthor:__init__, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/InputGitAuthor.py:InputGitAuthor:__repr__, method, f'InputGitAuthor, , , f'InputGitAuthor
PyGithub/github/InputGitTreeElement.py:InputGitTreeElement:__init__, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Installation.py:Installation:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Installation.py:Installation:get_repos, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/Installation.py:Installation:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Installation.py:Installation:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/InstallationAuthorization.py:InstallationAuthorization:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/InstallationAuthorization.py:InstallationAuthorization:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/InstallationAuthorization.py:InstallationAuthorization:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/InstallationAuthorization.py:InstallationAuthorization:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Invitation.py:Invitation:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Invitation.py:Invitation:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Invitation.py:Invitation:permissions, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Invitation.py:Invitation:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Invitation.py:Invitation:invitee, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Invitation.py:Invitation:inviter, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Invitation.py:Invitation:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Invitation.py:Invitation:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Invitation.py:Invitation:repository, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Invitation.py:Invitation:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Invitation.py:Invitation:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Invitation.py:Invitation:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Invitation.py:Invitation:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Issue.py:Issue:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Issue.py:Issue:assignee, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:assignees, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:body, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:closed_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:closed_by, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:comments, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:comments_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:events_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:labels, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:labels_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:milestone, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:number, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:pull_request, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:repository, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:state, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:title, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:user, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:locked, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:active_lock_reason, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:add_to_assignees, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Issue.py:Issue:add_to_assignees, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Issue.py:Issue:add_to_assignees, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/Issue.py:Issue:add_to_labels, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Issue.py:Issue:add_to_labels, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Issue.py:Issue:create_comment, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Issue.py:Issue:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Issue.py:Issue:edit, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Issue.py:Issue:edit, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/Issue.py:Issue:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/Issue.py:Issue:lock, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Issue.py:Issue:get_comment, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Issue.py:Issue:get_comment, method, get_comments, , , get_comments
PyGithub/github/Issue.py:Issue:get_comment, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/Issue.py:Issue:get_comment, method, since.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: since:strftime
PyGithub/github/Issue.py:Issue:get_comments, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Issue.py:Issue:get_comments, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/Issue.py:Issue:get_comments, method, since.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: since:strftime
PyGithub/github/Issue.py:Issue:remove_from_assignees, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Issue.py:Issue:remove_from_assignees, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Issue.py:Issue:remove_from_assignees, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/Issue.py:Issue:remove_from_labels, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Issue.py:Issue:set_labels, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Issue.py:Issue:set_labels, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Issue.py:Issue:create_reaction, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Issue.py:Issue:delete_reaction, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Issue.py:Issue:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Issue.py:Issue:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Issue.py:Issue:_useAttributes, method, self._makeListOfClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfClassesAttribute
PyGithub/github/Issue.py:Issue:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Issue.py:Issue:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Issue.py:Issue:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/IssueComment.py:IssueComment:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/IssueComment.py:IssueComment:body, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueComment.py:IssueComment:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueComment.py:IssueComment:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueComment.py:IssueComment:issue_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueComment.py:IssueComment:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueComment.py:IssueComment:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueComment.py:IssueComment:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueComment.py:IssueComment:user, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueComment.py:IssueComment:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/IssueComment.py:IssueComment:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/IssueComment.py:IssueComment:create_reaction, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/IssueComment.py:IssueComment:delete_reaction, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/IssueComment.py:IssueComment:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/IssueComment.py:IssueComment:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/IssueComment.py:IssueComment:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/IssueComment.py:IssueComment:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/IssueEvent.py:IssueEvent:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/IssueEvent.py:IssueEvent:actor, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:commit_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:event, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:issue, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:node_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:commit_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:label, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:assignee, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:assigner, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:review_requester, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:requested_reviewer, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:milestone, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:rename, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:dismissed_review, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:lock_reason, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/IssueEvent.py:IssueEvent:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/IssueEvent.py:IssueEvent:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/IssueEvent.py:IssueEvent:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/IssueEvent.py:IssueEvent:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/IssueEvent.py:IssueEvent:_useAttributes, method, self._makeDictAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDictAttribute
PyGithub/github/IssuePullRequest.py:IssuePullRequest:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Label.py:Label:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Label.py:Label:color, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Label.py:Label:description, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Label.py:Label:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Label.py:Label:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Label.py:Label:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Label.py:Label:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/Label.py:Label:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/License.py:License:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/License.py:License:key, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/License.py:License:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/License.py:License:spdx_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/License.py:License:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/License.py:License:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/License.py:License:description, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/License.py:License:implementation, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/License.py:License:body, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/License.py:License:permissions, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/License.py:License:conditions, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/License.py:License:limitations, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/License.py:License:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/License.py:License:_useAttributes, method, self._makeListOfStringsAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfStringsAttribute
PyGithub/github/MainClass.py:Github:__init__, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:__init__, method, Requester, , , Requester
PyGithub/github/MainClass.py:Github:rate_limiting, method, self.get_rate_limit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get_rate_limit
PyGithub/github/MainClass.py:Github:rate_limiting_resettime, method, self.get_rate_limit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get_rate_limit
PyGithub/github/MainClass.py:Github:get_rate_limit, method, RateLimit.RateLimit, [CLASS] [REPO], , [CLASS] [REPO]: RateLimit:RateLimit
PyGithub/github/MainClass.py:Github:get_license, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:get_license, method, get_licenses, , , get_licenses
PyGithub/github/MainClass.py:Github:get_license, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/MainClass.py:Github:get_licenses, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/MainClass.py:Github:get_user, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:get_user, method, AuthenticatedUser.AuthenticatedUser, [CLASS] [REPO], , [CLASS] [REPO]: AuthenticatedUser:AuthenticatedUser
PyGithub/github/MainClass.py:Github:get_user, method, get_user_by_id, , , get_user_by_id
PyGithub/github/MainClass.py:Github:get_user, method, get_users, , , get_users
PyGithub/github/MainClass.py:Github:get_user, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/MainClass.py:Github:get_user_by_id, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:get_users, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:get_users, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/MainClass.py:Github:get_organization, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:get_organization, method, get_organizations, , , get_organizations
PyGithub/github/MainClass.py:Github:get_organization, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/MainClass.py:Github:get_organizations, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:get_organizations, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/MainClass.py:Github:get_repo, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:get_repo, method, Repository.Repository, [CLASS] [REPO], , [CLASS] [REPO]: Repository:Repository
PyGithub/github/MainClass.py:Github:get_repo, method, get_repos, , , get_repos
PyGithub/github/MainClass.py:Github:get_repos, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:get_repos, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/MainClass.py:Github:get_project, method, get_project_column, , , get_project_column
PyGithub/github/MainClass.py:Github:get_gist, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:get_gist, method, get_gists, , , get_gists
PyGithub/github/MainClass.py:Github:get_gist, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/MainClass.py:Github:get_gist, method, since.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: since:strftime
PyGithub/github/MainClass.py:Github:get_gists, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:get_gists, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/MainClass.py:Github:get_gists, method, since.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: since:strftime
PyGithub/github/MainClass.py:Github:search_repositories, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:search_repositories, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/MainClass.py:Github:search_repositories, method, query_chunks.append, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: query_chunks:append
PyGithub/github/MainClass.py:Github:search_repositories, method, qualifiers.items, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: qualifiers:items
PyGithub/github/MainClass.py:Github:search_users, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:search_users, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/MainClass.py:Github:search_users, method, query_chunks.append, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: query_chunks:append
PyGithub/github/MainClass.py:Github:search_users, method, qualifiers.items, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: qualifiers:items
PyGithub/github/MainClass.py:Github:search_issues, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:search_issues, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/MainClass.py:Github:search_issues, method, query_chunks.append, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: query_chunks:append
PyGithub/github/MainClass.py:Github:search_issues, method, qualifiers.items, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: qualifiers:items
PyGithub/github/MainClass.py:Github:search_code, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:search_code, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/MainClass.py:Github:search_code, method, query_chunks.append, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: query_chunks:append
PyGithub/github/MainClass.py:Github:search_code, method, qualifiers.items, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: qualifiers:items
PyGithub/github/MainClass.py:Github:search_commits, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:search_commits, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/MainClass.py:Github:search_commits, method, query_chunks.append, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: query_chunks:append
PyGithub/github/MainClass.py:Github:search_commits, method, qualifiers.items, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: qualifiers:items
PyGithub/github/MainClass.py:Github:search_topics, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:search_topics, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/MainClass.py:Github:search_topics, method, query_chunks.append, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: query_chunks:append
PyGithub/github/MainClass.py:Github:search_topics, method, qualifiers.items, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: qualifiers:items
PyGithub/github/MainClass.py:Github:render_markdown, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:get_hook, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:get_hook, method, HookDescription.HookDescription, [CLASS] [REPO], , [CLASS] [REPO]: HookDescription:HookDescription
PyGithub/github/MainClass.py:Github:get_hook, method, get_hooks, , , get_hooks
PyGithub/github/MainClass.py:Github:get_hooks, method, HookDescription.HookDescription, [CLASS] [REPO], , [CLASS] [REPO]: HookDescription:HookDescription
PyGithub/github/MainClass.py:Github:get_gitignore_template, method, get_gitignore_template, , , get_gitignore_template
PyGithub/github/MainClass.py:Github:get_gitignore_template, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:get_gitignore_template, method, GitignoreTemplate.GitignoreTemplate, [CLASS] [REPO], , [CLASS] [REPO]: GitignoreTemplate:GitignoreTemplate
PyGithub/github/MainClass.py:Github:create_from_raw_data, method, klass, , , klass
PyGithub/github/MainClass.py:Github:dump, method, pickle.dump, [CLASS] [STDLIB], , [CLASS] [STDLIB]: pickle:dump
PyGithub/github/MainClass.py:Github:load, method, self.create_from_raw_data, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:create_from_raw_data
PyGithub/github/MainClass.py:Github:get_app, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:Github:get_app, method, GithubApp.GithubApp, [CLASS] [REPO], , [CLASS] [REPO]: GithubApp:GithubApp
PyGithub/github/MainClass.py:GithubIntegration:__init__, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:GithubIntegration:create_jwt, method, int, [BUILT_IN], , [BUILT_IN]: int
PyGithub/github/MainClass.py:GithubIntegration:create_jwt, method, jwt.encode, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: jwt:encode
PyGithub/github/MainClass.py:GithubIntegration:create_jwt, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/MainClass.py:GithubIntegration:create_jwt, method, encrypted.decode, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: encrypted:decode
PyGithub/github/MainClass.py:GithubIntegration:get_access_token, method, requests.post, [CLASS] [SIDE_PACKAGE], C:/Python39/lib/site-packages/requests, [CLASS] [SIDE_PACKAGE]: requests:post
PyGithub/github/MainClass.py:GithubIntegration:get_access_token, method, InstallationAuthorization.InstallationAuthorization, [CLASS] [REPO], , [CLASS] [REPO]: InstallationAuthorization:InstallationAuthorization
PyGithub/github/MainClass.py:GithubIntegration:get_access_token, method, GithubException.BadCredentialsException, [CLASS] [REPO], , [CLASS] [REPO]: GithubException:BadCredentialsException
PyGithub/github/MainClass.py:GithubIntegration:get_access_token, method, GithubException.UnknownObjectException, [CLASS] [REPO], , [CLASS] [REPO]: GithubException:UnknownObjectException
PyGithub/github/MainClass.py:GithubIntegration:get_access_token, method, GithubException.GithubException, [CLASS] [REPO], , [CLASS] [REPO]: GithubException:GithubException
PyGithub/github/MainClass.py:GithubIntegration:get_installation, method, requests.get, [CLASS] [SIDE_PACKAGE], C:/Python39/lib/site-packages/requests, [CLASS] [SIDE_PACKAGE]: requests:get
PyGithub/github/MainClass.py:GithubIntegration:get_installation, method, response.json, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: response:json
PyGithub/github/MainClass.py:GithubIntegration:get_installation, method, Installation.Installation, [CLASS] [REPO], , [CLASS] [REPO]: Installation:Installation
PyGithub/github/Membership.py:Membership:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Membership.py:Membership:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Membership.py:Membership:state, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Membership.py:Membership:role, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Membership.py:Membership:organization_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Membership.py:Membership:organization, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Membership.py:Membership:user, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Membership.py:Membership:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Membership.py:Membership:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Migration.py:Migration:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Migration.py:Migration:owner, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Migration.py:Migration:guid, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Migration.py:Migration:state, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Migration.py:Migration:lock_repositories, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Migration.py:Migration:exclude_attachments, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Migration.py:Migration:repositories, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Migration.py:Migration:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Migration.py:Migration:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Migration.py:Migration:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Migration.py:Migration:get_status, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/Migration.py:Migration:unlock_repo, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Migration.py:Migration:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Migration.py:Migration:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Migration.py:Migration:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Migration.py:Migration:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/Migration.py:Migration:_useAttributes, method, self._makeListOfClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfClassesAttribute
PyGithub/github/Migration.py:Migration:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Milestone.py:Milestone:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Milestone.py:Milestone:closed_issues, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Milestone.py:Milestone:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Milestone.py:Milestone:creator, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Milestone.py:Milestone:description, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Milestone.py:Milestone:due_on, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Milestone.py:Milestone:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Milestone.py:Milestone:labels_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Milestone.py:Milestone:number, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Milestone.py:Milestone:open_issues, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Milestone.py:Milestone:state, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Milestone.py:Milestone:title, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Milestone.py:Milestone:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Milestone.py:Milestone:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Milestone.py:Milestone:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Milestone.py:Milestone:edit, method, due_on.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: due_on:strftime
PyGithub/github/Milestone.py:Milestone:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/Milestone.py:Milestone:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Milestone.py:Milestone:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Milestone.py:Milestone:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Milestone.py:Milestone:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/NamedUser.py:NamedUser:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/NamedUser.py:NamedUser:node_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:twitter_username, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:__hash__, method, hash, [BUILT_IN], , [BUILT_IN]: hash
PyGithub/github/NamedUser.py:NamedUser:__eq__, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/NamedUser.py:NamedUser:__eq__, method, type, , , type
PyGithub/github/NamedUser.py:NamedUser:avatar_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:bio, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:blog, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:collaborators, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:company, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:contributions, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:disk_usage, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:email, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:events_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:followers, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:followers_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:following, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:following_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:gists_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:gravatar_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:hireable, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:invitation_teams_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:inviter, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:location, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:login, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:organizations_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:owned_private_repos, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:permissions, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:plan, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:private_gists, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:public_gists, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:public_repos, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:received_events_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:repos_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:role, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:site_admin, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:starred_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:subscriptions_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:suspended_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:team_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:total_private_repos, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:type, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/NamedUser.py:NamedUser:get_gists, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/NamedUser.py:NamedUser:get_gists, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/NamedUser.py:NamedUser:get_gists, method, since.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: since:strftime
PyGithub/github/NamedUser.py:NamedUser:get_projects, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/NamedUser.py:NamedUser:get_repo, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/NamedUser.py:NamedUser:get_repo, method, get_repos, , , get_repos
PyGithub/github/NamedUser.py:NamedUser:get_repos, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/NamedUser.py:NamedUser:get_repos, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/NamedUser.py:NamedUser:has_in_following, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/NamedUser.py:NamedUser:get_organization_membership, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/NamedUser.py:NamedUser:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/NamedUser.py:NamedUser:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/NamedUser.py:NamedUser:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/NamedUser.py:NamedUser:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/NamedUser.py:NamedUser:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Notification.py:Notification:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Notification.py:Notification:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Notification.py:Notification:last_read_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Notification.py:Notification:repository, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Notification.py:Notification:subject, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Notification.py:Notification:reason, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Notification.py:Notification:subscription_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Notification.py:Notification:unread, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Notification.py:Notification:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Notification.py:Notification:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Notification.py:Notification:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Notification.py:Notification:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Notification.py:Notification:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Notification.py:Notification:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/NotificationSubject.py:NotificationSubject:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/NotificationSubject.py:NotificationSubject:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Organization.py:Organization:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Organization.py:Organization:avatar_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:billing_email, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:blog, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:collaborators, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:company, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:default_repository_permission, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:description, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:disk_usage, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:email, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:events_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:followers, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:following, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:gravatar_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:has_organization_projects, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:has_repository_projects, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:hooks_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:issues_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:location, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:login, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:members_can_create_repositories, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:members_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:owned_private_repos, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:plan, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:private_gists, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:public_gists, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:public_members_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:public_repos, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:repos_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:total_private_repos, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:two_factor_requirement_enabled, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:type, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Organization.py:Organization:add_to_members, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:add_to_public_members, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:create_fork, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:create_hook, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:create_hook, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Organization.py:Organization:create_project, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:create_repo, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:create_team, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:create_team, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Organization.py:Organization:delete_hook, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:edit, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/Organization.py:Organization:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/Organization.py:Organization:edit, method, edit_hook, , , edit_hook
PyGithub/github/Organization.py:Organization:edit_hook, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:edit_hook, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Organization.py:Organization:get_hook, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:get_hook, method, get_hooks, , , get_hooks
PyGithub/github/Organization.py:Organization:get_issues, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:get_issues, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Organization.py:Organization:get_issues, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/Organization.py:Organization:get_issues, method, since.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: since:strftime
PyGithub/github/Organization.py:Organization:get_members, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:get_projects, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/Organization.py:Organization:get_outside_collaborators, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:remove_outside_collaborator, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:convert_to_outside_collaborator, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:get_repo, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:get_repo, method, get_repos, , , get_repos
PyGithub/github/Organization.py:Organization:get_repos, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:get_repos, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/Organization.py:Organization:get_team, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:get_team, method, get_team_by_slug, , , get_team_by_slug
PyGithub/github/Organization.py:Organization:get_team, method, get_teams, , , get_teams
PyGithub/github/Organization.py:Organization:get_team_by_slug, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:invite_user, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:invite_user, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Organization.py:Organization:has_in_members, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:has_in_public_members, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:remove_from_membership, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:remove_from_members, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:remove_from_members, method, remove_from_members, , , remove_from_members
PyGithub/github/Organization.py:Organization:remove_from_public_members, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:create_migration, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Organization.py:Organization:create_migration, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Organization.py:Organization:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Organization.py:Organization:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Organization.py:Organization:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Organization.py:Organization:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/Organization.py:Organization:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/PaginatedList.py:PaginatedListBase:__init__, method, list, , , list
PyGithub/github/PaginatedList.py:PaginatedListBase:__getitem__, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PaginatedList.py:PaginatedListBase:__getitem__, method, self.__fetchToIndex, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__fetchToIndex
PyGithub/github/PaginatedList.py:PaginatedListBase:__getitem__, method, self._Slice, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_Slice
PyGithub/github/PaginatedList.py:PaginatedListBase:__iter__, method, self._couldGrow, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_couldGrow
PyGithub/github/PaginatedList.py:PaginatedListBase:__iter__, method, self._grow, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_grow
PyGithub/github/PaginatedList.py:PaginatedListBase:_isBiggerThan, method, len, , , len
PyGithub/github/PaginatedList.py:PaginatedListBase:_isBiggerThan, method, self._couldGrow, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_couldGrow
PyGithub/github/PaginatedList.py:PaginatedListBase:__fetchToIndex, method, len, , , len
PyGithub/github/PaginatedList.py:PaginatedListBase:__fetchToIndex, method, self._couldGrow, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_couldGrow
PyGithub/github/PaginatedList.py:PaginatedListBase:__fetchToIndex, method, self._grow, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_grow
PyGithub/github/PaginatedList.py:PaginatedListBase:_grow, method, self._fetchNextPage, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_fetchNextPage
PyGithub/github/PaginatedList.py:PaginatedList:__init__, method, super, , , super
PyGithub/github/PaginatedList.py:PaginatedList:totalCount, method, params.update, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: params:update
PyGithub/github/PaginatedList.py:PaginatedList:totalCount, method, len, , , len
PyGithub/github/PaginatedList.py:PaginatedList:totalCount, method, self.__parseLinkHeader, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__parseLinkHeader
PyGithub/github/PaginatedList.py:PaginatedList:totalCount, method, links.get, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: links:get
PyGithub/github/PaginatedList.py:PaginatedList:totalCount, method, int, [BUILT_IN], , [BUILT_IN]: int
PyGithub/github/PaginatedList.py:PaginatedList:_getLastPageUrl, method, self.__parseLinkHeader, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__parseLinkHeader
PyGithub/github/PaginatedList.py:PaginatedList:_getLastPageUrl, method, links.get, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: links:get
PyGithub/github/PaginatedList.py:PaginatedList:reversed, method, PaginatedList, , , PaginatedList
PyGithub/github/PaginatedList.py:PaginatedList:reversed, method, r.__reverse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: r:__reverse
PyGithub/github/PaginatedList.py:PaginatedList:__reverse, method, self._getLastPageUrl, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_getLastPageUrl
PyGithub/github/PaginatedList.py:PaginatedList:_fetchNextPage, method, len, , , len
PyGithub/github/PaginatedList.py:PaginatedList:_fetchNextPage, method, self.__parseLinkHeader, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__parseLinkHeader
PyGithub/github/PaginatedList.py:PaginatedList:_fetchNextPage, method, data.get, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: data:get
PyGithub/github/PaginatedList.py:PaginatedList:_fetchNextPage, method, self.__contentClass, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__contentClass
PyGithub/github/PaginatedList.py:PaginatedList:__parseLinkHeader, method, linkHeader.split, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: linkHeader:split
PyGithub/github/PaginatedList.py:PaginatedList:get_page, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/PaginatedList.py:PaginatedList:get_page, method, data.get, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: data:get
PyGithub/github/PaginatedList.py:PaginatedList:get_page, method, self.__contentClass, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__contentClass
PyGithub/github/Path.py:Path:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Path.py:Path:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Path.py:Path:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Permissions.py:Permissions:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Permissions.py:Permissions:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/Plan.py:Plan:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Plan.py:Plan:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Plan.py:Plan:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Project.py:Project:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Project.py:Project:body, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Project.py:Project:columns_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Project.py:Project:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Project.py:Project:creator, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Project.py:Project:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Project.py:Project:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Project.py:Project:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Project.py:Project:node_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Project.py:Project:number, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Project.py:Project:owner_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Project.py:Project:state, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Project.py:Project:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Project.py:Project:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Project.py:Project:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Project.py:Project:edit, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/Project.py:Project:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/Project.py:Project:create_column, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Project.py:Project:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Project.py:Project:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Project.py:Project:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Project.py:Project:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/ProjectCard.py:ProjectCard:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/ProjectCard.py:ProjectCard:get_content, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/ProjectCard.py:ProjectCard:get_content, method, ValueError, , , ValueError
PyGithub/github/ProjectCard.py:ProjectCard:get_content, method, retclass, , , retclass
PyGithub/github/ProjectCard.py:ProjectCard:move, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/ProjectCard.py:ProjectCard:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/ProjectCard.py:ProjectCard:edit, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/ProjectCard.py:ProjectCard:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/ProjectCard.py:ProjectCard:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/ProjectCard.py:ProjectCard:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/ProjectCard.py:ProjectCard:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/ProjectCard.py:ProjectCard:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/ProjectCard.py:ProjectCard:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/ProjectColumn.py:ProjectColumn:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/ProjectColumn.py:ProjectColumn:get_cards, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/ProjectColumn.py:ProjectColumn:get_cards, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/ProjectColumn.py:ProjectColumn:create_card, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/ProjectColumn.py:ProjectColumn:move, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/ProjectColumn.py:ProjectColumn:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/ProjectColumn.py:ProjectColumn:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/ProjectColumn.py:ProjectColumn:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/ProjectColumn.py:ProjectColumn:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/ProjectColumn.py:ProjectColumn:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/PublicKey.py:encrypt, function, public.PublicKey, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: public:PublicKey
PyGithub/github/PublicKey.py:encrypt, function, encoding.Base64Encoder, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: encoding:Base64Encoder
PyGithub/github/PublicKey.py:encrypt, function, public.SealedBox, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: public:SealedBox
PyGithub/github/PublicKey.py:encrypt, function, sealed_box.encrypt, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: sealed_box:encrypt
PyGithub/github/PublicKey.py:encrypt, function, b64encode, [FUNC] [SIDE_PACKAGE], , [FUNC] [SIDE_PACKAGE]: base64.b64encode
PyGithub/github/PublicKey.py:PublicKey:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/PublicKey.py:PublicKey:key, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PublicKey.py:PublicKey:key_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PublicKey.py:PublicKey:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/PublicKey.py:PublicKey:_useAttributes, method, type, , , type
PyGithub/github/PublicKey.py:PublicKey:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/PublicKey.py:PublicKey:encrypt, method, encrypt, , , encrypt
PyGithub/github/PullRequest.py:PullRequest:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/PullRequest.py:PullRequest:additions, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:assignee, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:assignees, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:base, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:body, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:changed_files, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:closed_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:comments, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:comments_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:commits, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:commits_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:deletions, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:diff_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:draft, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:head, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:issue_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:labels, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:merge_commit_sha, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:mergeable, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:mergeable_state, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:merged, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:merged_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:merged_by, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:milestone, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:number, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:patch_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:rebaseable, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:review_comment_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:review_comments, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:review_comments_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:state, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:title, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:user, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:maintainer_can_modify, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:create_comment, method, self.create_review_comment, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:create_review_comment
PyGithub/github/PullRequest.py:PullRequest:create_review_comment, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:create_review_comment, method, create_review_comment_reply, , , create_review_comment_reply
PyGithub/github/PullRequest.py:PullRequest:create_review_comment_reply, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:create_issue_comment, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:create_review, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:create_review, method, create_review_comment_reply, , , create_review_comment_reply
PyGithub/github/PullRequest.py:PullRequest:create_review_request, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/PullRequest.py:PullRequest:create_review_request, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/PullRequest.py:PullRequest:create_review_request, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:delete_review_request, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/PullRequest.py:PullRequest:delete_review_request, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/PullRequest.py:PullRequest:delete_review_request, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:edit, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/PullRequest.py:PullRequest:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/PullRequest.py:PullRequest:get_comment, method, self.get_review_comment, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get_review_comment
PyGithub/github/PullRequest.py:PullRequest:get_review_comment, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:get_comments, method, self.get_review_comments, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get_review_comments
PyGithub/github/PullRequest.py:PullRequest:get_review_comments, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:get_review_comments, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/PullRequest.py:PullRequest:get_review_comments, method, since.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: since:strftime
PyGithub/github/PullRequest.py:PullRequest:get_single_review_comments, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:get_issue_comment, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:get_issue_comment, method, get_issue_comments, , , get_issue_comments
PyGithub/github/PullRequest.py:PullRequest:get_review, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:add_to_labels, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/PullRequest.py:PullRequest:add_to_labels, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:remove_from_labels, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:set_labels, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/PullRequest.py:PullRequest:set_labels, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:merge, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequest.py:PullRequest:add_to_assignees, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/PullRequest.py:PullRequest:add_to_assignees, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:add_to_assignees, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/PullRequest.py:PullRequest:remove_from_assignees, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/PullRequest.py:PullRequest:remove_from_assignees, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:remove_from_assignees, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/PullRequest.py:PullRequest:update_branch, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequest.py:PullRequest:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/PullRequest.py:PullRequest:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/PullRequest.py:PullRequest:_useAttributes, method, self._makeListOfClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfClassesAttribute
PyGithub/github/PullRequest.py:PullRequest:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/PullRequest.py:PullRequest:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/PullRequest.py:PullRequest:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/PullRequestComment.py:PullRequestComment:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/PullRequestComment.py:PullRequestComment:body, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequestComment.py:PullRequestComment:commit_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequestComment.py:PullRequestComment:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequestComment.py:PullRequestComment:diff_hunk, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequestComment.py:PullRequestComment:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequestComment.py:PullRequestComment:in_reply_to_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequestComment.py:PullRequestComment:original_commit_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequestComment.py:PullRequestComment:original_position, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequestComment.py:PullRequestComment:path, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequestComment.py:PullRequestComment:position, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequestComment.py:PullRequestComment:pull_request_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequestComment.py:PullRequestComment:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequestComment.py:PullRequestComment:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequestComment.py:PullRequestComment:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequestComment.py:PullRequestComment:user, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/PullRequestComment.py:PullRequestComment:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequestComment.py:PullRequestComment:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/PullRequestComment.py:PullRequestComment:create_reaction, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequestComment.py:PullRequestComment:delete_reaction, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequestComment.py:PullRequestComment:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/PullRequestComment.py:PullRequestComment:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/PullRequestComment.py:PullRequestComment:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/PullRequestComment.py:PullRequestComment:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/PullRequestMergeStatus.py:PullRequestMergeStatus:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/PullRequestMergeStatus.py:PullRequestMergeStatus:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/PullRequestMergeStatus.py:PullRequestMergeStatus:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/PullRequestPart.py:PullRequestPart:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/PullRequestPart.py:PullRequestPart:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/PullRequestPart.py:PullRequestPart:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/PullRequestReview.py:PullRequestReview:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/PullRequestReview.py:PullRequestReview:dismiss, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/PullRequestReview.py:PullRequestReview:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/PullRequestReview.py:PullRequestReview:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/PullRequestReview.py:PullRequestReview:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/PullRequestReview.py:PullRequestReview:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Rate.py:Rate:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Rate.py:Rate:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Rate.py:Rate:_useAttributes, method, self._makeTimestampAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeTimestampAttribute
PyGithub/github/RateLimit.py:RateLimit:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/RateLimit.py:RateLimit:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Reaction.py:Reaction:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Reaction.py:Reaction:content, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Reaction.py:Reaction:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Reaction.py:Reaction:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Reaction.py:Reaction:user, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Reaction.py:Reaction:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Reaction.py:Reaction:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Reaction.py:Reaction:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Reaction.py:Reaction:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Referrer.py:Referrer:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Referrer.py:Referrer:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Referrer.py:Referrer:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Repository.py:Repository:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Repository.py:Repository:allow_merge_commit, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:allow_rebase_merge, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:allow_squash_merge, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:archived, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:archive_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:assignees_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:blobs_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:branches_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:clone_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:collaborators_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:comments_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:commits_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:compare_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:contents_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:contributors_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:default_branch, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:delete_branch_on_merge, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:deployments_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:description, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:downloads_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:events_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:fork, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:forks, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:forks_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:forks_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:full_name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:git_commits_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:git_refs_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:git_tags_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:git_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:has_downloads, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:has_issues, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:has_pages, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:has_projects, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:has_wiki, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:homepage, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:hooks_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:issue_comment_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:issue_events_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:issues_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:keys_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:labels_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:language, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:languages_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:master_branch, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:merges_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:milestones_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:mirror_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:network_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:notifications_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:open_issues, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:open_issues_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:organization, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:owner, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:parent, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:permissions, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:private, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:pulls_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:pushed_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:releases_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:size, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:source, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:ssh_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:stargazers_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:stargazers_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:statuses_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:subscribers_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:subscribers_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:subscription_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:svn_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:tags_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:teams_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:trees_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:watchers, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:watchers_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:add_to_collaborators, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:remove_invitation, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:compare, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:create_git_blob, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:create_git_tree, method, all, [BUILT_IN], , [BUILT_IN]: all
PyGithub/github/Repository.py:Repository:create_git_tree, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:create_key, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:create_label, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:create_project, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:create_pull, method, len, , , len
PyGithub/github/Repository.py:Repository:create_pull, method, self.__create_pull_1, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__create_pull_1
PyGithub/github/Repository.py:Repository:create_pull, method, self.__create_pull_2, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__create_pull_2
PyGithub/github/Repository.py:Repository:__create_pull_1, method, self.__create_pull, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__create_pull
PyGithub/github/Repository.py:Repository:__create_pull_2, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:__create_pull_2, method, self.__create_pull, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__create_pull
PyGithub/github/Repository.py:Repository:__create_pull, method, self.__create_pull, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__create_pull
PyGithub/github/Repository.py:Repository:__create_pull, method, __create_pull_2, , , __create_pull_2
PyGithub/github/Repository.py:Repository:create_secret, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:create_secret, method, self.get_public_key, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get_public_key
PyGithub/github/Repository.py:Repository:create_secret, method, public_key.encrypt, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: public_key:encrypt
PyGithub/github/Repository.py:Repository:delete_secret, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:create_source_import, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:delete, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Repository.py:Repository:edit, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:edit, method, self._useAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_useAttributes
PyGithub/github/Repository.py:Repository:get_archive_link, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:get_branch, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:get_branch, method, get_branches, , , get_branches
PyGithub/github/Repository.py:Repository:get_collaborators, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:get_commits, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:get_commits, method, until.strftime, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: until:strftime
PyGithub/github/Repository.py:Repository:get_contents, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:get_contents, method, headers.get, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: headers:get
PyGithub/github/Repository.py:Repository:get_deployments, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:get_deployment, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:get_deployment, method, get_deployment, , , get_deployment
PyGithub/github/Repository.py:Repository:create_deployment, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:get_views_traffic, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:get_clones_traffic, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:create_file, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:create_file, method, content.encode, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: content:encode
PyGithub/github/Repository.py:Repository:create_file, method, b64encode, [FUNC] [SIDE_PACKAGE], , [FUNC] [SIDE_PACKAGE]: base64.b64encode
PyGithub/github/Repository.py:Repository:update_file, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Repository.py:Repository:update_file, method, content.encode, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: content:encode
PyGithub/github/Repository.py:Repository:update_file, method, b64encode, [FUNC] [SIDE_PACKAGE], , [FUNC] [SIDE_PACKAGE]: base64.b64encode
PyGithub/github/Repository.py:Repository:delete_file, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/RepositoryKey.py:RepositoryKey:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/RepositoryKey.py:RepositoryKey:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RepositoryKey.py:RepositoryKey:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RepositoryKey.py:RepositoryKey:key, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RepositoryKey.py:RepositoryKey:title, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RepositoryKey.py:RepositoryKey:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RepositoryKey.py:RepositoryKey:verified, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RepositoryKey.py:RepositoryKey:read_only, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RepositoryKey.py:RepositoryKey:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/RepositoryKey.py:RepositoryKey:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/RepositoryKey.py:RepositoryKey:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/RepositoryKey.py:RepositoryKey:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/RepositoryPreferences.py:RepositoryPreferences:_useAttributes, method, self._makeDictAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDictAttribute
PyGithub/github/RepositoryPreferences.py:RepositoryPreferences:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Requester.py:HTTPSRequestsConnectionClass:__init__, method, kwargs.get, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: kwargs:get
PyGithub/github/Requester.py:HTTPSRequestsConnectionClass:__init__, method, requests.Session, [CLASS] [SIDE_PACKAGE], C:/Python39/lib/site-packages/requests, [CLASS] [SIDE_PACKAGE]: requests:Session
PyGithub/github/Requester.py:HTTPSRequestsConnectionClass:getresponse, method, getattr, , , getattr
PyGithub/github/Requester.py:HTTPSRequestsConnectionClass:getresponse, method, verb, , , verb
PyGithub/github/Requester.py:HTTPSRequestsConnectionClass:getresponse, method, RequestsResponse, , , RequestsResponse
PyGithub/github/Requester.py:HTTPRequestsConnectionClass:__init__, method, kwargs.get, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: kwargs:get
PyGithub/github/Requester.py:HTTPRequestsConnectionClass:__init__, method, requests.Session, [CLASS] [SIDE_PACKAGE], C:/Python39/lib/site-packages/requests, [CLASS] [SIDE_PACKAGE]: requests:Session
PyGithub/github/Requester.py:HTTPRequestsConnectionClass:getresponse, method, getattr, , , getattr
PyGithub/github/Requester.py:HTTPRequestsConnectionClass:getresponse, method, verb, , , verb
PyGithub/github/Requester.py:HTTPRequestsConnectionClass:getresponse, method, RequestsResponse, , , RequestsResponse
PyGithub/github/Requester.py:Requester:NEW_DEBUG_FRAME, method, len, , , len
PyGithub/github/Requester.py:Requester:check_me, method, self.ON_CHECK_ME, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:ON_CHECK_ME
PyGithub/github/Requester.py:Requester:__init__, method, self._initializeDebugFeature, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_initializeDebugFeature
PyGithub/github/Requester.py:Requester:__init__, method, base64.b64encode, [CLASS] [STDLIB], , [CLASS] [STDLIB]: base64:b64encode
PyGithub/github/Requester.py:Requester:requestJsonAndCheck, method, self.__check, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__check
PyGithub/github/Requester.py:Requester:requestJsonAndCheck, method, self.__customConnection, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__customConnection
PyGithub/github/Requester.py:Requester:requestMultipartAndCheck, method, self.__check, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__check
PyGithub/github/Requester.py:Requester:requestMultipartAndCheck, method, self.__customConnection, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__customConnection
PyGithub/github/Requester.py:Requester:requestBlobAndCheck, method, self.__check, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__check
PyGithub/github/Requester.py:Requester:requestBlobAndCheck, method, self.__customConnection, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__customConnection
PyGithub/github/Requester.py:Requester:__check, method, self.__structuredFromJson, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__structuredFromJson
PyGithub/github/Requester.py:Requester:__check, method, self.__createException, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__createException
PyGithub/github/Requester.py:Requester:__customConnection, method, url.startswith, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: url:startswith
PyGithub/github/Requester.py:Requester:__customConnection, method, self.__httpConnectionClass, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__httpConnectionClass
PyGithub/github/Requester.py:Requester:__customConnection, method, self.__httpsConnectionClass, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__httpsConnectionClass
PyGithub/github/Requester.py:Requester:__createException, method, output.get, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: output:get
PyGithub/github/Requester.py:Requester:__createException, method, re.match, [CLASS] [STDLIB], , [CLASS] [STDLIB]: re:match
PyGithub/github/Requester.py:Requester:__createException, method, cls, , , cls
PyGithub/github/Requester.py:Requester:__structuredFromJson, method, len, , , len
PyGithub/github/Requester.py:Requester:__structuredFromJson, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Requester.py:Requester:__structuredFromJson, method, data.decode, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: data:decode
PyGithub/github/Requester.py:Requester:__structuredFromJson, method, json.loads, [CLASS] [STDLIB], C:/Python39/lib/json, [CLASS] [STDLIB]: json:loads
PyGithub/github/Requester.py:Requester:__structuredFromJson, method, data.startswith, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: data:startswith
PyGithub/github/Requester.py:Requester:requestJson, method, self.__check, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__check
PyGithub/github/Requester.py:Requester:requestJson, method, self.__customConnection, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__customConnection
PyGithub/github/Requester.py:Requester:requestMultipart, method, self.__check, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__check
PyGithub/github/Requester.py:Requester:requestMultipart, method, self.__customConnection, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__customConnection
PyGithub/github/Requester.py:Requester:requestBlob, method, self.__check, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__check
PyGithub/github/Requester.py:Requester:requestBlob, method, self.__customConnection, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__customConnection
PyGithub/github/Requester.py:Requester:requestMemoryBlobAndCheck, method, encode, , , encode
PyGithub/github/Requester.py:Requester:requestMemoryBlobAndCheck, method, self.__customConnection, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__customConnection
PyGithub/github/Requester.py:Requester:requestMemoryBlobAndCheck, method, self.__check, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__check
PyGithub/github/Requester.py:Requester:__requestEncode, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/Requester.py:Requester:__requestEncode, method, self.__authenticate, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__authenticate
PyGithub/github/Requester.py:Requester:__requestEncode, method, self.__makeAbsoluteUrl, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__makeAbsoluteUrl
PyGithub/github/Requester.py:Requester:__requestEncode, method, self.__addParametersToUrl, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__addParametersToUrl
PyGithub/github/Requester.py:Requester:__requestEncode, method, encode, , , encode
PyGithub/github/Requester.py:Requester:__requestEncode, method, self.NEW_DEBUG_FRAME, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:NEW_DEBUG_FRAME
PyGithub/github/Requester.py:Requester:__requestEncode, method, self.__requestRaw, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__requestRaw
PyGithub/github/Requester.py:Requester:__requestEncode, method, int, [BUILT_IN], , [BUILT_IN]: int
PyGithub/github/Requester.py:Requester:__requestEncode, method, self.DEBUG_ON_RESPONSE, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:DEBUG_ON_RESPONSE
PyGithub/github/Requester.py:Requester:__requestRaw, method, self.__createConnection, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__createConnection
PyGithub/github/Requester.py:Requester:__requestRaw, method, cnx.request, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: cnx:request
PyGithub/github/Requester.py:Requester:__requestRaw, method, cnx.getresponse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: cnx:getresponse
PyGithub/github/Requester.py:Requester:__requestRaw, method, response.getheaders, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: response:getheaders
PyGithub/github/Requester.py:Requester:__requestRaw, method, response.read, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: response:read
PyGithub/github/Requester.py:Requester:__requestRaw, method, cnx.close, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: cnx:close
PyGithub/github/Requester.py:Requester:__requestRaw, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Requester.py:Requester:__requestRaw, method, input.close, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: input:close
PyGithub/github/Requester.py:Requester:__requestRaw, method, self.__log, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__log
PyGithub/github/Requester.py:Requester:__requestRaw, method, time.sleep, [CLASS] [STDLIB], , [CLASS] [STDLIB]: time:sleep
PyGithub/github/Requester.py:Requester:__requestRaw, method, self.__requestRaw, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__requestRaw
PyGithub/github/Requester.py:Requester:__makeAbsoluteUrl, method, url.startswith, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: url:startswith
PyGithub/github/Requester.py:Requester:__addParametersToUrl, method, len, , , len
PyGithub/github/Requester.py:Requester:__createConnection, method, self.__connectionClass, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__connectionClass
PyGithub/github/Requester.py:Requester:__log, method, logging.getLogger, [CLASS] [STDLIB], C:/Python39/lib/logging, [CLASS] [STDLIB]: logging:getLogger
PyGithub/github/Requester.py:Requester:__log, method, requestHeaders.copy, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: requestHeaders:copy
PyGithub/github/RequiredPullRequestReviews.py:RequiredPullRequestReviews:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/RequiredPullRequestReviews.py:RequiredPullRequestReviews:dismiss_stale_reviews, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RequiredPullRequestReviews.py:RequiredPullRequestReviews:require_code_owner_reviews, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RequiredPullRequestReviews.py:RequiredPullRequestReviews:required_approving_review_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RequiredPullRequestReviews.py:RequiredPullRequestReviews:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RequiredPullRequestReviews.py:RequiredPullRequestReviews:dismissal_users, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RequiredPullRequestReviews.py:RequiredPullRequestReviews:dismissal_teams, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RequiredPullRequestReviews.py:RequiredPullRequestReviews:_useAttributes, method, self._makeListOfClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfClassesAttribute
PyGithub/github/RequiredPullRequestReviews.py:RequiredPullRequestReviews:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/RequiredPullRequestReviews.py:RequiredPullRequestReviews:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/RequiredPullRequestReviews.py:RequiredPullRequestReviews:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/RequiredStatusChecks.py:RequiredStatusChecks:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/RequiredStatusChecks.py:RequiredStatusChecks:strict, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RequiredStatusChecks.py:RequiredStatusChecks:contexts, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RequiredStatusChecks.py:RequiredStatusChecks:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/RequiredStatusChecks.py:RequiredStatusChecks:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/RequiredStatusChecks.py:RequiredStatusChecks:_useAttributes, method, self._makeListOfStringsAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfStringsAttribute
PyGithub/github/RequiredStatusChecks.py:RequiredStatusChecks:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/SelfHostedActionsRunner.py:SelfHostedActionsRunner:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/SelfHostedActionsRunner.py:SelfHostedActionsRunner:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/SelfHostedActionsRunner.py:SelfHostedActionsRunner:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/SelfHostedActionsRunner.py:SelfHostedActionsRunner:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/SelfHostedActionsRunner.py:SelfHostedActionsRunner:_useAttributes, method, self._makeListOfDictsAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfDictsAttribute
PyGithub/github/SourceImport.py:SourceImport:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/SourceImport.py:SourceImport:authors_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/SourceImport.py:SourceImport:authors_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/SourceImport.py:SourceImport:has_large_files, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/SourceImport.py:SourceImport:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/SourceImport.py:SourceImport:large_files_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/SourceImport.py:SourceImport:large_files_size, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/SourceImport.py:SourceImport:repository_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/SourceImport.py:SourceImport:status, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/SourceImport.py:SourceImport:status_text, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/SourceImport.py:SourceImport:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/SourceImport.py:SourceImport:use_lfs, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/SourceImport.py:SourceImport:vcs, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/SourceImport.py:SourceImport:vcs_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/SourceImport.py:SourceImport:update, method, super, , , super
PyGithub/github/SourceImport.py:SourceImport:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/SourceImport.py:SourceImport:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/SourceImport.py:SourceImport:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/Stargazer.py:Stargazer:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Stargazer.py:Stargazer:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Stargazer.py:Stargazer:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/StatsCodeFrequency.py:StatsCodeFrequency:_useAttributes, method, self._makeTimestampAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeTimestampAttribute
PyGithub/github/StatsCodeFrequency.py:StatsCodeFrequency:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/StatsCommitActivity.py:StatsCommitActivity:_useAttributes, method, self._makeTimestampAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeTimestampAttribute
PyGithub/github/StatsCommitActivity.py:StatsCommitActivity:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/StatsCommitActivity.py:StatsCommitActivity:_useAttributes, method, self._makeListOfIntsAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfIntsAttribute
PyGithub/github/StatsContributor.py:StatsContributor:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/StatsContributor.py:StatsContributor:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/StatsContributor.py:StatsContributor:_useAttributes, method, self._makeListOfClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfClassesAttribute
PyGithub/github/StatsParticipation.py:StatsParticipation:_useAttributes, method, self._makeListOfIntsAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfIntsAttribute
PyGithub/github/Tag.py:Tag:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Tag.py:Tag:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Tag.py:Tag:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Team.py:Team:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Team.py:Team:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Team.py:Team:members_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Team.py:Team:members_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Team.py:Team:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Team.py:Team:description, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Team.py:Team:permission, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Team.py:Team:repos_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Team.py:Team:repositories_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Team.py:Team:slug, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Team.py:Team:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Team.py:Team:organization, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Team.py:Team:privacy, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Team.py:Team:parent, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Team.py:Team:get_team_membership, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/TeamDiscussion.py:TeamDiscussion:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/TeamDiscussion.py:TeamDiscussion:author, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:body, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:body_html, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:body_version, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:comments_count, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:comments_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:last_edited_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:node_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:number, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:pinned, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:private, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:team_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:title, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/TeamDiscussion.py:TeamDiscussion:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/TeamDiscussion.py:TeamDiscussion:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/TeamDiscussion.py:TeamDiscussion:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/TeamDiscussion.py:TeamDiscussion:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/TeamDiscussion.py:TeamDiscussion:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/TimelineEvent.py:TimelineEvent:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/TimelineEvent.py:TimelineEvent:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/TimelineEvent.py:TimelineEvent:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/TimelineEvent.py:TimelineEvent:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/TimelineEvent.py:TimelineEvent:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/TimelineEventSource.py:TimelineEventSource:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/TimelineEventSource.py:TimelineEventSource:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/TimelineEventSource.py:TimelineEventSource:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/github/Topic.py:Topic:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Topic.py:Topic:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Topic.py:Topic:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/Topic.py:Topic:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/Topic.py:Topic:_useAttributes, method, self._makeFloatAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeFloatAttribute
PyGithub/github/UserKey.py:UserKey:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/UserKey.py:UserKey:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/UserKey.py:UserKey:key, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/UserKey.py:UserKey:title, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/UserKey.py:UserKey:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/UserKey.py:UserKey:verified, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/UserKey.py:UserKey:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/UserKey.py:UserKey:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/UserKey.py:UserKey:_useAttributes, method, self._makeBoolAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeBoolAttribute
PyGithub/github/View.py:View:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/View.py:View:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/View.py:View:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Workflow.py:Workflow:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/Workflow.py:Workflow:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Workflow.py:Workflow:name, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Workflow.py:Workflow:path, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Workflow.py:Workflow:state, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Workflow.py:Workflow:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Workflow.py:Workflow:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Workflow.py:Workflow:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Workflow.py:Workflow:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Workflow.py:Workflow:badge_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/Workflow.py:Workflow:create_dispatch, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Workflow.py:Workflow:get_runs, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/github/Workflow.py:Workflow:get_runs, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/github/Workflow.py:Workflow:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/Workflow.py:Workflow:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/Workflow.py:Workflow:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/WorkflowRun.py:WorkflowRun:__repr__, method, self.get__repr__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:get__repr__
PyGithub/github/WorkflowRun.py:WorkflowRun:id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:head_branch, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:head_sha, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:run_number, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:event, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:status, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:conclusion, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:workflow_id, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:html_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:pull_requests, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:created_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:updated_at, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:jobs_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:logs_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:check_suite_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:artifacts_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:cancel_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:rerun_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:workflow_url, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:head_commit, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:repository, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:head_repository, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:cancel, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:rerun, method, self._completeIfNotSet, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_completeIfNotSet
PyGithub/github/WorkflowRun.py:WorkflowRun:timing, method, namedtuple, [FUNC] [SIDE_PACKAGE], C:/Python39/lib/collections, [FUNC] [SIDE_PACKAGE]: collections.namedtuple
PyGithub/github/WorkflowRun.py:WorkflowRun:timing, method, data.keys, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: data:keys
PyGithub/github/WorkflowRun.py:WorkflowRun:timing, method, timingdata._make, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: timingdata:_make
PyGithub/github/WorkflowRun.py:WorkflowRun:_useAttributes, method, self._makeIntAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeIntAttribute
PyGithub/github/WorkflowRun.py:WorkflowRun:_useAttributes, method, self._makeStringAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeStringAttribute
PyGithub/github/WorkflowRun.py:WorkflowRun:_useAttributes, method, self._makeListOfClassesAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeListOfClassesAttribute
PyGithub/github/WorkflowRun.py:WorkflowRun:_useAttributes, method, self._makeDatetimeAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeDatetimeAttribute
PyGithub/github/WorkflowRun.py:WorkflowRun:_useAttributes, method, self._makeClassAttribute, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_makeClassAttribute
PyGithub/scripts/fix_headers.py:generateLicenseSection, function, sorted, [BUILT_IN], , [BUILT_IN]: sorted
PyGithub/scripts/fix_headers.py:generateLicenseSection, function, len, , , len
PyGithub/scripts/fix_headers.py:listContributors, function, set, [BUILT_IN], , [BUILT_IN]: set
PyGithub/scripts/fix_headers.py:listContributors, function, subprocess.check_output, [CLASS] [STDLIB], , [CLASS] [STDLIB]: subprocess:check_output
PyGithub/scripts/fix_headers.py:listContributors, function, contributors.add, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: contributors:add
PyGithub/scripts/fix_headers.py:extractBodyLines, function, len, , , len
PyGithub/scripts/fix_headers.py:extractBodyLines, function, bodyLines.append, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: bodyLines:append
PyGithub/scripts/fix_headers.py:findHeadersAndFiles, function, os.walk, [CLASS] [STDLIB], , [CLASS] [STDLIB]: os:walk
PyGithub/scripts/fix_headers.py:findHeadersAndFiles, function, dirs.remove, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: dirs:remove
PyGithub/scripts/fix_headers.py:findHeadersAndFiles, function, filename.endswith, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: filename:endswith
PyGithub/scripts/fix_headers.py:findHeadersAndFiles, function, fullname.endswith, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: fullname:endswith
PyGithub/scripts/fix_headers.py:findHeadersAndFiles, function, print, , , print
PyGithub/scripts/fix_headers.py:main, function, findHeadersAndFiles, , , findHeadersAndFiles
PyGithub/scripts/fix_headers.py:main, function, print, , , print
PyGithub/scripts/fix_headers.py:main, function, open, [BUILT_IN], , [BUILT_IN]: open
PyGithub/scripts/fix_headers.py:main, function, list, , , list
PyGithub/scripts/fix_headers.py:main, function, header.fix, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: header:fix
PyGithub/scripts/fix_headers.py:main, function, f.write, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: f:write
PyGithub/scripts/fix_headers.py:PythonHeader:fix, method, newLines.append, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: newLines:append
PyGithub/scripts/fix_headers.py:PythonHeader:fix, method, generateLicenseSection, , , generateLicenseSection
PyGithub/scripts/fix_headers.py:PythonHeader:fix, method, extractBodyLines, , , extractBodyLines
PyGithub/scripts/fix_headers.py:PythonHeader:fix, method, len, , , len
PyGithub/scripts/fix_headers.py:StandardHeader:fix, method, generateLicenseSection, , , generateLicenseSection
PyGithub/scripts/fix_headers.py:StandardHeader:fix, method, newLines.append, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: newLines:append
PyGithub/scripts/fix_headers.py:StandardHeader:fix, method, extractBodyLines, , , extractBodyLines
PyGithub/scripts/fix_headers.py:StandardHeader:fix, method, len, , , len
PyGithub/tests/ApplicationOAuth.py:ApplicationOAuth:setUp, method, super, , , super
PyGithub/tests/ApplicationOAuth.py:ApplicationOAuth:testLoginURL, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/ApplicationOAuth.py:ApplicationOAuth:testLoginURL, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/ApplicationOAuth.py:ApplicationOAuth:testGetAccessToken, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/ApplicationOAuth.py:ApplicationOAuth:testGetAccessToken, method, str, [BUILT_IN], , [BUILT_IN]: str
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:setUp, method, super, , , super
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testAttributes, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testEditWithAllArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testEditWithAllArguments, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testEmails, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testEmails, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testFollowing, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testFollowing, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testFollowing, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testWatching, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testWatching, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testWatching, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testStarring, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testStarring, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testStarring, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testSubscriptions, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testSubscriptions, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testSubscriptions, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetAuthorizations, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateRepository, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateProject, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateRepositoryWithAllArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateRepositoryWithAutoInit, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateAuthorizationWithoutArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateAuthorizationWithAllArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateAuthorizationWithClientIdAndSecret, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateGist, method, github.InputFileContent, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:InputFileContent
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateGist, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateGist, method, testCreateGistWithoutDescription, , , testCreateGistWithoutDescription
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateGistWithoutDescription, method, github.InputFileContent, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:InputFileContent
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateGistWithoutDescription, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateKey, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetEvents, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetOrganizationEvents, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetGists, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetStarredGists, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetIssues, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetIssues, method, testGetIssuesWithAllArguments, , , testGetIssuesWithAllArguments
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetIssues, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetIssuesWithAllArguments, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetIssuesWithAllArguments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetUserIssues, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetUserIssues, method, testGetUserIssuesWithAllArguments, , , testGetUserIssuesWithAllArguments
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetUserIssues, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetUserIssuesWithAllArguments, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetUserIssuesWithAllArguments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetKeys, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetOrgs, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetRepos, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetRepos, method, testGetReposWithArguments, , , testGetReposWithArguments
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetReposWithArguments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateFork, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetNotification, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetNotification, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetNotification, method, repr, , , repr
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetNotification, method, testGetNotifications, , , testGetNotifications
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetNotification, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetNotification, method, testGetNotificationsWithOtherArguments, , , testGetNotificationsWithOtherArguments
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetNotifications, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetNotifications, method, testGetNotificationsWithOtherArguments, , , testGetNotificationsWithOtherArguments
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetNotificationsWithOtherArguments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testMarkNotificationsAsRead, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetTeams, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testAcceptInvitation, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetInvitations, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetInvitations, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateMigration, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testCreateMigration, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testGetMigrations, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/AuthenticatedUser.py:AuthenticatedUser:testInstallations, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Authentication.py:Authentication:testNoAuthentication, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Authentication.py:Authentication:testNoAuthentication, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Authentication.py:Authentication:testBasicAuthentication, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Authentication.py:Authentication:testBasicAuthentication, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Authentication.py:Authentication:testOAuthAuthentication, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Authentication.py:Authentication:testOAuthAuthentication, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Authentication.py:Authentication:testJWTAuthentication, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Authentication.py:Authentication:testJWTAuthentication, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Authentication.py:Authentication:testUserAgent, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Authentication.py:Authentication:testUserAgent, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Authentication.py:Authentication:testAuthorizationHeaderWithLogin, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Authentication.py:Authentication:testAuthorizationHeaderWithLogin, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Authentication.py:Authentication:testAuthorizationHeaderWithLogin, method, g.get_user, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: g:get_user
PyGithub/tests/Authentication.py:Authentication:testAuthorizationHeaderWithToken, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Authentication.py:Authentication:testAuthorizationHeaderWithToken, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Authentication.py:Authentication:testAuthorizationHeaderWithToken, method, g.get_user, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: g:get_user
PyGithub/tests/Authorization.py:Authorization:setUp, method, super, , , super
PyGithub/tests/Authorization.py:Authorization:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Authorization.py:Authorization:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Authorization.py:Authorization:testAttributes, method, repr, , , repr
PyGithub/tests/Authorization.py:Authorization:testEdit, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/BadAttributes.py:BadAttributes:testBadSimpleAttribute, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/BadAttributes.py:BadAttributes:testBadSimpleAttribute, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/BadAttributes.py:BadAttributes:testBadSimpleAttribute, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/BadAttributes.py:BadAttributes:testBadAttributeTransformation, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/BadAttributes.py:BadAttributes:testBadAttributeTransformation, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/BadAttributes.py:BadAttributes:testBadTransformedAttribute, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/BadAttributes.py:BadAttributes:testBadTransformedAttribute, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/BadAttributes.py:BadAttributes:testBadSimpleAttributeInList, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/BadAttributes.py:BadAttributes:testBadSimpleAttributeInList, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/BadAttributes.py:BadAttributes:testBadAttributeInClassAttribute, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/BadAttributes.py:BadAttributes:testBadAttributeInClassAttribute, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/BadAttributes.py:BadAttributes:testBadTransformedAttributeInList, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/BadAttributes.py:BadAttributes:testBadTransformedAttributeInList, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/BadAttributes.py:BadAttributes:testBadTransformedAttributeInDict, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/BadAttributes.py:BadAttributes:testBadTransformedAttributeInDict, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/BadAttributes.py:BadAttributes:testIssue195, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/BadAttributes.py:BadAttributes:testIssue195, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/BadAttributes.py:BadAttributes:testIssue195, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Branch.py:Branch:setUp, method, super, , , super
PyGithub/tests/Branch.py:Branch:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Branch.py:Branch:testAttributes, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Branch.py:Branch:testAttributes, method, repr, , , repr
PyGithub/tests/Branch.py:Branch:testEditProtection, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Branch.py:Branch:testEditProtection, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Branch.py:Branch:testEditProtection, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Branch.py:Branch:testEditProtection, method, testEditProtectionDismissalUsersWithUserOwnedBranch, , , testEditProtectionDismissalUsersWithUserOwnedBranch
PyGithub/tests/Branch.py:Branch:testEditProtection, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Branch.py:Branch:testEditProtection, method, testEditProtectionPushRestrictionsWithUserOwnedBranch, , , testEditProtectionPushRestrictionsWithUserOwnedBranch
PyGithub/tests/Branch.py:Branch:testEditProtection, method, testEditProtectionPushRestrictionsAndDismissalUser, , , testEditProtectionPushRestrictionsAndDismissalUser
PyGithub/tests/Branch.py:Branch:testEditProtection, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Branch.py:Branch:testEditProtection, method, branch_protection.get_user_push_restrictions, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: branch_protection:get_user_push_restrictions
PyGithub/tests/Branch.py:Branch:testEditProtection, method, branch_protection.get_team_push_restrictions, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: branch_protection:get_team_push_restrictions
PyGithub/tests/Branch.py:Branch:testEditProtectionDismissalUsersWithUserOwnedBranch, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Branch.py:Branch:testEditProtectionDismissalUsersWithUserOwnedBranch, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Branch.py:Branch:testEditProtectionPushRestrictionsWithUserOwnedBranch, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Branch.py:Branch:testEditProtectionPushRestrictionsWithUserOwnedBranch, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Branch.py:Branch:testEditProtectionPushRestrictionsAndDismissalUser, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Branch.py:Branch:testEditProtectionPushRestrictionsAndDismissalUser, method, branch_protection.get_user_push_restrictions, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: branch_protection:get_user_push_restrictions
PyGithub/tests/Branch.py:Branch:testEditProtectionPushRestrictionsAndDismissalUser, method, branch_protection.get_team_push_restrictions, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: branch_protection:get_team_push_restrictions
PyGithub/tests/Branch.py:Branch:testRemoveProtection, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Branch.py:Branch:testRemoveProtection, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Branch.py:Branch:testRemoveProtection, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Branch.py:Branch:testRemoveProtection, method, protected_branch.get_protection, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: protected_branch:get_protection
PyGithub/tests/Branch.py:Branch:testRemoveProtection, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Branch.py:Branch:testEditRequiredStatusChecks, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Branch.py:Branch:testEditRequiredStatusChecks, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Branch.py:Branch:testRemoveRequiredStatusChecks, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Branch.py:Branch:testRemoveRequiredStatusChecks, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Branch.py:Branch:testEditRequiredPullRequestReviews, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Branch.py:Branch:testEditRequiredPullRequestReviews, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Branch.py:Branch:testEditRequiredPullRequestReviews, method, testEditRequiredPullRequestReviewsWithTooLargeApprovingReviewCount, , , testEditRequiredPullRequestReviewsWithTooLargeApprovingReviewCount
PyGithub/tests/Branch.py:Branch:testEditRequiredPullRequestReviews, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Branch.py:Branch:testEditRequiredPullRequestReviews, method, testEditRequiredPullRequestReviewsWithUserBranchAndDismissalUsers, , , testEditRequiredPullRequestReviewsWithUserBranchAndDismissalUsers
PyGithub/tests/Branch.py:Branch:testEditRequiredPullRequestReviewsWithTooLargeApprovingReviewCount, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Branch.py:Branch:testEditRequiredPullRequestReviewsWithTooLargeApprovingReviewCount, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Branch.py:Branch:testEditRequiredPullRequestReviewsWithUserBranchAndDismissalUsers, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Branch.py:Branch:testEditRequiredPullRequestReviewsWithUserBranchAndDismissalUsers, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Branch.py:Branch:testRemoveRequiredPullRequestReviews, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Branch.py:Branch:testRemoveRequiredPullRequestReviews, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Branch.py:Branch:testAdminEnforcement, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Branch.py:Branch:testAdminEnforcement, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Branch.py:Branch:testAddUserPushRestrictions, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Branch.py:Branch:testReplaceUserPushRestrictions, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Branch.py:Branch:testRemoveUserPushRestrictions, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Branch.py:Branch:testAddTeamPushRestrictions, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Branch.py:Branch:testReplaceTeamPushRestrictions, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Branch.py:Branch:testRemoveTeamPushRestrictions, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Branch.py:Branch:testRemovePushRestrictions, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Branch.py:Branch:testRemovePushRestrictions, method, list, , , list
PyGithub/tests/Branch.py:Branch:testRemovePushRestrictions, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/BranchProtection.py:BranchProtection:setUp, method, super, , , super
PyGithub/tests/BranchProtection.py:BranchProtection:testAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/BranchProtection.py:BranchProtection:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckRun.py:CheckRun:setUp, method, super, , , super
PyGithub/tests/CheckRun.py:CheckRun:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckRun.py:CheckRun:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/CheckRun.py:CheckRun:testAttributes, method, repr, , , repr
PyGithub/tests/CheckRun.py:CheckRun:testCheckRunOutputAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckRun.py:CheckRun:testCheckRunOutputAttributes, method, self.assertIsNone, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsNone
PyGithub/tests/CheckRun.py:CheckRun:testCheckRunOutputAttributes, method, repr, , , repr
PyGithub/tests/CheckRun.py:CheckRun:testGetCheckRunsForRef, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckRun.py:CheckRun:testGetCheckRunsForRef, method, self.assertListEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListEqual
PyGithub/tests/CheckRun.py:CheckRun:testGetCheckRunsForRef, method, testGetCheckRunsForRefFilterByCheckName, , , testGetCheckRunsForRefFilterByCheckName
PyGithub/tests/CheckRun.py:CheckRun:testGetCheckRunsForRef, method, testGetCheckRunsForRefFilterByStatus, , , testGetCheckRunsForRefFilterByStatus
PyGithub/tests/CheckRun.py:CheckRun:testGetCheckRunsForRef, method, testGetCheckRunsForRefFilterByFilter, , , testGetCheckRunsForRefFilterByFilter
PyGithub/tests/CheckRun.py:CheckRun:testGetCheckRunsForRefFilterByCheckName, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckRun.py:CheckRun:testGetCheckRunsForRefFilterByCheckName, method, self.assertListEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListEqual
PyGithub/tests/CheckRun.py:CheckRun:testGetCheckRunsForRefFilterByStatus, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckRun.py:CheckRun:testGetCheckRunsForRefFilterByStatus, method, self.assertListEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListEqual
PyGithub/tests/CheckRun.py:CheckRun:testGetCheckRunsForRefFilterByFilter, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckRun.py:CheckRun:testGetCheckRunsForRefFilterByFilter, method, self.assertListEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListEqual
PyGithub/tests/CheckRun.py:CheckRun:testCreateCheckRunInProgress, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckRun.py:CheckRun:testCreateCheckRunInProgress, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/CheckRun.py:CheckRun:testCreateCheckRunInProgress, method, self.assertIsNone, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsNone
PyGithub/tests/CheckRun.py:CheckRun:testCreateCheckRunInProgress, method, check_run.edit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: check_run:edit
PyGithub/tests/CheckRun.py:CheckRun:testCreateCheckRunCompleted, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckRun.py:CheckRun:testCreateCheckRunCompleted, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/CheckRun.py:CheckRun:testUpdateCheckRunSuccess, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckRun.py:CheckRun:testUpdateCheckRunSuccess, method, check_run.edit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: check_run:edit
PyGithub/tests/CheckRun.py:CheckRun:testUpdateCheckRunFailure, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckRun.py:CheckRun:testUpdateCheckRunFailure, method, check_run.edit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: check_run:edit
PyGithub/tests/CheckRun.py:CheckRun:testUpdateCheckRunAll, method, check_run.edit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: check_run:edit
PyGithub/tests/CheckRun.py:CheckRun:testUpdateCheckRunAll, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckRun.py:CheckRun:testUpdateCheckRunAll, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/CheckRun.py:CheckRun:testCheckRunAnnotationAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckRun.py:CheckRun:testCheckRunAnnotationAttributes, method, check_run.get_annotations, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: check_run:get_annotations
PyGithub/tests/CheckRun.py:CheckRun:testCheckRunAnnotationAttributes, method, self.assertIsNone, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsNone
PyGithub/tests/CheckRun.py:CheckRun:testListCheckRunAnnotations, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckRun.py:CheckRun:testListCheckRunAnnotations, method, check_run.get_annotations, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: check_run:get_annotations
PyGithub/tests/CheckRun.py:CheckRun:testListCheckRunAnnotations, method, self.assertListEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListEqual
PyGithub/tests/CheckSuite.py:CheckSuite:setUp, method, super, , , super
PyGithub/tests/CheckSuite.py:CheckSuite:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testAttributes, method, datetime, [FUNC] [SIDE_PACKAGE], , [FUNC] [SIDE_PACKAGE]: datetime.datetime
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckSuitesForRef, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckSuitesForRef, method, self.assertListEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckSuitesForRef, method, testGetCheckSuitesForRefFilterByAppId, , , testGetCheckSuitesForRefFilterByAppId
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckSuitesForRef, method, testGetCheckSuitesForRefFilterByCheckName, , , testGetCheckSuitesForRefFilterByCheckName
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckSuitesForRefFilterByAppId, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckSuitesForRefFilterByAppId, method, self.assertListEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckSuitesForRefFilterByCheckName, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckSuitesForRefFilterByCheckName, method, self.assertListEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testCheckSuiteRerequest, method, cs.rerequest, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: cs:rerequest
PyGithub/tests/CheckSuite.py:CheckSuite:testCheckSuiteRerequest, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckRuns, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckRuns, method, self.assertListEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckRuns, method, testGetCheckRunsFilterByCheckName, , , testGetCheckRunsFilterByCheckName
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckRuns, method, testGetCheckRunsFilterByStatus, , , testGetCheckRunsFilterByStatus
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckRuns, method, testGetCheckRunsFilterByFilter, , , testGetCheckRunsFilterByFilter
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckRunsFilterByCheckName, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckRunsFilterByStatus, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckRunsFilterByStatus, method, self.assertListEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckRunsFilterByFilter, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testGetCheckRunsFilterByFilter, method, self.assertListEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testCreateCheckSuite, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testCreateCheckSuite, method, self.assertIsNone, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsNone
PyGithub/tests/CheckSuite.py:CheckSuite:testUpdateCheckSuitesPreferences, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/CheckSuite.py:CheckSuite:testUpdateCheckSuitesPreferences, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CheckSuite.py:CheckSuite:testUpdateCheckSuitesPreferences, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Commit.py:Commit:setUp, method, super, , , super
PyGithub/tests/Commit.py:Commit:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Commit.py:Commit:testAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Commit.py:Commit:testAttributes, method, repr, , , repr
PyGithub/tests/Commit.py:Commit:testGetComments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Commit.py:Commit:testCreateComment, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Commit.py:Commit:testCreateComment, method, testCreateCommentOnFileLine, , , testCreateCommentOnFileLine
PyGithub/tests/Commit.py:Commit:testCreateComment, method, testCreateCommentOnFilePosition, , , testCreateCommentOnFilePosition
PyGithub/tests/Commit.py:Commit:testCreateCommentOnFileLine, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Commit.py:Commit:testCreateCommentOnFilePosition, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Commit.py:Commit:testCreateStatusWithoutOptionalParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Commit.py:Commit:testCreateStatusWithAllParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Commit.py:Commit:testGetPulls, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/CommitCombinedStatus.py:CommitCombinedStatus:setUp, method, super, , , super
PyGithub/tests/CommitCombinedStatus.py:CommitCombinedStatus:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CommitCombinedStatus.py:CommitCombinedStatus:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/CommitCombinedStatus.py:CommitCombinedStatus:testAttributes, method, repr, , , repr
PyGithub/tests/CommitComment.py:CommitComment:setUp, method, super, , , super
PyGithub/tests/CommitComment.py:CommitComment:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CommitComment.py:CommitComment:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/CommitComment.py:CommitComment:testAttributes, method, repr, , , repr
PyGithub/tests/CommitComment.py:CommitComment:testGetReactions, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CommitComment.py:CommitComment:testCreateReaction, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CommitComment.py:CommitComment:testDeleteReaction, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/CommitStatus.py:CommitStatus:setUp, method, super, , , super
PyGithub/tests/CommitStatus.py:CommitStatus:setUp, method, list, , , list
PyGithub/tests/CommitStatus.py:CommitStatus:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/CommitStatus.py:CommitStatus:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/CommitStatus.py:CommitStatus:testAttributes, method, repr, , , repr
PyGithub/tests/ConditionalRequestUpdate.py:ConditionalRequestUpdate:setUp, method, super, , , super
PyGithub/tests/ConditionalRequestUpdate.py:ConditionalRequestUpdate:testDidNotUpdate, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/ConditionalRequestUpdate.py:ConditionalRequestUpdate:testDidNotUpdate, method, update, , , update
PyGithub/tests/ConditionalRequestUpdate.py:ConditionalRequestUpdate:testDidUpdate, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/ConditionalRequestUpdate.py:ConditionalRequestUpdate:testDidUpdate, method, update, , , update
PyGithub/tests/ConditionalRequestUpdate.py:ConditionalRequestUpdate:testUpdateObjectWithoutEtag, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/conftest.py:pytest_addoption, function, parser.addoption, [CLASS] [STDLIB], , [CLASS] [STDLIB]: parser:addoption
PyGithub/tests/conftest.py:pytest_configure, function, config.getoption, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: config:getoption
PyGithub/tests/conftest.py:pytest_configure, function, Framework.activateRecordMode, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: Framework:activateRecordMode
PyGithub/tests/conftest.py:pytest_configure, function, Framework.activateTokenAuthMode, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: Framework:activateTokenAuthMode
PyGithub/tests/conftest.py:pytest_configure, function, Framework.activateJWTAuthMode, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: Framework:activateJWTAuthMode
PyGithub/tests/Connection.py:testRecordAndReplay, function, StringIO, [FUNC] [SIDE_PACKAGE], , [FUNC] [SIDE_PACKAGE]: io.StringIO
PyGithub/tests/Connection.py:testRecordAndReplay, function, Mock, , , Mock
PyGithub/tests/Connection.py:testRecordAndReplay, function, RecordingMockConnection, , , RecordingMockConnection
PyGithub/tests/Connection.py:testRecordAndReplay, function, recording_connection.request, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: recording_connection:request
PyGithub/tests/Connection.py:testRecordAndReplay, function, recording_connection.getresponse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: recording_connection:getresponse
PyGithub/tests/Connection.py:testRecordAndReplay, function, recording_connection.close, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: recording_connection:close
PyGithub/tests/Connection.py:testRecordAndReplay, function, file.getvalue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: file:getvalue
PyGithub/tests/Connection.py:testRecordAndReplay, function, eval, [BUILT_IN], , [BUILT_IN]: eval
PyGithub/tests/Connection.py:testRecordAndReplay, function, httpretty.enable, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: httpretty:enable
PyGithub/tests/Connection.py:testRecordAndReplay, function, file.seek, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: file:seek
PyGithub/tests/Connection.py:testRecordAndReplay, function, replaying_connection_class, , , replaying_connection_class
PyGithub/tests/Connection.py:testRecordAndReplay, function, replaying_connection.request, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: replaying_connection:request
PyGithub/tests/Connection.py:testRecordAndReplay, function, replaying_connection.getresponse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: replaying_connection:getresponse
PyGithub/tests/Connection.py:testRecordAndReplay, function, httpretty.disable, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: httpretty:disable
PyGithub/tests/Connection.py:testRecordAndReplay, function, httpretty.reset, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: httpretty:reset
PyGithub/tests/Connection.py:RecordingMockConnection:__init__, method, super, , , super
PyGithub/tests/ContentFile.py:ContentFile:setUp, method, super, , , super
PyGithub/tests/ContentFile.py:ContentFile:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/ContentFile.py:ContentFile:testAttributes, method, self.assertIsNone, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsNone
PyGithub/tests/Deployment.py:Deployment:setUp, method, super, , , super
PyGithub/tests/Deployment.py:Deployment:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Deployment.py:Deployment:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Deployment.py:Deployment:testAttributes, method, repr, , , repr
PyGithub/tests/DeploymentStatus.py:DeploymentStatus:setUp, method, super, , , super
PyGithub/tests/DeploymentStatus.py:DeploymentStatus:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/DeploymentStatus.py:DeploymentStatus:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/DeploymentStatus.py:DeploymentStatus:testAttributes, method, repr, , , repr
PyGithub/tests/DeploymentStatus.py:DeploymentStatus:testCreate, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/DeploymentStatus.py:DeploymentStatus:testGetStatuses, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Download.py:Download:setUp, method, super, , , super
PyGithub/tests/Download.py:Download:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Download.py:Download:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Enterprise.py:Enterprise:testHttps, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Enterprise.py:Enterprise:testHttps, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Enterprise.py:Enterprise:testHttps, method, g.get_user, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: g:get_user
PyGithub/tests/Enterprise.py:Enterprise:testHttp, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Enterprise.py:Enterprise:testHttp, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Enterprise.py:Enterprise:testHttp, method, g.get_user, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: g:get_user
PyGithub/tests/Enterprise.py:Enterprise:testHttp, method, testHttp, , , testHttp
PyGithub/tests/Enterprise.py:Enterprise:testUnknownUrlScheme, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Enterprise.py:Enterprise:testUnknownUrlScheme, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Enterprise.py:Enterprise:testUnknownUrlScheme, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Enterprise.py:Enterprise:testLongUrl, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Enterprise.py:Enterprise:testLongUrl, method, g.get_user, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: g:get_user
PyGithub/tests/Enterprise.py:Enterprise:testLongUrl, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Enterprise.py:Enterprise:testLongUrl, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Enterprise.py:Enterprise:testSpecificPort, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Enterprise.py:Enterprise:testSpecificPort, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Enterprise.py:Enterprise:testSpecificPort, method, g.get_user, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: g:get_user
PyGithub/tests/Equality.py:Equality:testUserEquality, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Equality.py:Equality:testUserEquality, method, hash, [BUILT_IN], , [BUILT_IN]: hash
PyGithub/tests/Equality.py:Equality:testUserDifference, method, self.assertNotEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertNotEqual
PyGithub/tests/Equality.py:Equality:testUserDifference, method, hash, [BUILT_IN], , [BUILT_IN]: hash
PyGithub/tests/Equality.py:Equality:testBranchEquality, method, r.get_branch, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: r:get_branch
PyGithub/tests/Equality.py:Equality:testBranchEquality, method, self.assertNotEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertNotEqual
PyGithub/tests/Event.py:Event:setUp, method, super, , , super
PyGithub/tests/Event.py:Event:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Event.py:Event:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Event.py:Event:testAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Exceptions.py:Exceptions:testInvalidInput, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Exceptions.py:Exceptions:testInvalidInput, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Exceptions.py:Exceptions:testNonJsonDataReturnedByGithub, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Exceptions.py:Exceptions:testNonJsonDataReturnedByGithub, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Exceptions.py:Exceptions:testUnknownObject, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Exceptions.py:Exceptions:testUnknownObject, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Exceptions.py:Exceptions:testUnknownUser, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Exceptions.py:Exceptions:testUnknownUser, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Exceptions.py:Exceptions:testBadAuthentication, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Exceptions.py:Exceptions:testBadAuthentication, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Exceptions.py:Exceptions:testBadAuthentication, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Exceptions.py:Exceptions:testExceptionPickling, method, pickle.loads, [CLASS] [STDLIB], , [CLASS] [STDLIB]: pickle:loads
PyGithub/tests/Exceptions.py:Exceptions:testJSONParseError, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Exceptions.py:SpecificExceptions:testBadCredentials, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Exceptions.py:SpecificExceptions:testBadCredentials, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Exceptions.py:SpecificExceptions:test2FARequired, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Exceptions.py:SpecificExceptions:test2FARequired, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Exceptions.py:SpecificExceptions:testUnknownObject, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Exceptions.py:SpecificExceptions:testBadUserAgent, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Exceptions.py:SpecificExceptions:testBadUserAgent, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Exceptions.py:SpecificExceptions:testRateLimitExceeded, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Exceptions.py:SpecificExceptions:testRateLimitExceeded, method, exceed, , , exceed
PyGithub/tests/Exceptions.py:SpecificExceptions:testRateLimitExceeded, method, range, , , range
PyGithub/tests/Exceptions.py:SpecificExceptions:testRateLimitExceeded, method, g.get_user, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: g:get_user
PyGithub/tests/Exceptions.py:SpecificExceptions:testRateLimitExceeded, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Exceptions.py:SpecificExceptions:testAuthenticatedRateLimitExceeded, method, exceed, , , exceed
PyGithub/tests/Exceptions.py:SpecificExceptions:testAuthenticatedRateLimitExceeded, method, range, , , range
PyGithub/tests/Exceptions.py:SpecificExceptions:testAuthenticatedRateLimitExceeded, method, res.get_page, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: res:get_page
PyGithub/tests/Exceptions.py:SpecificExceptions:testAuthenticatedRateLimitExceeded, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Exceptions.py:SpecificExceptions:testAuthenticatedRateLimitExceeded, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Exceptions.py:SpecificExceptions:testIncompletableObject, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, authenticatedUser.get_repo, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: authenticatedUser:get_repo
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repository.get_branch, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repository:get_branch
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repository.get_commit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repository:get_commit
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, commit.get_statuses, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: commit:get_statuses
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repository.get_milestone, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repository:get_milestone
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, gist.get_comment, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: gist:get_comment
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repository.get_git_commit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repository:get_git_commit
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repository.get_git_tree, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repository:get_git_tree
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repository.get_git_blob, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repository:get_git_blob
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repository.get_git_ref, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repository:get_git_ref
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repository.get_issue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repository:get_issue
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, issue.get_comment, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: issue:get_comment
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, issue.get_events, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: issue:get_events
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, organization.get_team, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: organization:get_team
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repository.get_label, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repository:get_label
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repository.get_pull, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repository:get_pull
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, pullRequest.get_review_comment, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: pullRequest:get_review_comment
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, pullRequest.get_files, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: pullRequest:get_files
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repository.get_comment, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repository:get_comment
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repository.get_hooks, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repository:get_hooks
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repository.compare, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repository:compare
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repository.get_contents, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repository:get_contents
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repository.get_events, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repository:get_events
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, authenticatedUser.get_notification, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: authenticatedUser:get_notification
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, self.gatherMissingAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:gatherMissingAttributes
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, sorted, [BUILT_IN], , [BUILT_IN]: sorted
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, print, , , print
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, repr, , , repr
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:testAllClasses, method, missingAttributes.values, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: missingAttributes:values
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:findMissingAttributes, method, hasattr, , , hasattr
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:findMissingAttributes, method, obj.update, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: obj:update
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:gatherMissingAttributes, method, dict, [BUILT_IN], , [BUILT_IN]: dict
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:gatherMissingAttributes, method, self.findMissingAttributes, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:findMissingAttributes
PyGithub/tests/ExposeAllAttributes.py:ExposeAllAttributes:gatherMissingAttributes, method, len, , , len
PyGithub/tests/Framework.py:readLine, function, file_.readline, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: file_:readline
PyGithub/tests/Framework.py:readLine, function, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/tests/Framework.py:readLine, function, line.decode, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: line:decode
PyGithub/tests/Framework.py:readLine, function, line.strip, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: line:strip
PyGithub/tests/Framework.py:RecordingConnection:__init__, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/tests/Framework.py:RecordingConnection:__init__, method, self._realConnection, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_realConnection
PyGithub/tests/Framework.py:RecordingConnection:request, method, headers.copy, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: headers:copy
PyGithub/tests/Framework.py:RecordingConnection:request, method, fixAuthorizationHeader, , , fixAuthorizationHeader
PyGithub/tests/Framework.py:RecordingConnection:request, method, self.__writeLine, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__writeLine
PyGithub/tests/Framework.py:RecordingConnection:getresponse, method, res.getheaders, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: res:getheaders
PyGithub/tests/Framework.py:RecordingConnection:getresponse, method, res.read, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: res:read
PyGithub/tests/Framework.py:RecordingConnection:getresponse, method, self.__writeLine, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__writeLine
PyGithub/tests/Framework.py:RecordingConnection:getresponse, method, FakeHttpResponse, , , FakeHttpResponse
PyGithub/tests/Framework.py:RecordingConnection:close, method, self.__writeLine, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__writeLine
PyGithub/tests/Framework.py:RecordingHttpConnection:__init__, method, super, , , super
PyGithub/tests/Framework.py:RecordingHttpsConnection:__init__, method, super, , , super
PyGithub/tests/Framework.py:ReplayingConnection:__init__, method, CaseInsensitiveDict, , , CaseInsensitiveDict
PyGithub/tests/Framework.py:ReplayingConnection:__init__, method, self._realConnection, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:_realConnection
PyGithub/tests/Framework.py:ReplayingConnection:request, method, Url, , , Url
PyGithub/tests/Framework.py:ReplayingConnection:request, method, httpretty.register_uri, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: httpretty:register_uri
PyGithub/tests/Framework.py:ReplayingConnection:__readNextRequest, method, fixAuthorizationHeader, , , fixAuthorizationHeader
PyGithub/tests/Framework.py:ReplayingConnection:__readNextRequest, method, readLine, , , readLine
PyGithub/tests/Framework.py:ReplayingConnection:__readNextRequest, method, str, [BUILT_IN], , [BUILT_IN]: str
PyGithub/tests/Framework.py:ReplayingConnection:__readNextRequest, method, self.__splitUrl, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__splitUrl
PyGithub/tests/Framework.py:ReplayingConnection:__readNextRequest, method, eval, [BUILT_IN], , [BUILT_IN]: eval
PyGithub/tests/Framework.py:ReplayingConnection:__readNextRequest, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/tests/Framework.py:ReplayingConnection:__readNextRequest, method, input.replace, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: input:replace
PyGithub/tests/Framework.py:ReplayingConnection:__readNextRequest, method, input.startswith, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: input:startswith
PyGithub/tests/Framework.py:ReplayingConnection:__readNextRequest, method, json.loads, [CLASS] [STDLIB], C:/Python39/lib/json, [CLASS] [STDLIB]: json:loads
PyGithub/tests/Framework.py:ReplayingConnection:__splitUrl, method, url.split, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: url:split
PyGithub/tests/Framework.py:ReplayingConnection:__splitUrl, method, len, , , len
PyGithub/tests/Framework.py:ReplayingConnection:__splitUrl, method, sorted, [BUILT_IN], , [BUILT_IN]: sorted
PyGithub/tests/Framework.py:ReplayingConnection:__request_callback, method, self.__readNextRequest, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__readNextRequest
PyGithub/tests/Framework.py:ReplayingConnection:__request_callback, method, int, [BUILT_IN], , [BUILT_IN]: int
PyGithub/tests/Framework.py:ReplayingConnection:__request_callback, method, CaseInsensitiveDict, , , CaseInsensitiveDict
PyGithub/tests/Framework.py:ReplayingConnection:__request_callback, method, bytearray, , , bytearray
PyGithub/tests/Framework.py:ReplayingConnection:__request_callback, method, readLine, , , readLine
PyGithub/tests/Framework.py:ReplayingConnection:__request_callback, method, adding_headers.pop, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: adding_headers:pop
PyGithub/tests/Framework.py:ReplayingConnection:__request_callback, method, response_headers.update, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: response_headers:update
PyGithub/tests/Framework.py:ReplayingHttpConnection:__init__, method, super, , , super
PyGithub/tests/Framework.py:ReplayingHttpsConnection:__init__, method, super, , , super
PyGithub/tests/Framework.py:BasicTestCase:setUp, method, super, , , super
PyGithub/tests/Framework.py:BasicTestCase:setUp, method, RecordingHttpConnection, , , RecordingHttpConnection
PyGithub/tests/Framework.py:BasicTestCase:setUp, method, self.__openFile, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__openFile
PyGithub/tests/Framework.py:BasicTestCase:setUp, method, RecordingHttpsConnection, , , RecordingHttpsConnection
PyGithub/tests/Framework.py:BasicTestCase:setUp, method, ReplayingHttpConnection, , , ReplayingHttpConnection
PyGithub/tests/Framework.py:BasicTestCase:setUp, method, ReplayingHttpsConnection, , , ReplayingHttpsConnection
PyGithub/tests/Framework.py:BasicTestCase:setUp, method, httpretty.enable, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: httpretty:enable
PyGithub/tests/Framework.py:BasicTestCase:tearDown, method, super, , , super
PyGithub/tests/Framework.py:BasicTestCase:tearDown, method, httpretty.disable, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: httpretty:disable
PyGithub/tests/Framework.py:BasicTestCase:tearDown, method, httpretty.reset, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: httpretty:reset
PyGithub/tests/Framework.py:BasicTestCase:tearDown, method, self.__closeReplayFileIfNeeded, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__closeReplayFileIfNeeded
PyGithub/tests/Framework.py:BasicTestCase:__openFile, method, traceback.extract_stack, [CLASS] [STDLIB], , [CLASS] [STDLIB]: traceback:extract_stack
PyGithub/tests/Framework.py:BasicTestCase:__openFile, method, functionName.startswith, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: functionName:startswith
PyGithub/tests/Framework.py:BasicTestCase:__openFile, method, Hook, , , Hook
PyGithub/tests/Framework.py:BasicTestCase:__openFile, method, self.__closeReplayFileIfNeeded, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:__closeReplayFileIfNeeded
PyGithub/tests/Framework.py:BasicTestCase:__openFile, method, open, [BUILT_IN], , [BUILT_IN]: open
PyGithub/tests/Framework.py:BasicTestCase:__closeReplayFileIfNeeded, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Framework.py:BasicTestCase:assertListKeyEqual, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Framework.py:BasicTestCase:assertListKeyBegin, method, len, , , len
PyGithub/tests/Framework.py:BasicTestCase:assertListKeyBegin, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Framework.py:TestCase:doCheckFrame, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Framework.py:TestCase:getFrameChecker, method, self.doCheckFrame, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:doCheckFrame
PyGithub/tests/Framework.py:TestCase:setUp, method, super, , , super
PyGithub/tests/Framework.py:TestCase:setUp, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Gist.py:Gist:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Gist.py:Gist:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Gist.py:Gist:testAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Gist.py:Gist:testAttributes, method, repr, , , repr
PyGithub/tests/Gist.py:Gist:testEditWithoutParameters, method, gist.edit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: gist:edit
PyGithub/tests/Gist.py:Gist:testEditWithoutParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Gist.py:Gist:testEditWithoutParameters, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Gist.py:Gist:testEditWithAllParameters, method, gist.edit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: gist:edit
PyGithub/tests/Gist.py:Gist:testEditWithAllParameters, method, github.InputFileContent, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:InputFileContent
PyGithub/tests/Gist.py:Gist:testEditWithAllParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Gist.py:Gist:testEditWithAllParameters, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Gist.py:Gist:testDeleteFile, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Gist.py:Gist:testDeleteFile, method, gist.edit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: gist:edit
PyGithub/tests/Gist.py:Gist:testRenameFile, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Gist.py:Gist:testRenameFile, method, gist.edit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: gist:edit
PyGithub/tests/Gist.py:Gist:testRenameFile, method, github.InputFileContent, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:InputFileContent
PyGithub/tests/Gist.py:Gist:testCreateComment, method, gist.create_comment, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: gist:create_comment
PyGithub/tests/Gist.py:Gist:testCreateComment, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Gist.py:Gist:testGetComments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Gist.py:Gist:testStarring, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Gist.py:Gist:testStarring, method, gist.set_starred, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: gist:set_starred
PyGithub/tests/Gist.py:Gist:testStarring, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Gist.py:Gist:testStarring, method, gist.reset_starred, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: gist:reset_starred
PyGithub/tests/Gist.py:Gist:testFork, method, gist.create_fork, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: gist:create_fork
PyGithub/tests/Gist.py:Gist:testFork, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Gist.py:Gist:testDelete, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Gist.py:Gist:testDelete, method, gist.edit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: gist:edit
PyGithub/tests/GistComment.py:GistComment:setUp, method, super, , , super
PyGithub/tests/GistComment.py:GistComment:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GistComment.py:GistComment:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/GistComment.py:GistComment:testAttributes, method, repr, , , repr
PyGithub/tests/GistComment.py:GistComment:testEdit, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GistComment.py:GistComment:testEdit, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/GitBlob.py:GitBlob:setUp, method, super, , , super
PyGithub/tests/GitBlob.py:GitBlob:testAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/GitBlob.py:GitBlob:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitBlob.py:GitBlob:testAttributes, method, repr, , , repr
PyGithub/tests/GitCommit.py:GitCommit:setUp, method, super, , , super
PyGithub/tests/GitCommit.py:GitCommit:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitCommit.py:GitCommit:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/GitCommit.py:GitCommit:testAttributes, method, repr, , , repr
PyGithub/tests/GithubApp.py:GithubApp:setUp, method, super, , , super
PyGithub/tests/GithubApp.py:GithubApp:testGetPublicApp, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GithubApp.py:GithubApp:testGetPublicApp, method, datetime, [FUNC] [SIDE_PACKAGE], , [FUNC] [SIDE_PACKAGE]: datetime.datetime
PyGithub/tests/GithubApp.py:GithubApp:testGetPublicApp, method, self.assertListEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListEqual
PyGithub/tests/GithubApp.py:GithubApp:testGetPublicApp, method, self.assertDictEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertDictEqual
PyGithub/tests/GithubApp.py:GithubApp:testGetAuthenticatedApp, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GithubApp.py:GithubApp:testGetAuthenticatedApp, method, datetime, [FUNC] [SIDE_PACKAGE], , [FUNC] [SIDE_PACKAGE]: datetime.datetime
PyGithub/tests/GithubApp.py:GithubApp:testGetAuthenticatedApp, method, self.assertListEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListEqual
PyGithub/tests/GithubApp.py:GithubApp:testGetAuthenticatedApp, method, self.assertDictEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertDictEqual
PyGithub/tests/Github_.py:Github:testGetGists, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Github_.py:Github:testGetGists, method, testGetGistsWithSince, , , testGetGistsWithSince
PyGithub/tests/Github_.py:Github:testGetGistsWithSince, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Github_.py:Github:testGetHooks, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Github_.py:Github:testGetEmojis, method, emojis.get, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: emojis:get
PyGithub/tests/Github_.py:Github:testGetEmojis, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Github_.py:Github:testGetHook, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Github_.py:Github:testGetRepoFromFullName, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Github_.py:Github:testGetRepoFromId, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Github_.py:Github:testGetGitignoreTemplates, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Github_.py:Github:testGetGitignoreTemplate, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Github_.py:Github:testGetGitignoreTemplate, method, testGetGitignoreTemplate, , , testGetGitignoreTemplate
PyGithub/tests/Github_.py:Github:testStringOfNotSet, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Github_.py:Github:testGetUserById, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Github_.py:Github:testGetUsers, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Github_.py:Github:testGetUsers, method, testGetUsersSince, , , testGetUsersSince
PyGithub/tests/Github_.py:Github:testGetUsersSince, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Github_.py:Github:testGetOrganizations, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Github_.py:Github:testGetOrganizations, method, testGetOrganizationsSince, , , testGetOrganizationsSince
PyGithub/tests/Github_.py:Github:testGetOrganizationsSince, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Github_.py:Github:testGetRepos, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Github_.py:Github:testGetRepos, method, testGetReposSince, , , testGetReposSince
PyGithub/tests/Github_.py:Github:testGetReposSince, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Github_.py:Github:testGetLicenses, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Github_.py:Github:testGetLicense, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Github_.py:Github:testGetLicense, method, testGetLicense, , , testGetLicense
PyGithub/tests/Github_.py:Github:testGetLicense, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Github_.py:Github:testGetEvents, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/GitMembership.py:GitMembership:testGetMembership, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitMembership.py:GitMembership:testGetMembership, method, octocat.get_organization_membership, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: octocat:get_organization_membership
PyGithub/tests/GitRef.py:GitRef:setUp, method, super, , , super
PyGithub/tests/GitRef.py:GitRef:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitRef.py:GitRef:testAttributes, method, repr, , , repr
PyGithub/tests/GitRef.py:GitRef:testEdit, method, testEditWithForce, , , testEditWithForce
PyGithub/tests/GitRelease.py:FileLikeStub:__init__, method, len, , , len
PyGithub/tests/GitRelease.py:GitRelease:setUp, method, super, , , super
PyGithub/tests/GitRelease.py:GitRelease:setUp, method, open, [BUILT_IN], , [BUILT_IN]: open
PyGithub/tests/GitRelease.py:GitRelease:setUp, method, zip_content.write, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: zip_content:write
PyGithub/tests/GitRelease.py:GitRelease:setUp, method, zipfile.ZipFile, [CLASS] [STDLIB], , [CLASS] [STDLIB]: zipfile:ZipFile
PyGithub/tests/GitRelease.py:GitRelease:setUp, method, artifact.write, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: artifact:write
PyGithub/tests/GitRelease.py:GitRelease:setUp, method, artifact.close, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: artifact:close
PyGithub/tests/GitRelease.py:GitRelease:tearDown, method, os.remove, [CLASS] [STDLIB], , [CLASS] [STDLIB]: os:remove
PyGithub/tests/GitRelease.py:GitRelease:tearDown, method, super, , , super
PyGithub/tests/GitRelease.py:GitRelease:setUpNewRelease, method, repo.get_commits, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repo:get_commits
PyGithub/tests/GitRelease.py:GitRelease:setUpNewRelease, method, repo.create_git_tag_and_release, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repo:create_git_tag_and_release
PyGithub/tests/GitRelease.py:GitRelease:tearDownNewRelease, method, new_release.delete_release, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: new_release:delete_release
PyGithub/tests/GitRelease.py:GitRelease:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitRelease.py:GitRelease:testAttributes, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/GitRelease.py:GitRelease:testGetRelease, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitRelease.py:GitRelease:testGetLatestRelease, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitRelease.py:GitRelease:testGetAssets, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitRelease.py:GitRelease:testGetAssets, method, release.get_assets, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: release:get_assets
PyGithub/tests/GitRelease.py:GitRelease:testGetAssets, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/GitRelease.py:GitRelease:testGetAssets, method, repo.get_release_asset, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repo:get_release_asset
PyGithub/tests/GitRelease.py:GitRelease:testDelete, method, self.setUpNewRelease, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:setUpNewRelease
PyGithub/tests/GitRelease.py:GitRelease:testDelete, method, self.tearDownNewRelease, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:tearDownNewRelease
PyGithub/tests/GitRelease.py:GitRelease:testUpdate, method, self.setUpNewRelease, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:setUpNewRelease
PyGithub/tests/GitRelease.py:GitRelease:testUpdate, method, release.update_release, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: release:update_release
PyGithub/tests/GitRelease.py:GitRelease:testUpdate, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitRelease.py:GitRelease:testUpdate, method, self.tearDownNewRelease, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:tearDownNewRelease
PyGithub/tests/GitRelease.py:GitRelease:testUploadAsset, method, self.setUpNewRelease, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:setUpNewRelease
PyGithub/tests/GitRelease.py:GitRelease:testUploadAsset, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitRelease.py:GitRelease:testUploadAsset, method, release.upload_asset, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: release:upload_asset
PyGithub/tests/GitRelease.py:GitRelease:testUploadAsset, method, self.tearDownNewRelease, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:tearDownNewRelease
PyGithub/tests/GitRelease.py:GitRelease:testUploadAsset, method, testUploadAssetWithName, , , testUploadAssetWithName
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetWithName, method, self.setUpNewRelease, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:setUpNewRelease
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetWithName, method, release.upload_asset, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: release:upload_asset
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetWithName, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetWithName, method, self.tearDownNewRelease, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:tearDownNewRelease
PyGithub/tests/GitRelease.py:GitRelease:testCreateGitTagAndRelease, method, self.setUpNewRelease, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:setUpNewRelease
PyGithub/tests/GitRelease.py:GitRelease:testCreateGitTagAndRelease, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitRelease.py:GitRelease:testCreateGitTagAndRelease, method, self.tearDownNewRelease, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:tearDownNewRelease
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetFromMemory, method, self.setUpNewRelease, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:setUpNewRelease
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetFromMemory, method, open, [BUILT_IN], , [BUILT_IN]: open
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetFromMemory, method, release.upload_asset_from_memory, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: release:upload_asset_from_memory
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetFromMemory, method, release.get_assets, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: release:get_assets
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetFromMemory, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetFromMemory, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetFromMemory, method, self.tearDownNewRelease, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:tearDownNewRelease
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetFileLike, method, self.setUpNewRelease, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:setUpNewRelease
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetFileLike, method, FileLikeStub, , , FileLikeStub
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetFileLike, method, release.upload_asset_from_memory, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: release:upload_asset_from_memory
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetFileLike, method, release.get_assets, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: release:get_assets
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetFileLike, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetFileLike, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitRelease.py:GitRelease:testUploadAssetFileLike, method, self.tearDownNewRelease, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:tearDownNewRelease
PyGithub/tests/GitTag.py:GitTag:setUp, method, super, , , super
PyGithub/tests/GitTag.py:GitTag:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitTag.py:GitTag:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/GitTag.py:GitTag:testAttributes, method, repr, , , repr
PyGithub/tests/GitTree.py:GitTree:setUp, method, super, , , super
PyGithub/tests/GitTree.py:GitTree:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/GitTree.py:GitTree:testAttributes, method, repr, , , repr
PyGithub/tests/Hook.py:Hook:setUp, method, super, , , super
PyGithub/tests/Hook.py:Hook:testAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Hook.py:Hook:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Hook.py:Hook:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Hook.py:Hook:testAttributes, method, repr, , , repr
PyGithub/tests/Hook.py:Hook:testEditWithMinimalParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Hook.py:Hook:testEditWithMinimalParameters, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Hook.py:Hook:testEditWithAllParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Hook.py:Hook:testEditWithAllParameters, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Issue.py:Issue:setUp, method, super, , , super
PyGithub/tests/Issue.py:Issue:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue.py:Issue:testAttributes, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue.py:Issue:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Issue.py:Issue:testAttributes, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Issue.py:Issue:testAttributes, method, self.assertIsNone, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsNone
PyGithub/tests/Issue.py:Issue:testAttributes, method, repr, , , repr
PyGithub/tests/Issue.py:Issue:testEditWithAllParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue.py:Issue:testEditWithAllParameters, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue.py:Issue:testEditResetMilestone, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue.py:Issue:testEditResetAssignee, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue.py:Issue:testCreateComment, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue.py:Issue:testGetComments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue.py:Issue:testGetComments, method, testGetCommentsSince, , , testGetCommentsSince
PyGithub/tests/Issue.py:Issue:testGetCommentsSince, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue.py:Issue:testGetEvents, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue.py:Issue:testGetLabels, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue.py:Issue:testAddAndRemoveAssignees, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue.py:Issue:testAddAndRemoveLabels, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue.py:Issue:testAddAndRemoveLabels, method, testAddAndRemoveLabelsWithStringArguments, , , testAddAndRemoveLabelsWithStringArguments
PyGithub/tests/Issue.py:Issue:testAddAndRemoveLabelsWithStringArguments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue.py:Issue:testDeleteAndSetLabels, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue.py:Issue:testDeleteAndSetLabels, method, testDeleteAndSetLabelsWithStringArguments, , , testDeleteAndSetLabelsWithStringArguments
PyGithub/tests/Issue.py:Issue:testDeleteAndSetLabelsWithStringArguments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue.py:Issue:testGetReactions, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue.py:Issue:testCreateReaction, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue.py:Issue:testDeleteReaction, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Issue.py:Issue:testGetTimeline, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue.py:Issue:testGetTimeline, method, self.assertIsNone, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsNone
PyGithub/tests/Issue.py:Issue:testGetTimeline, method, self.assertIn, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIn
PyGithub/tests/Issue.py:Issue:testGetTimeline, method, self.assertIsNotNone, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsNotNone
PyGithub/tests/Issue.py:Issue:testGetTimeline, method, repr, , , repr
PyGithub/tests/Issue131.py:Issue131:setUp, method, super, , , super
PyGithub/tests/Issue131.py:Issue131:testGetPullWithOrgHeadUser, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue131.py:Issue131:testGetPullsWithOrgHeadUser, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue131.py:Issue131:testGetPullsWithOrgHeadUser, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Issue133.py:Issue133:setUp, method, super, , , super
PyGithub/tests/Issue133.py:Issue133:testGetPageWithoutInitialArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue139.py:Issue139:setUp, method, super, , , super
PyGithub/tests/Issue139.py:Issue139:testCompletion, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Issue139.py:Issue139:testCompletion, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue139.py:Issue139:testCompletion, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Issue140.py:Issue140:setUp, method, super, , , super
PyGithub/tests/Issue140.py:Issue140:testGetDirContentsThenLazyCompletionOfFile, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue140.py:Issue140:testGetFileContents, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue140.py:Issue140:testGetDirContentsWithRef, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue140.py:Issue140:testGetDirContentsWithRef, method, len, , , len
PyGithub/tests/Issue142.py:Issue142:testDecodeJson, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue174.py:Issue174:setUp, method, super, , , super
PyGithub/tests/Issue174.py:Issue174:testGetDirContentsWhithHttpRedirect, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue214.py:Issue214:setUp, method, super, , , super
PyGithub/tests/Issue214.py:Issue214:testAssignees, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Issue214.py:Issue214:testAssignees, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Issue214.py:Issue214:testCollaborators, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Issue214.py:Issue214:testCollaborators, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Issue214.py:Issue214:testEditIssue, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue214.py:Issue214:testCreateIssue, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue214.py:Issue214:testGetIssues, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue216.py:Issue216:setUp, method, super, , , super
PyGithub/tests/Issue216.py:Issue216:testIteration, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue278.py:Issue278:setUp, method, super, , , super
PyGithub/tests/Issue278.py:Issue278:testIteration, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue33.py:Issue33:setUp, method, super, , , super
PyGithub/tests/Issue33.py:Issue33:testOpenIssues, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue33.py:Issue33:testClosedIssues, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue494.py:Issue494:setUp, method, super, , , super
PyGithub/tests/Issue494.py:Issue494:testRepr, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue50.py:Issue50:setUp, method, super, , , super
PyGithub/tests/Issue50.py:Issue50:testCreateLabel, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue50.py:Issue50:testGetLabel, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue50.py:Issue50:testGetLabel, method, testGetLabels, , , testGetLabels
PyGithub/tests/Issue50.py:Issue50:testGetLabel, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue50.py:Issue50:testGetLabels, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue50.py:Issue50:testIssueLabels, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue50.py:Issue50:testIssueGetLabels, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue50.py:Issue50:testGetIssuesWithLabel, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue50.py:Issue50:testCreateIssueWithLabel, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue50.py:Issue50:testCreateIssueWithLabel, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue54.py:Issue54:setUp, method, super, , , super
PyGithub/tests/Issue54.py:Issue54:testConversion, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue54.py:Issue54:testConversion, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Issue572.py:Issue572:setUp, method, super, , , super
PyGithub/tests/Issue572.py:Issue572:testIssueAsPullRequest, method, issue.as_pull_request, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: issue:as_pull_request
PyGithub/tests/Issue572.py:Issue572:testIssueAsPullRequest, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue572.py:Issue572:testIssueAsPullRequest, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Issue572.py:Issue572:testPullReqeustAsIssue, method, pull.as_issue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: pull:as_issue
PyGithub/tests/Issue572.py:Issue572:testPullReqeustAsIssue, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue572.py:Issue572:testPullReqeustAsIssue, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Issue823.py:Issue823:setUp, method, super, , , super
PyGithub/tests/Issue823.py:Issue823:testGetPendingInvitationAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue87.py:Issue87:setUp, method, super, , , super
PyGithub/tests/Issue87.py:Issue87:testCreateIssueWithPercentInTitle, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue87.py:Issue87:testCreateIssueWithPercentInBody, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue87.py:Issue87:testCreateIssueWithEscapedPercentInTitle, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue87.py:Issue87:testCreateIssueWithEscapedPercentInBody, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue937.py:Issue937:setUp, method, super, , , super
PyGithub/tests/Issue937.py:Issue937:testCollaboratorsAffiliation, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Issue937.py:Issue937:testCollaboratorsAffiliation, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Issue945.py:Issue945:setUp, method, super, , , super
PyGithub/tests/Issue945.py:Issue945:testReservedPaginatedListAttributePreservation, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Issue945.py:Issue945:testReservedPaginatedListAttributePreservation, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/IssueComment.py:IssueComment:setUp, method, super, , , super
PyGithub/tests/IssueComment.py:IssueComment:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueComment.py:IssueComment:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueComment.py:IssueComment:testAttributes, method, repr, , , repr
PyGithub/tests/IssueComment.py:IssueComment:testEdit, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueComment.py:IssueComment:testEdit, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueComment.py:IssueComment:testGetReactions, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueComment.py:IssueComment:testCreateReaction, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueComment.py:IssueComment:testDeleteReaction, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/IssueEvent.py:IssueEvent:setUp, method, super, , , super
PyGithub/tests/IssueEvent.py:IssueEvent:setUp, method, repo.get_issues_event, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repo:get_issues_event
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_subscribed_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_subscribed_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_assigned_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_assigned_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_referenced_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_referenced_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_closed_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_closed_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_labeled_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_labeled_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_mentioned_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_mentioned_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_merged_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_merged_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_review_requested_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_review_requested_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_reopened_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_reopened_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_unassigned_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_unassigned_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_unlabeled_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_unlabeled_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_renamed_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_renamed_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_base_ref_changed_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_base_ref_changed_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_head_ref_deleted_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_head_ref_deleted_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_head_ref_restored_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_head_ref_restored_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_head_ref_restored_Attributes, method, repr, , , repr
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_milestoned_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_milestoned_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_demilestoned_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_demilestoned_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_locked_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_locked_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_unlocked_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_unlocked_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_review_dismissed_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_review_dismissed_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_review_request_removed_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_review_request_removed_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_review_request_removed_Attributes, method, repr, , , repr
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_marked_as_duplicate_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_marked_as_duplicate_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_marked_as_duplicate_Attributes, method, repr, , , repr
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_unmarked_as_duplicate_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_unmarked_as_duplicate_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_unmarked_as_duplicate_Attributes, method, repr, , , repr
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_added_to_project_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_added_to_project_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_moved_columns_in_project_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_moved_columns_in_project_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_moved_columns_in_project_Attributes, method, repr, , , repr
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_removed_from_project_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_removed_from_project_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_removed_from_project_Attributes, method, repr, , , repr
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_converted_note_to_issue_Attributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_converted_note_to_issue_Attributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/IssueEvent.py:IssueEvent:testEvent_converted_note_to_issue_Attributes, method, repr, , , repr
PyGithub/tests/Label.py:Label:setUp, method, super, , , super
PyGithub/tests/Label.py:Label:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Label.py:Label:testAttributes, method, self.assertIsNone, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsNone
PyGithub/tests/Label.py:Label:testEdit, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/License.py:License:setUp, method, super, , , super
PyGithub/tests/License.py:License:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Logging_.py:Logging:setUp, method, super, , , super
PyGithub/tests/Logging_.py:Logging:setUp, method, self.MockLogger, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:MockLogger
PyGithub/tests/Logging_.py:Logging:tearDown, method, super, , , super
PyGithub/tests/Logging_.py:Logging:assertLogging, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Logging_.py:Logging:assertLogging, method, self.assertIsNone, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsNone
PyGithub/tests/Logging_.py:Logging:testLoggingWithBasicAuthentication, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Logging_.py:Logging:testLoggingWithBasicAuthentication, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Logging_.py:Logging:testLoggingWithBasicAuthentication, method, self.assertLogging, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertLogging
PyGithub/tests/Logging_.py:Logging:testLoggingWithOAuthAuthentication, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Logging_.py:Logging:testLoggingWithOAuthAuthentication, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Logging_.py:Logging:testLoggingWithOAuthAuthentication, method, self.assertLogging, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertLogging
PyGithub/tests/Logging_.py:Logging:testLoggingWithoutAuthentication, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Logging_.py:Logging:testLoggingWithoutAuthentication, method, self.assertLogging, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertLogging
PyGithub/tests/Logging_.py:Logging:testLoggingWithBaseUrl, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Logging_.py:Logging:testLoggingWithBaseUrl, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Logging_.py:Logging:testLoggingWithBaseUrl, method, self.assertLogging, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertLogging
PyGithub/tests/Logging_.py:Logging:testLoggingDoesNotModifyRequestHeaders, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Logging_.py:Logging:testLoggingDoesNotModifyRequestHeaders, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Markdown.py:Markdown:setUp, method, super, , , super
PyGithub/tests/Markdown.py:Markdown:testRenderMarkdown, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Markdown.py:Markdown:testRenderGithubFlavoredMarkdown, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Migration.py:Migration:setUp, method, super, , , super
PyGithub/tests/Migration.py:Migration:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Migration.py:Migration:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Migration.py:Migration:testAttributes, method, repr, , , repr
PyGithub/tests/Migration.py:Migration:testGetArchiveUrlWhenNotExported, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Migration.py:Migration:testGetStatus, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Migration.py:Migration:testGetArchiveUrlWhenExported, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Migration.py:Migration:testDelete, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Migration.py:Migration:testGetArchiveUrlWhenDeleted, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Migration.py:Migration:testUnlockRepo, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Milestone.py:Milestone:setUp, method, super, , , super
PyGithub/tests/Milestone.py:Milestone:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Milestone.py:Milestone:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Milestone.py:Milestone:testAttributes, method, repr, , , repr
PyGithub/tests/Milestone.py:Milestone:testEditWithMinimalParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Milestone.py:Milestone:testEditWithAllParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Milestone.py:Milestone:testEditWithAllParameters, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Milestone.py:Milestone:testGetLabels, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/NamedUser.py:NamedUser:setUp, method, super, , , super
PyGithub/tests/NamedUser.py:NamedUser:testAttributesOfOtherUser, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/NamedUser.py:NamedUser:testAttributesOfOtherUser, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/NamedUser.py:NamedUser:testAttributesOfOtherUser, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/NamedUser.py:NamedUser:testAttributesOfSelf, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/NamedUser.py:NamedUser:testAttributesOfSelf, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/NamedUser.py:NamedUser:testAttributesOfSelf, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/NamedUser.py:NamedUser:testAttributesOfSelf, method, self.assertIsNone, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsNone
PyGithub/tests/NamedUser.py:NamedUser:testGetGists, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/NamedUser.py:NamedUser:testGetFollowers, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/NamedUser.py:NamedUser:testGetFollowing, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/NamedUser.py:NamedUser:testHasInFollowing, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/NamedUser.py:NamedUser:testGetOrgs, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/NamedUser.py:NamedUser:testGetOrganizationMembership, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/NamedUser.py:NamedUser:testGetOrganizationMembership, method, repr, , , repr
PyGithub/tests/NamedUser.py:NamedUser:testGetOrganizationMembership, method, testGetOrganizationMembershipNotMember, , , testGetOrganizationMembershipNotMember
PyGithub/tests/NamedUser.py:NamedUser:testGetOrganizationMembership, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/NamedUser.py:NamedUser:testGetOrganizationMembershipNotMember, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/NamedUser.py:NamedUser:testGetRepo, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/NamedUser.py:NamedUser:testGetRepo, method, testGetRepos, , , testGetRepos
PyGithub/tests/NamedUser.py:NamedUser:testGetRepo, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/NamedUser.py:NamedUser:testGetRepo, method, testGetReposWithAllArgs, , , testGetReposWithAllArgs
PyGithub/tests/NamedUser.py:NamedUser:testGetRepos, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/NamedUser.py:NamedUser:testGetRepos, method, testGetReposWithAllArgs, , , testGetReposWithAllArgs
PyGithub/tests/NamedUser.py:NamedUser:testGetReposWithAllArgs, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/NamedUser.py:NamedUser:testGetWatched, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/NamedUser.py:NamedUser:testGetStarred, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/NamedUser.py:NamedUser:testGetSubscriptions, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/NamedUser.py:NamedUser:testGetEvents, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/NamedUser.py:NamedUser:testGetPublicEvents, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/NamedUser.py:NamedUser:testGetPublicReceivedEvents, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/NamedUser.py:NamedUser:testGetReceivedEvents, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/NamedUser.py:NamedUser:testGetKeys, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/NamedUser.py:NamedUser:testUserEquality, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/NamedUser.py:NamedUser:testUserEquality, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/NamedUser.py:NamedUser:testUserEquality, method, u2.__hash__, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: u2:__hash__
PyGithub/tests/NamedUser1430.py:NamedUser1430:setUp, method, super, , , super
PyGithub/tests/NamedUser1430.py:NamedUser1430:testGetProjects, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Notification.py:Notification:setUp, method, super, , , super
PyGithub/tests/Organization.py:Organization:setUp, method, super, , , super
PyGithub/tests/Organization.py:Organization:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Organization.py:Organization:testAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Organization.py:Organization:testAttributes, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Organization.py:Organization:testAddMembersDefaultRole, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Organization.py:Organization:testAddMembersAdminRole, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Organization.py:Organization:testEditWithAllArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testEditHookWithMinimalParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testEditHookWithAllParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testCreateTeam, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testCreateTeam, method, testCreateTeamWithAllArguments, , , testCreateTeamWithAllArguments
PyGithub/tests/Organization.py:Organization:testCreateTeamWithAllArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testPublicMembers, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Organization.py:Organization:testPublicMembers, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Organization.py:Organization:testGetPublicMembers, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Organization.py:Organization:testGetHook, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testGetHook, method, testGetHooks, , , testGetHooks
PyGithub/tests/Organization.py:Organization:testGetHook, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Organization.py:Organization:testGetHooks, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Organization.py:Organization:testGetIssues, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Organization.py:Organization:testGetIssues, method, testGetIssuesWithAllArguments, , , testGetIssuesWithAllArguments
PyGithub/tests/Organization.py:Organization:testGetIssues, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Organization.py:Organization:testGetIssuesWithAllArguments, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Organization.py:Organization:testGetIssuesWithAllArguments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Organization.py:Organization:testGetMembers, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Organization.py:Organization:testGetOutsideCollaborators, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Organization.py:Organization:testOutsideCollaborators, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Organization.py:Organization:testOutsideCollaborators, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testMembers, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Organization.py:Organization:testMembers, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Organization.py:Organization:testGetRepos, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Organization.py:Organization:testGetRepos, method, testGetReposSorted, , , testGetReposSorted
PyGithub/tests/Organization.py:Organization:testGetRepos, method, testGetReposWithType, , , testGetReposWithType
PyGithub/tests/Organization.py:Organization:testGetReposSorted, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Organization.py:Organization:testGetReposWithType, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Organization.py:Organization:testGetEvents, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Organization.py:Organization:testGetTeams, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Organization.py:Organization:testGetTeamBySlug, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testCreateHookWithMinimalParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testCreateHookWithAllParameters, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Organization.py:Organization:testCreateHookWithAllParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testCreateRepoWithMinimalArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testCreateRepoWithMinimalArguments, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Organization.py:Organization:testCreateRepoWithAllArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testCreateRepoWithAllArguments, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Organization.py:Organization:testCreateRepositoryWithAutoInit, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testCreateRepositoryWithAutoInit, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Organization.py:Organization:testCreateFork, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testCreateFork, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Organization.py:Organization:testInviteUserWithNeither, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Organization.py:Organization:testInviteUserWithNeither, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testInviteUserWithNeither, method, str, [BUILT_IN], , [BUILT_IN]: str
PyGithub/tests/Organization.py:Organization:testInviteUserWithBoth, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Organization.py:Organization:testInviteUserWithBoth, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testInviteUserWithBoth, method, str, [BUILT_IN], , [BUILT_IN]: str
PyGithub/tests/Organization.py:Organization:testInviteUserAsNonOwner, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Organization.py:Organization:testInviteUserAsNonOwner, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testCreateMigration, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Organization.py:Organization:testCreateMigration, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/tests/Organization.py:Organization:testGetMigrations, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization.py:Organization:testGetInstallations, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Organization1437.py:Organization1437:setUp, method, super, , , super
PyGithub/tests/Organization1437.py:Organization1437:testCreateProject, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/OrganizationHasInMembers.py:OrganizationHasInMembers:setUp, method, super, , , super
PyGithub/tests/OrganizationHasInMembers.py:OrganizationHasInMembers:testHasInMembers, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/PaginatedList.py:PaginatedList:setUp, method, super, , , super
PyGithub/tests/PaginatedList.py:PaginatedList:testIteration, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testSeveralIterations, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testIntIndexingInFirstPage, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testReversedIterationWithSinglePage, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testReversedIterationWithMultiplePages, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testReversedIterationSupportsIterator, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testReversedIterationSupportsIterator, method, self.fail, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:fail
PyGithub/tests/PaginatedList.py:PaginatedList:testGettingTheReversedListDoesNotModifyTheOriginalList, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testIntIndexingInThirdPage, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testGetFirstPage, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testGetThirdPage, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testIntIndexingAfterIteration, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testSliceIndexingInFirstPage, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testSliceIndexingUntilFourthPage, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testSliceIndexingUntilEnd, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testInterruptedIteration, method, testInterruptedIterationInSlice, , , testInterruptedIterationInSlice
PyGithub/tests/PaginatedList.py:PaginatedList:testTotalCountWithNoLastPage, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testCustomPerPage, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testCustomPerPage, method, testCustomPerPageWithNoUrlParams, , , testCustomPerPageWithNoUrlParams
PyGithub/tests/PaginatedList.py:PaginatedList:testCustomPerPage, method, PaginatedListImpl, , , PaginatedListImpl
PyGithub/tests/PaginatedList.py:PaginatedList:testCustomPerPage, method, testCustomPerPageWithNoUrlParams2, , , testCustomPerPageWithNoUrlParams2
PyGithub/tests/PaginatedList.py:PaginatedList:testCustomPerPage, method, testCustomPerPageWithGetPage, , , testCustomPerPageWithGetPage
PyGithub/tests/PaginatedList.py:PaginatedList:testCustomPerPageWithNoUrlParams, method, PaginatedListImpl, , , PaginatedListImpl
PyGithub/tests/PaginatedList.py:PaginatedList:testCustomPerPageWithNoUrlParams, method, testCustomPerPageWithNoUrlParams2, , , testCustomPerPageWithNoUrlParams2
PyGithub/tests/PaginatedList.py:PaginatedList:testCustomPerPageWithNoUrlParams, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testCustomPerPageWithNoUrlParams2, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testCustomPerPageWithGetPage, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PaginatedList.py:PaginatedList:testNoFirstPage, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Permissions.py:Permissions:setUp, method, super, , , super
PyGithub/tests/Permissions.py:Permissions:testUserRepoPermissionAttributes, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Permissions.py:Permissions:testUserRepoPermissionAttributes, method, self.assertIs, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIs
PyGithub/tests/Permissions.py:Permissions:testUserRepoPermissionAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Permissions.py:Permissions:testUserRepoPermissionRepresentation, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Permissions.py:Permissions:testUserRepoPermissionRepresentation, method, repr, , , repr
PyGithub/tests/Persistence.py:Persistence:setUp, method, super, , , super
PyGithub/tests/Persistence.py:Persistence:setUp, method, IO, [FUNC] [SIDE_PACKAGE], , [FUNC] [SIDE_PACKAGE]: io.IO
PyGithub/tests/Persistence.py:Persistence:tearDown, method, super, , , super
PyGithub/tests/Persistence.py:Persistence:testLoad, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Persistence.py:Persistence:testLoad, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Persistence.py:Persistence:testLoad, method, testLoadAndUpdate, , , testLoadAndUpdate
PyGithub/tests/Persistence.py:Persistence:testLoadAndUpdate, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/PoolSize.py:PoolSize:setUp, method, Framework.setPoolSize, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: Framework:setPoolSize
PyGithub/tests/PoolSize.py:PoolSize:setUp, method, super, , , super
PyGithub/tests/PoolSize.py:PoolSize:testReturnsRepoAfterSettingPoolSize, method, self.assertIsInstance, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsInstance
PyGithub/tests/PoolSize.py:PoolSize:testReturnsRepoAfterSettingPoolSize, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PoolSize.py:PoolSize:testReturnsRepoAfterSettingPoolSize, method, testReturnsRepoAfterSettingPoolSizeHttp, , , testReturnsRepoAfterSettingPoolSizeHttp
PyGithub/tests/PoolSize.py:PoolSize:testReturnsRepoAfterSettingPoolSize, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/PoolSize.py:PoolSize:testReturnsRepoAfterSettingPoolSize, method, g.get_repo, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: g:get_repo
PyGithub/tests/PoolSize.py:PoolSize:testReturnsRepoAfterSettingPoolSizeHttp, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/PoolSize.py:PoolSize:testReturnsRepoAfterSettingPoolSizeHttp, method, g.get_repo, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: g:get_repo
PyGithub/tests/PoolSize.py:PoolSize:testReturnsRepoAfterSettingPoolSizeHttp, method, self.assertIsInstance, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsInstance
PyGithub/tests/PoolSize.py:PoolSize:testReturnsRepoAfterSettingPoolSizeHttp, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Project.py:Project:setUp, method, super, , , super
PyGithub/tests/Project.py:Project:testGetProject, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Project.py:Project:testGetOrganizationProjects, method, org.get_projects, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: org:get_projects
PyGithub/tests/Project.py:Project:testGetOrganizationProjects, method, projects.append, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: projects:append
PyGithub/tests/Project.py:Project:testGetOrganizationProjects, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Project.py:Project:testGetRepositoryProjects, method, projects.append, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: projects:append
PyGithub/tests/Project.py:Project:testGetRepositoryProjects, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Project.py:Project:testProjectAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Project.py:Project:testProjectAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Project.py:Project:testProjectColumnAttributes, method, proj.get_columns, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: proj:get_columns
PyGithub/tests/Project.py:Project:testProjectColumnAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Project.py:Project:testProjectColumnAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Project.py:Project:testProjectCardAttributes, method, proj.get_columns, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: proj:get_columns
PyGithub/tests/Project.py:Project:testProjectCardAttributes, method, col.get_cards, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: col:get_cards
PyGithub/tests/Project.py:Project:testProjectCardAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Project.py:Project:testProjectCardAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Project.py:Project:testProjectCardAttributes, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Project.py:Project:testGetProjectCardContent, method, proj.get_columns, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: proj:get_columns
PyGithub/tests/Project.py:Project:testGetProjectCardContent, method, col.get_cards, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: col:get_cards
PyGithub/tests/Project.py:Project:testGetProjectCardContent, method, pull_card.get_content, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: pull_card:get_content
PyGithub/tests/Project.py:Project:testGetProjectCardContent, method, self.assertIsInstance, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsInstance
PyGithub/tests/Project.py:Project:testGetProjectCardContent, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Project.py:Project:testGetProjectCardContent, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Project.py:Project:testGetProjectCardContent, method, issue_card.get_content, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: issue_card:get_content
PyGithub/tests/Project.py:Project:testGetProjectCardContent, method, note_card.get_content, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: note_card:get_content
PyGithub/tests/Project.py:Project:testProjectCardMove, method, proj.get_columns, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: proj:get_columns
PyGithub/tests/Project.py:Project:testProjectCardMove, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Project.py:Project:testProjectCardDelete, method, proj.get_columns, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: proj:get_columns
PyGithub/tests/Project.py:Project:testProjectCardDelete, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Project.py:Project:testGetAllProjectCards, method, projects.append, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: projects:append
PyGithub/tests/Project.py:Project:testGetAllProjectCards, method, proj.get_columns, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: proj:get_columns
PyGithub/tests/Project.py:Project:testGetAllProjectCards, method, col.get_cards, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: col:get_cards
PyGithub/tests/Project.py:Project:testGetAllProjectCards, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Project.py:Project:testCreateColumn, method, project.create_column, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: project:create_column
PyGithub/tests/Project.py:Project:testCreateColumn, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Project.py:Project:testCreateCardWithNote, method, project.create_column, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: project:create_column
PyGithub/tests/Project.py:Project:testCreateCardWithNote, method, column.create_card, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: column:create_card
PyGithub/tests/Project.py:Project:testCreateCardWithNote, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Project.py:Project:testCreateCardFromIssue, method, project.create_column, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: project:create_column
PyGithub/tests/Project.py:Project:testCreateCardFromIssue, method, column.create_card, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: column:create_card
PyGithub/tests/Project.py:Project:testCreateCardFromIssue, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Project.py:Project:testEditCardWithoutParameters, method, proj.get_columns, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: proj:get_columns
PyGithub/tests/Project.py:Project:testEditCardWithoutParameters, method, col.create_card, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: col:create_card
PyGithub/tests/Project.py:Project:testEditCardWithoutParameters, method, card.edit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: card:edit
PyGithub/tests/Project.py:Project:testEditCardNote, method, proj.get_columns, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: proj:get_columns
PyGithub/tests/Project.py:Project:testEditCardNote, method, col.create_card, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: col:create_card
PyGithub/tests/Project.py:Project:testEditCardNote, method, card.edit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: card:edit
PyGithub/tests/Project.py:Project:testEditCardNote, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Project.py:Project:testEditCardArchived, method, proj.get_columns, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: proj:get_columns
PyGithub/tests/Project.py:Project:testEditCardArchived, method, col.create_card, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: col:create_card
PyGithub/tests/Project.py:Project:testEditCardArchived, method, card.edit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: card:edit
PyGithub/tests/Project.py:Project:testEditCardArchived, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Project1434.py:Project1434:setUp, method, super, , , super
PyGithub/tests/Project1434.py:Project1434:testDelete, method, project.delete, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: project:delete
PyGithub/tests/Project1434.py:Project1434:testEditWithoutParameters, method, project.edit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: project:edit
PyGithub/tests/Project1434.py:Project1434:testEditWithoutParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Project1434.py:Project1434:testEditWithAllParameters, method, project.edit, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: project:edit
PyGithub/tests/Project1434.py:Project1434:testEditWithAllParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/ProjectColumn.py:ProjectColumn:setUp, method, super, , , super
PyGithub/tests/ProjectColumn.py:ProjectColumn:testGetProjectColumn, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/ProjectColumn.py:ProjectColumn:testGetProjectColumn, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/ProjectColumn.py:ProjectColumn:testGetAllCards, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/ProjectColumn.py:ProjectColumn:testGetArchivedCards, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/ProjectColumn.py:ProjectColumn:testGetNotArchivedCards, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/ProjectColumn.py:ProjectColumn:testGetCards, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/ProjectColumn.py:ProjectColumn:testCreateCard, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/ProjectColumn.py:ProjectColumn:testDelete, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/ProjectColumn.py:ProjectColumn:testEdit, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/ProjectColumn.py:ProjectColumn:testMoveFirst, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/ProjectColumn.py:ProjectColumn:testMoveLast, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/ProjectColumn.py:ProjectColumn:testMoveAfter, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/PublicKey.py:PublicKey:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PublicKey.py:PublicKey:testAttributes, method, repr, , , repr
PyGithub/tests/PublicKey.py:PublicKey:testAttributes, method, testAttributes_with_int_key_id, , , testAttributes_with_int_key_id
PyGithub/tests/PublicKey.py:PublicKey:testAttributes_with_int_key_id, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PublicKey.py:PublicKey:testAttributes_with_int_key_id, method, repr, , , repr
PyGithub/tests/PullRequest.py:PullRequest:setUp, method, super, , , super
PyGithub/tests/PullRequest.py:PullRequest:setUp, method, marco_repo.get_pull, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: marco_repo:get_pull
PyGithub/tests/PullRequest.py:PullRequest:setUp, method, flo_repo.get_pull, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: flo_repo:get_pull
PyGithub/tests/PullRequest.py:PullRequest:testAttributesIssue256, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest.py:PullRequest:testAttributesIssue256, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/PullRequest.py:PullRequest:testAttributesIssue256, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/PullRequest.py:PullRequest:testAttributesIssue256, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/PullRequest.py:PullRequest:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest.py:PullRequest:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/PullRequest.py:PullRequest:testAttributes, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/PullRequest.py:PullRequest:testAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/PullRequest.py:PullRequest:testAttributes, method, testAttributes, , , testAttributes
PyGithub/tests/PullRequest.py:PullRequest:testAttributes, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PullRequest.py:PullRequest:testAttributes, method, repr, , , repr
PyGithub/tests/PullRequest.py:PullRequest:testCreateComment, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest.py:PullRequest:testGetComments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PullRequest.py:PullRequest:testCreateIssueComment, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest.py:PullRequest:testGetIssueComments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PullRequest.py:PullRequest:testGetIssueComment, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PullRequest.py:PullRequest:testGetIssueComment, method, testGetIssueComment, , , testGetIssueComment
PyGithub/tests/PullRequest.py:PullRequest:testGetIssueComment, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest.py:PullRequest:testGetIssueEvents, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PullRequest.py:PullRequest:testGetReviewComments, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/PullRequest.py:PullRequest:testGetReviewComments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PullRequest.py:PullRequest:testReviewRequests, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PullRequest.py:PullRequest:testReviewRequests, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest.py:PullRequest:testEditWithAllArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest.py:PullRequest:testEditWithAllArguments, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/PullRequest.py:PullRequest:testGetCommits, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PullRequest.py:PullRequest:testGetFiles, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PullRequest.py:PullRequest:testGetLabels, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PullRequest.py:PullRequest:testAddAndRemoveLabels, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PullRequest.py:PullRequest:testAddAndRemoveLabels, method, testAddAndRemoveLabelsWithStringArguments, , , testAddAndRemoveLabelsWithStringArguments
PyGithub/tests/PullRequest.py:PullRequest:testAddAndRemoveLabelsWithStringArguments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PullRequest.py:PullRequest:testDeleteAndSetLabels, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PullRequest.py:PullRequest:testDeleteAndSetLabels, method, testDeleteAndSetLabelsWithStringArguments, , , testDeleteAndSetLabelsWithStringArguments
PyGithub/tests/PullRequest.py:PullRequest:testDeleteAndSetLabelsWithStringArguments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PullRequest.py:PullRequest:testMerge, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/PullRequest.py:PullRequest:testMerge, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest.py:PullRequest:testMerge, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/PullRequest.py:PullRequest:testMerge, method, repr, , , repr
PyGithub/tests/PullRequest.py:PullRequest:testMerge, method, testMergeWithCommitMessage, , , testMergeWithCommitMessage
PyGithub/tests/PullRequest.py:PullRequest:testAddAndRemoveAssignees, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/PullRequest.py:PullRequest:testAddAndRemoveAssignees, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest.py:PullRequest:testUpdateBranch, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/PullRequest1168.py:PullRequest1168:setUp, method, super, , , super
PyGithub/tests/PullRequest1168.py:PullRequest1168:testGetPullRequest, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest1168.py:PullRequest1168:testGetIssue, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest1169.py:PullRequest1169:setUp, method, super, , , super
PyGithub/tests/PullRequest1169.py:PullRequest1169:setUp, method, ferada_repo.get_pull, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: ferada_repo:get_pull
PyGithub/tests/PullRequest1169.py:PullRequest1169:testReviewApproveWithoutBody, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest1375.py:PullRequest1375:setUp, method, super, , , super
PyGithub/tests/PullRequest1375.py:PullRequest1375:testCreateReviewCommentReply, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest1682.py:PullRequest1682:setUp, method, super, , , super
PyGithub/tests/PullRequest1682.py:PullRequest1682:test_no_parameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest1682.py:PullRequest1682:test_object_parameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest1682.py:PullRequest1682:test_string_parameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest1684.py:PullRequest1684:setUp, method, super, , , super
PyGithub/tests/PullRequest1684.py:PullRequest1684:testGetRunners, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest1684.py:PullRequest1684:testGetRunners, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/PullRequest1684.py:PullRequest1684:testGetRunners, method, runner.labels, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: runner:labels
PyGithub/tests/PullRequest1684.py:PullRequest1684:testGetRunners, method, len, , , len
PyGithub/tests/PullRequest1684.py:PullRequest1684:testDeleteRunnerObject, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/PullRequest1684.py:PullRequest1684:testDeleteRunnerObject, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequest1684.py:PullRequest1684:testDeleteRunnerObject, method, self.assertNotIn, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertNotIn
PyGithub/tests/PullRequest1684.py:PullRequest1684:testDeleteRunnerId, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/PullRequest1684.py:PullRequest1684:testDeleteRunnerId, method, self.assertNotIn, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertNotIn
PyGithub/tests/PullRequestComment.py:PullRequestComment:setUp, method, super, , , super
PyGithub/tests/PullRequestComment.py:PullRequestComment:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequestComment.py:PullRequestComment:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/PullRequestComment.py:PullRequestComment:testAttributes, method, repr, , , repr
PyGithub/tests/PullRequestComment.py:PullRequestComment:testEdit, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequestComment.py:PullRequestComment:testGetReactions, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequestComment.py:PullRequestComment:testCreateReaction, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequestComment.py:PullRequestComment:testDeleteReaction, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/PullRequestFile.py:PullRequestFile:setUp, method, super, , , super
PyGithub/tests/PullRequestFile.py:PullRequestFile:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequestFile.py:PullRequestFile:testAttributes, method, __useAttributes, , , __useAttributes
PyGithub/tests/PullRequestFile.py:PullRequestFile:testAttributes, method, repr, , , repr
PyGithub/tests/PullRequestReview.py:PullRequestReview:setUp, method, super, , , super
PyGithub/tests/PullRequestReview.py:PullRequestReview:testDoesNotModifyPullRequest, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequestReview.py:PullRequestReview:testDismiss, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequestReview.py:PullRequestReview:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/PullRequestReview.py:PullRequestReview:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/PullRequestReview.py:PullRequestReview:testAttributes, method, self.assertIn, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIn
PyGithub/tests/PullRequestReview.py:PullRequestReview:testAttributes, method, repr, , , repr
PyGithub/tests/RateLimiting.py:RateLimiting:testRateLimiting, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/RateLimiting.py:RateLimiting:testResetTime, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/RateLimiting.py:RateLimiting:testGetRateLimit, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/RateLimiting.py:RateLimiting:testGetRateLimit, method, repr, , , repr
PyGithub/tests/RateLimiting.py:RateLimiting:testGetRateLimit, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/RawData.py:RawData:testCompletedObject, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/RawData.py:RawData:testCompletedObject, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/RawData.py:RawData:testNotYetCompletedObject, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/RawData.py:RawData:testNotYetCompletedObject, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/RawData.py:RawData:testNotYetCompletedObject, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/RawData.py:RawData:testNonCompletableObject, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/RawData.py:RawData:testCreateObjectFromRawData, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Reaction.py:Reaction:setUp, method, super, , , super
PyGithub/tests/Reaction.py:Reaction:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Reaction.py:Reaction:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/ReleaseAsset.py:ReleaseAsset:setUp, method, super, , , super
PyGithub/tests/ReleaseAsset.py:ReleaseAsset:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/ReleaseAsset.py:ReleaseAsset:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/ReleaseAsset.py:ReleaseAsset:testAttributes, method, repr, , , repr
PyGithub/tests/ReleaseAsset.py:ReleaseAsset:testDelete, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/ReleaseAsset.py:ReleaseAsset:testUpdate, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/ReleaseAsset.py:ReleaseAsset:testUpdate, method, self.assertNotEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertNotEqual
PyGithub/tests/Repository.py:Repository:setUp, method, super, , , super
PyGithub/tests/Repository.py:Repository:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Repository.py:Repository:testAttributes, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Repository.py:Repository:testAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:Repository:testAttributes, method, self.assertIn, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIn
PyGithub/tests/Repository.py:Repository:testEditWithAllArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testEditWithAllArguments, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Repository.py:Repository:testEditWithAllArguments, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:Repository:testEditWithDefaultBranch, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testDelete, method, repo.delete, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repo:delete
PyGithub/tests/Repository.py:Repository:testGetContributors, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testCreateMilestone, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateMilestone, method, testCreateMilestoneWithMinimalArguments, , , testCreateMilestoneWithMinimalArguments
PyGithub/tests/Repository.py:Repository:testCreateMilestoneWithMinimalArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateIssue, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateIssue, method, testCreateIssueWithAllArguments, , , testCreateIssueWithAllArguments
PyGithub/tests/Repository.py:Repository:testCreateIssue, method, testCreateIssueWithAllArgumentsStringLabel, , , testCreateIssueWithAllArgumentsStringLabel
PyGithub/tests/Repository.py:Repository:testCreateIssueWithAllArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateIssueWithAllArguments, method, testCreateIssueWithAllArgumentsStringLabel, , , testCreateIssueWithAllArgumentsStringLabel
PyGithub/tests/Repository.py:Repository:testCreateIssueWithAllArgumentsStringLabel, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateLabel, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetLabel, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateHookWithMinimalParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateHookWithAllParameters, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:Repository:testCreateHookWithAllParameters, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateGitRef, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateGitBlob, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateGitTree, method, github.InputGitTreeElement, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:InputGitTreeElement
PyGithub/tests/Repository.py:Repository:testCreateGitTree, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateGitTree, method, testCreateGitTreeWithBaseTree, , , testCreateGitTreeWithBaseTree
PyGithub/tests/Repository.py:Repository:testCreateGitTree, method, testCreateGitTreeWithSha, , , testCreateGitTreeWithSha
PyGithub/tests/Repository.py:Repository:testCreateGitTree, method, testCreateGitTreeWithNullSha, , , testCreateGitTreeWithNullSha
PyGithub/tests/Repository.py:Repository:testCreateGitTreeWithBaseTree, method, github.InputGitTreeElement, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:InputGitTreeElement
PyGithub/tests/Repository.py:Repository:testCreateGitTreeWithBaseTree, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateGitTreeWithSha, method, github.InputGitTreeElement, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:InputGitTreeElement
PyGithub/tests/Repository.py:Repository:testCreateGitTreeWithSha, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateGitTreeWithNullSha, method, github.InputGitTreeElement, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:InputGitTreeElement
PyGithub/tests/Repository.py:Repository:testCreateGitTreeWithNullSha, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateGitCommit, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateGitCommit, method, testCreateGitCommitWithParents, , , testCreateGitCommitWithParents
PyGithub/tests/Repository.py:Repository:testCreateGitCommit, method, testCreateGitCommitWithAllArguments, , , testCreateGitCommitWithAllArguments
PyGithub/tests/Repository.py:Repository:testCreateGitCommit, method, github.InputGitAuthor, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:InputGitAuthor
PyGithub/tests/Repository.py:Repository:testCreateGitCommitWithParents, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateGitCommitWithAllArguments, method, github.InputGitAuthor, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:InputGitAuthor
PyGithub/tests/Repository.py:Repository:testCreateGitCommitWithAllArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateGitRelease, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateGitRelease, method, testCreateGitReleaseWithAllArguments, , , testCreateGitReleaseWithAllArguments
PyGithub/tests/Repository.py:Repository:testCreateGitReleaseWithAllArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateGitTag, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateGitTag, method, testCreateGitTagWithAllArguments, , , testCreateGitTagWithAllArguments
PyGithub/tests/Repository.py:Repository:testCreateGitTag, method, github.InputGitAuthor, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:InputGitAuthor
PyGithub/tests/Repository.py:Repository:testCreateGitTagWithAllArguments, method, github.InputGitAuthor, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:InputGitAuthor
PyGithub/tests/Repository.py:Repository:testCreateGitTagWithAllArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateKey, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateSourceImport, method, import_repo.create_source_import, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: import_repo:create_source_import
PyGithub/tests/Repository.py:Repository:testCreateSourceImport, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateRepositoryDispatch, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:Repository:testCreateSecret, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:Repository:testDeleteSecret, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:Repository:testCollaborators, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Repository.py:Repository:testCollaborators, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:Repository:testCollaborators, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testCollaboratorPermission, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetPendingInvitations, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testCollaboratorPermissionNoPushAccess, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Repository.py:Repository:testCollaboratorPermissionNoPushAccess, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCompare, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCompare, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetComments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetCommits, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Repository.py:Repository:testGetCommits, method, testGetCommitsWithArguments, , , testGetCommitsWithArguments
PyGithub/tests/Repository.py:Repository:testGetCommits, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetCommits, method, testGetCommitsWithSinceUntil, , , testGetCommitsWithSinceUntil
PyGithub/tests/Repository.py:Repository:testGetCommits, method, testGetCommitsWithAuthor, , , testGetCommitsWithAuthor
PyGithub/tests/Repository.py:Repository:testGetCommitsWithArguments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetCommitsWithSinceUntil, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetCommitsWithAuthor, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Repository.py:Repository:testGetDownloads, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetEvents, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Repository.py:Repository:testGetForks, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testCreateFork, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetGitRefs, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetGitRef, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetGitRef, method, testGetGitRef, , , testGetGitRef
PyGithub/tests/Repository.py:Repository:testGetGitRef, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:Repository:testGetGitRef, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetGitRef, method, testGetGitRefWithIssue102Reverted, , , testGetGitRefWithIssue102Reverted
PyGithub/tests/Repository.py:Repository:testGetGitRef, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Repository.py:Repository:testGetGitRefWithIssue102Reverted, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Repository.py:Repository:testGetGitRefWithIssue102Reverted, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetGitRefWithIssue102Reverted, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:Repository:testGetGitTreeWithRecursive, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetHooks, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetIssues, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetIssues, method, testGetIssuesWithArguments, , , testGetIssuesWithArguments
PyGithub/tests/Repository.py:Repository:testGetIssues, method, testGetIssuesWithWildcards, , , testGetIssuesWithWildcards
PyGithub/tests/Repository.py:Repository:testGetIssuesWithArguments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetIssuesWithWildcards, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetKeys, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetLabels, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetLanguages, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetMilestones, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetMilestones, method, testGetMilestonesWithArguments, , , testGetMilestonesWithArguments
PyGithub/tests/Repository.py:Repository:testGetMilestonesWithArguments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetIssuesEvents, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Repository.py:Repository:testGetNetworkEvents, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Repository.py:Repository:testGetTeams, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetWatchers, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetWorkflows, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetWorkflowRuns, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetSourceImport, method, import_repo.get_source_import, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: import_repo:get_source_import
PyGithub/tests/Repository.py:Repository:testGetSourceImport, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetStargazers, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetStargazers, method, testGetStargazersWithDates, , , testGetStargazersWithDates
PyGithub/tests/Repository.py:Repository:testGetStargazers, method, repo.get_stargazers_with_dates, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repo:get_stargazers_with_dates
PyGithub/tests/Repository.py:Repository:testGetStargazers, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetStargazersWithDates, method, repo.get_stargazers_with_dates, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repo:get_stargazers_with_dates
PyGithub/tests/Repository.py:Repository:testGetStargazersWithDates, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetStargazersWithDates, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetSubscribers, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testCreatePull, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreateProject, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testCreatePullFromIssue, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetPulls, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetPulls, method, testGetPullsWithArguments, , , testGetPullsWithArguments
PyGithub/tests/Repository.py:Repository:testGetPullsWithArguments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testLegacySearchIssues, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testLegacySearchIssues, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testLegacySearchIssues, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Repository.py:Repository:testMarkNotificationsAsRead, method, repo.mark_notifications_as_read, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: repo:mark_notifications_as_read
PyGithub/tests/Repository.py:Repository:testAssignees, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:Repository:testAssignees, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Repository.py:Repository:testAssignees, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetContents, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetContents, method, len, , , len
PyGithub/tests/Repository.py:Repository:testGetContents, method, testGetContentsDir, , , testGetContentsDir
PyGithub/tests/Repository.py:Repository:testGetContents, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:Repository:testGetContents, method, testGetContentsDirWithSlash, , , testGetContentsDirWithSlash
PyGithub/tests/Repository.py:Repository:testGetContents, method, testGetContentsWithRef, , , testGetContentsWithRef
PyGithub/tests/Repository.py:Repository:testGetContentsDir, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:Repository:testGetContentsDir, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetContentsDir, method, testGetContentsDirWithSlash, , , testGetContentsDirWithSlash
PyGithub/tests/Repository.py:Repository:testGetContentsDirWithSlash, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:Repository:testGetContentsDirWithSlash, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetContentsWithRef, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetContentsWithRef, method, len, , , len
PyGithub/tests/Repository.py:Repository:testCreateDeployment, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetDeployments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testCreateFile, method, github.InputGitAuthor, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:InputGitAuthor
PyGithub/tests/Repository.py:Repository:testCreateFile, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetArchiveLink, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetBranch, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testMergeWithoutMessage, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testMergeWithMessage, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testMergeWithNothingToDo, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testMergeWithConflict, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Repository.py:Repository:testMergeWithConflict, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetIssuesComments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testGetPullsComments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:Repository:testBadSubscribePubSubHubbub, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Repository.py:Repository:testBadSubscribePubSubHubbub, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testStatisticsContributors, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testStatisticsContributors, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Repository.py:Repository:testStatisticsContributors, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:Repository:testStatisticsCommitActivity, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testStatisticsCommitActivity, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Repository.py:Repository:testStatisticsCodeFrequency, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testStatisticsCodeFrequency, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Repository.py:Repository:testStatisticsParticipation, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testStatisticsPunchCard, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetLicense, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetTopics, method, self.assertIn, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIn
PyGithub/tests/Repository.py:Repository:testGetRepositoryWith301Redirect, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:Repository:testGetMatchingRefs, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:LazyRepository:setUp, method, super, , , super
PyGithub/tests/Repository.py:LazyRepository:testGetIssues, method, self.getLazyRepository, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:getLazyRepository
PyGithub/tests/Repository.py:LazyRepository:testGetIssues, method, lazy_repo.get_issues, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: lazy_repo:get_issues
PyGithub/tests/Repository.py:LazyRepository:testGetIssues, method, self.getEagerRepository, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:getEagerRepository
PyGithub/tests/Repository.py:LazyRepository:testGetIssues, method, eager_repo.get_issues, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: eager_repo:get_issues
PyGithub/tests/Repository.py:LazyRepository:testGetIssues, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Repository.py:LazyRepository:testOwner, method, self.getLazyRepository, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:getLazyRepository
PyGithub/tests/Repository.py:LazyRepository:testOwner, method, self.getEagerRepository, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:getEagerRepository
PyGithub/tests/Repository.py:LazyRepository:testOwner, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Repository.py:LazyRepository:testEnableVulnerabilityAlert, method, self.getLazyRepository, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:getLazyRepository
PyGithub/tests/Repository.py:LazyRepository:testEnableVulnerabilityAlert, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:LazyRepository:testEnableVulnerabilityAlert, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Repository.py:LazyRepository:testEnableAutomatedSecurityFixes, method, self.getLazyRepository, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:getLazyRepository
PyGithub/tests/Repository.py:LazyRepository:testEnableAutomatedSecurityFixes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:LazyRepository:testEnableAutomatedSecurityFixes, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Repository.py:LazyRepository:testDisableAutomatedSecurityFixes, method, self.getLazyRepository, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:getLazyRepository
PyGithub/tests/Repository.py:LazyRepository:testDisableAutomatedSecurityFixes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:LazyRepository:testDisableAutomatedSecurityFixes, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Repository.py:LazyRepository:testGetVulnerabilityAlert, method, self.getEagerRepository, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:getEagerRepository
PyGithub/tests/Repository.py:LazyRepository:testGetVulnerabilityAlert, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:LazyRepository:testGetVulnerabilityAlert, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Repository.py:LazyRepository:testDisableVulnerabilityAlert, method, self.getLazyRepository, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:getLazyRepository
PyGithub/tests/Repository.py:LazyRepository:testDisableVulnerabilityAlert, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Repository.py:LazyRepository:testDisableVulnerabilityAlert, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Repository.py:LazyRepository:testChangeAutomateFixWhenNoVulnerabilityAlert, method, self.getLazyRepository, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:getLazyRepository
PyGithub/tests/Repository.py:LazyRepository:testChangeAutomateFixWhenNoVulnerabilityAlert, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Repository.py:LazyRepository:testGetVulnerabilityAlertWhenTurnedOff, method, self.getEagerRepository, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:getEagerRepository
PyGithub/tests/Repository.py:LazyRepository:testGetVulnerabilityAlertWhenTurnedOff, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/RepositoryKey.py:RepositoryKey:setUp, method, super, , , super
PyGithub/tests/RepositoryKey.py:RepositoryKey:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/RepositoryKey.py:RepositoryKey:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/RepositoryKey.py:RepositoryKey:testAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/RepositoryKey.py:RepositoryKey:testAttributes, method, repr, , , repr
PyGithub/tests/RequiredPullRequestReviews.py:RequiredPullRequestReviews:setUp, method, super, , , super
PyGithub/tests/RequiredPullRequestReviews.py:RequiredPullRequestReviews:testAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/RequiredPullRequestReviews.py:RequiredPullRequestReviews:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/RequiredPullRequestReviews.py:RequiredPullRequestReviews:testAttributes, method, self.assertIs, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIs
PyGithub/tests/RequiredPullRequestReviews.py:RequiredPullRequestReviews:testOrganizationOwnedTeam, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/RequiredStatusChecks.py:RequiredStatusChecks:setUp, method, super, , , super
PyGithub/tests/RequiredStatusChecks.py:RequiredStatusChecks:testAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/RequiredStatusChecks.py:RequiredStatusChecks:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Retry.py:Retry:setUp, method, urllib3.Retry, [CLASS] [SIDE_PACKAGE], C:/Python39/lib/site-packages/urllib3, [CLASS] [SIDE_PACKAGE]: urllib3:Retry
PyGithub/tests/Retry.py:Retry:setUp, method, Framework.enableRetry, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: Framework:enableRetry
PyGithub/tests/Retry.py:Retry:setUp, method, super, , , super
PyGithub/tests/Retry.py:Retry:testShouldNotRetryWhenStatusNotOnList, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Retry.py:Retry:testShouldNotRetryWhenStatusNotOnList, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Retry.py:Retry:testReturnsRepoAfter3Retries, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Retry.py:Retry:testReturnsRepoAfter3Retries, method, self.assertIsInstance, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsInstance
PyGithub/tests/Retry.py:Retry:testReturnsRepoAfter1Retry, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Retry.py:Retry:testReturnsRepoAfter1Retry, method, self.assertIsInstance, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsInstance
PyGithub/tests/Retry.py:Retry:testRaisesRetryErrorAfterMaxRetries, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Retry.py:Retry:testRaisesRetryErrorAfterMaxRetries, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Retry.py:Retry:testReturnsRepoAfterSettingRetryHttp, method, github.Github, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: github:Github
PyGithub/tests/Retry.py:Retry:testReturnsRepoAfterSettingRetryHttp, method, g.get_repo, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: g:get_repo
PyGithub/tests/Retry.py:Retry:testReturnsRepoAfterSettingRetryHttp, method, self.assertIsInstance, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsInstance
PyGithub/tests/Retry.py:Retry:testReturnsRepoAfterSettingRetryHttp, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Search.py:Search:setUp, method, super, , , super
PyGithub/tests/Search.py:Search:testSearchUsers, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Search.py:Search:testPaginateSearchUsers, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Search.py:Search:testPaginateSearchUsers, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Search.py:Search:testGetPageOnSearchUsers, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Search.py:Search:testGetPageOnSearchUsers, method, users.get_page, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: users:get_page
PyGithub/tests/Search.py:Search:testSearchRepos, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Search.py:Search:testSearchRepos, method, testSearchReposWithNoResults, , , testSearchReposWithNoResults
PyGithub/tests/Search.py:Search:testSearchRepos, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Search.py:Search:testSearchReposWithNoResults, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Search.py:Search:testSearchIssues, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Search.py:Search:testPaginateSearchCommits, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Search.py:Search:testSearchTopics, method, self.assertListKeyBegin, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyBegin
PyGithub/tests/Search.py:Search:testPaginateSearchTopics, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Search.py:Search:testSearchCode, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Search.py:Search:testSearchCode, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Search.py:Search:testSearchCode, method, isinstance, [BUILT_IN], , [BUILT_IN]: isinstance
PyGithub/tests/Search.py:Search:testSearchCode, method, content.decode, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: content:decode
PyGithub/tests/Search.py:Search:testSearchHighlightingCode, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Search.py:Search:testUrlquotingOfQualifiers, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Search.py:Search:testUrlquotingOfQuery, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/SelfHostedActionsRunner.py:SelfHostedActionsRunner:setUp, method, super, , , super
PyGithub/tests/SelfHostedActionsRunner.py:SelfHostedActionsRunner:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/SelfHostedActionsRunner.py:SelfHostedActionsRunner:testAttributes, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/SelfHostedActionsRunner.py:SelfHostedActionsRunner:testAttributes, method, runner.labels, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: runner:labels
PyGithub/tests/SelfHostedActionsRunner.py:SelfHostedActionsRunner:testAttributes, method, len, , , len
PyGithub/tests/SourceImport.py:SourceImport:setUp, method, super, , , super
PyGithub/tests/SourceImport.py:SourceImport:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/SourceImport.py:SourceImport:testUpdate, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/SourceImport.py:SourceImport:testUpdate, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Tag.py:Tag:setUp, method, super, , , super
PyGithub/tests/Tag.py:Tag:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Tag.py:Tag:testAttributes, method, repr, , , repr
PyGithub/tests/Tag.py:Tag:testAttributes, method, commit=Commit, , , commit=Commit
PyGithub/tests/Team.py:Team:setUp, method, super, , , super
PyGithub/tests/Team.py:Team:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Team.py:Team:testAttributes, method, repr, , , repr
PyGithub/tests/Team.py:Team:testDiscussions, method, list, , , list
PyGithub/tests/Team.py:Team:testDiscussions, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Team.py:Team:testDiscussions, method, datetime, [FUNC] [SIDE_PACKAGE], , [FUNC] [SIDE_PACKAGE]: datetime.datetime
PyGithub/tests/Team.py:Team:testMembers, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Team.py:Team:testMembers, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Team.py:Team:testMembers, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Team.py:Team:testMembers, method, self.assertRaises, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertRaises
PyGithub/tests/Team.py:Team:testTeamMembership, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Team.py:Team:testTeamMembership, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Team.py:Team:testTeamMembership, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Team.py:Team:testTeamMembership, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Team.py:Team:testRepoPermission, method, warnings.filterwarnings, [CLASS] [STDLIB], , [CLASS] [STDLIB]: warnings:filterwarnings
PyGithub/tests/Team.py:Team:testRepoPermission, method, warnings.resetwarnings, [CLASS] [STDLIB], , [CLASS] [STDLIB]: warnings:resetwarnings
PyGithub/tests/Team.py:Team:testUpdateTeamRepository, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Team.py:Team:testRepos, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Team.py:Team:testRepos, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/Team.py:Team:testRepos, method, self.assertIsNone, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertIsNone
PyGithub/tests/Team.py:Team:testRepos, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Team.py:Team:testEditWithoutArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Team.py:Team:testEditWithAllArguments, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Team.py:Team:testGetTeams, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Team.py:Team:testGetTeams, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Time.py:UTCtzinfo:utcoffset, method, timedelta, [FUNC] [SIDE_PACKAGE], , [FUNC] [SIDE_PACKAGE]: datetime.timedelta
PyGithub/tests/Time.py:UTCtzinfo:dst, method, timedelta, [FUNC] [SIDE_PACKAGE], , [FUNC] [SIDE_PACKAGE]: datetime.timedelta
PyGithub/tests/Topic.py:Topic:setUp, method, super, , , super
PyGithub/tests/Topic.py:Topic:setUp, method, list, , , list
PyGithub/tests/Topic.py:Topic:testAllFields, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Topic.py:Topic:testAllFields, method, datetime, [FUNC] [SIDE_PACKAGE], , [FUNC] [SIDE_PACKAGE]: datetime.datetime
PyGithub/tests/Topic.py:Topic:testNamesFromSearchResults, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Topic.py:Topic:testNamesFromSearchResults, method, attrgetter, [FUNC] [SIDE_PACKAGE], , [FUNC] [SIDE_PACKAGE]: operator.attrgetter
PyGithub/tests/Traffic.py:Traffic:setUp, method, super, , , super
PyGithub/tests/Traffic.py:Traffic:testGetReferrers, method, self.assertGreaterEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertGreaterEqual
PyGithub/tests/Traffic.py:Traffic:testGetReferrers, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Traffic.py:Traffic:testGetReferrers, method, repr, , , repr
PyGithub/tests/Traffic.py:Traffic:testGetPaths, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Traffic.py:Traffic:testGetPaths, method, repr, , , repr
PyGithub/tests/Traffic.py:Traffic:testGetViews, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Traffic.py:Traffic:testGetViews, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Traffic.py:Traffic:testGetViews, method, repr, , , repr
PyGithub/tests/Traffic.py:Traffic:testGetClones, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Traffic.py:Traffic:testGetClones, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Traffic.py:Traffic:testGetClones, method, repr, , , repr
PyGithub/tests/UserKey.py:UserKey:setUp, method, super, , , super
PyGithub/tests/UserKey.py:UserKey:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/UserKey.py:UserKey:testAttributes, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/UserKey.py:UserKey:testAttributes, method, repr, , , repr
PyGithub/tests/Workflow.py:Workflow:setUp, method, super, , , super
PyGithub/tests/Workflow.py:Workflow:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/Workflow.py:Workflow:testAttributes, method, repr, , , repr
PyGithub/tests/Workflow.py:Workflow:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/Workflow.py:Workflow:testGetRunsWithNoArguments, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Workflow.py:Workflow:testGetRunsWithObjects, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Workflow.py:Workflow:testGetRunsWithStrings, method, self.assertListKeyEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertListKeyEqual
PyGithub/tests/Workflow.py:Workflow:testCreateDispatchWithBranch, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Workflow.py:Workflow:testCreateDispatchWithTag, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Workflow.py:Workflow:testCreateDispatchWithString, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/Workflow.py:Workflow:testCreateDispatchForNonTriggerEnabled, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/WorkflowRun.py:WorkflowRun:setUp, method, super, , , super
PyGithub/tests/WorkflowRun.py:WorkflowRun:testAttributes, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/WorkflowRun.py:WorkflowRun:testAttributes, method, repr, , , repr
PyGithub/tests/WorkflowRun.py:WorkflowRun:testAttributes, method, datetime.datetime, [CLASS] [STDLIB], , [CLASS] [STDLIB]: datetime:datetime
PyGithub/tests/WorkflowRun.py:WorkflowRun:test_timing, method, self.assertEqual, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertEqual
PyGithub/tests/WorkflowRun.py:WorkflowRun:test_rerun, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
PyGithub/tests/WorkflowRun.py:WorkflowRun:test_rerun, method, test_rerun_with_successful_run, , , test_rerun_with_successful_run
PyGithub/tests/WorkflowRun.py:WorkflowRun:test_rerun, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/WorkflowRun.py:WorkflowRun:test_rerun_with_successful_run, method, self.assertFalse, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertFalse
PyGithub/tests/WorkflowRun.py:WorkflowRun:test_cancel, method, self.assertTrue, [CLASS] [SIDE_PACKAGE], , [CLASS] [SIDE_PACKAGE]: self:assertTrue
