uri,name,type,n_variable,n_words,n_words_unique,n_characters,avg_char_per_word,n_loop,n_ifthen,arg_name,arg_type,arg_value,line,docs
./run_pipy.py:get_current_githash,get_current_githash,function,6,12,9,126,10.5,0,0,[],[],[],62,[]
./run_pipy.py:update_version,update_version,function,12,31,28,315,10.16,0,0,"['path', 'n']","[None, None]","[None, '1']",69,[]
./run_pipy.py:git_commit,git_commit,function,3,29,19,164,5.66,0,2,['message'],[None],[None],90,[]
./run_pipy.py:ask,ask,function,2,3,3,42,14.0,0,0,"['question', 'ans']","[None, None]","[None, ""'yes'""]",101,[]
./run_pipy.py:pypi_upload,pypi_upload,function,5,39,34,390,10.0,1,1,[],[],[],105,"['    """"""\n', '      It requires credential in .pypirc  files\n', '      __token__\n', '      or in github SECRETS\n', '\n', '    """"""\n']"
./run_pipy.py:main,main,function,2,8,7,75,9.38,0,0,['*args'],[None],[None],125,[]
./run_pipy.py:Version,Version,class,21,58,48,650,11.21,0,1,[],[],[],33,[]
./run_pipy.py:Version:__init__,Version:__init__,method,6,6,6,50,8.33,0,0,"['self', 'major', 'minor', 'patch']","[None, None, None, None]","[None, None, None, None]",36,[]
./run_pipy.py:Version:__str__,Version:__str__,method,2,2,2,36,18.0,0,0,['self'],[None],[None],41,[]
./run_pipy.py:Version:__repr__,Version:__repr__,method,2,2,2,20,10.0,0,0,['self'],[None],[None],44,[]
./run_pipy.py:Version:stringify,Version:stringify,method,1,2,2,51,25.5,0,0,['self'],[None],[None],47,[]
./run_pipy.py:Version:new_version,Version:new_version,method,1,3,3,53,17.67,0,0,"['self', 'orig']","[None, None]","[None, None]",50,[]
./run_pipy.py:Version:parse,Version:parse,method,5,23,22,192,8.35,0,1,"['cls', 'string']","[None, None]","[None, None]",54,[]
./setup.py:get_current_githash,get_current_githash,function,6,14,11,123,8.79,0,0,[],[],[],33,[]
./test.py:pd_random,pd_random,function,9,29,22,152,5.24,0,0,"['ncols', 'nrows']","[None, None]","['7', '100']",8,[]
./test.py:test_utilmy_plot,test_utilmy_plot,function,6,10,10,87,8.7,0,0,[],[],[],19,[]
./test.py:test_utilmy_pd_os_session,test_utilmy_pd_os_session,function,48,241,148,2263,9.39,2,0,[],[],[],25,[]
./test.py:test_utilmy_session,test_utilmy_session,function,17,48,40,459,9.56,1,0,[],[],[],118,[]
./test.py:test_docs_cli,test_docs_cli,function,2,9,9,80,8.89,0,0,[],[],[],142,"['    """"""\n', '      from utilmy.docs.generate_doc import run_markdown, run_table\n', '\n', '    """"""\n']"
./test.py:test_decorators_os,test_decorators_os,function,27,59,46,673,11.41,0,0,['*args'],[None],[None],155,[]
./test.py:pd_generate_data,pd_generate_data,function,19,66,49,467,7.08,0,0,"['ncols', 'nrows']","[None, None]","['7', '100']",209,"['    """"""\n', '    Generate sample data for function testing\n', '    categorical features for anova test\n', '    """"""\n']"
./test.py:test_tabular_test,test_tabular_test,function,10,16,16,182,11.38,0,0,[],[],[],227,"['        """"""\n', '        ANOVA test\n', '        """"""\n']"
./test.py:test_text_similarity,test_text_similarity,function,21,45,39,522,11.6,0,0,[],[],[],242,[]
./test.py:test_text_pdcluster,test_text_pdcluster,function,5,6,6,59,9.83,0,0,[],[],[],262,[]
./utilmy/dates.py:log,log,function,1,1,1,9,9.0,0,0,['*s'],[None],[None],6,[]
./utilmy/dates.py:pd_date_split,pd_date_split,function,31,153,68,1005,6.57,1,2,"['df', 'coldate ', 'prefix_col ', 'verbose']","[None, None, None, None]","[None, ""  'time_key'"", '""""', 'False']",11,[]
./utilmy/dates.py:date_now,date_now,function,14,17,15,220,12.94,0,0,"['fmt=""%Y-%m-%d %H', 'add_days', 'timezone']","['', None, None]","['""%Y-%m-%d %H:%M:%S %Z%z""', '0', ""'Asia/Tokyo'""]",41,[]
./utilmy/dates.py:date_is_holiday,date_is_holiday,function,8,23,21,146,6.35,0,0,['array'],[None],[None],53,"['    """"""\n', '      is_holiday([ pd.to_datetime(""2015/1/1"") ] * 10)\n', '\n', '    """"""\n']"
./utilmy/dates.py:date_weekmonth2,date_weekmonth2,function,3,17,12,51,3.0,0,1,['d'],[None],[None],63,[]
./utilmy/dates.py:date_weekmonth,date_weekmonth,function,4,37,18,194,5.24,0,2,['d'],[None],[None],71,[]
./utilmy/dates.py:date_weekyear2,date_weekyear2,function,1,6,6,53,8.83,0,0,['dt'],[None],[None],80,[]
./utilmy/dates.py:date_weekday_excel,date_weekday_excel,function,7,17,15,98,5.76,0,1,['x'],[None],[None],84,[]
./utilmy/dates.py:date_weekyear_excel,date_weekyear_excel,function,14,47,40,302,6.43,0,1,['x'],[None],[None],91,[]
./utilmy/dates.py:date_generate,date_generate,function,8,17,16,174,10.24,0,0,"['start', 'ndays']","[None, None]","[""'2018-01-01'"", '100']",110,[]
./utilmy/decorators.py:timeout,timeout,function,11,25,21,297,11.88,0,0,"['seconds', 'error_message']","[None, None]","['10', 'os.strerror(errno.ETIME']",22,"['    """"""Decorator to throw timeout error, if function doesnt complete in certain time\n', '    Args:\n', '        seconds:``int``\n', '            No of seconds to wait\n', '        error_message:``str``\n', '            Error message\n', '            \n', '    """"""\n']"
./utilmy/decorators.py:timer,timer,function,8,22,20,208,9.45,0,0,['func'],[None],[None],49,"['    """"""\n', '    Decorator to show the execution time of a function or a method in a class.\n', '    """"""\n']"
./utilmy/decorators.py:profiler_context,profiler_context,function,9,20,20,191,9.55,0,0,[],[],[],67,"['    """"""\n', ""    Context Manager the will profile code inside it's bloc.\n"", '    And print the result of profiler.\n', '    Example:\n', '        with profiler_context():\n', '            # code to profile here\n', '    """"""\n']"
./utilmy/decorators.py:profiler_deco,profiler_deco,function,26,45,39,511,11.36,0,0,['func'],[None],[None],87,"['    """"""\n', '    A decorator that will profile a function\n', '    And print the result of profiler.\n', '    """"""\n']"
./utilmy/decorators.py:profiler_decorator_base,profiler_decorator_base,function,15,23,22,245,10.65,0,0,['fnc'],[None],[None],105,"['    """"""\n', '    A decorator that uses cProfile to profile a function\n', '    And print the result\n', '    """"""\n']"
./utilmy/decorators.py:os_multithread,os_multithread,function,19,48,40,530,11.04,3,0,['**kwargs'],[None],[None],127,"['    """"""\n', '    Creating n number of threads:  1 thread per function,\n', '    starting them and waiting for their subsequent completion\n', '   Example:\n', '        os_multithread(function1=(function_name1, (arg1, arg2, ...)),\n', '                       ...)\n', '\n', '    def test_print(*args):\n', '        print(*args)\n', '\n', '    os_multithread(function1=(test_print, (""some text"",)),\n', '                          function2=(test_print, (""bbbbb"",)),\n', '                          function3=(test_print, (""ccccc"",)))\n', '\n', '\n', '    """"""\n']"
./utilmy/decorators.py:threading_deco,threading_deco,function,6,14,13,185,13.21,0,0,['func'],[None],[None],166,"['    """""" A decorator to run function in background on thread\n', '\tArgs:\n', '\t\tfunc:``function``\n', '\t\t\tFunction with args\n', '\n', '\tReturn:\n', '\t\tbackground_thread: ``Thread``\n', '\n', '    """"""\n']"
./utilmy/decorators.py:_TimeoutError,_TimeoutError,class,0,1,1,4,4.0,0,0,[],[],[],11,[]
./utilmy/images.py:log,log,function,1,1,1,8,8.0,0,0,['*s'],[None],[None],13,[]
./utilmy/images.py:deps,deps,function,5,7,7,74,10.57,0,0,[],[],[],17,[]
./utilmy/images.py:read_image,read_image,function,18,50,37,703,14.06,0,4,"['filepath_or_buffer', 'io.BytesIO]']","[' typing.Union[str', None]","[None, None]",24,"['    """"""Read a file into an image object\n', '    Args:\n', '        filepath_or_buffer: The path to the file, a URL, or any object\n', '            with a `read` method (such as `io.BytesIO`)\n', '    """"""\n']"
./utilmy/images.py:visualize_in_row,visualize_in_row,function,12,24,24,239,9.96,1,0,['**images'],[None],[None],53,"['    """"""Plot images in one row.""""""\n']"
./utilmy/images.py:maintain_aspect_ratio_resize,maintain_aspect_ratio_resize,function,10,40,29,229,5.72,0,2,"['image', 'width', 'height', 'inter']","[None, None, None, None]","[None, 'None', 'None', 'cv2.INTER_AREA']",68,[]
./utilmy/io.py:screenshot,screenshot,function,9,22,16,132,6.0,0,0,"['output', 'monitors']","[None, None]","[""'fullscreen.png'"", '-1']",4,"['  """"""\n', '  with mss() as sct:\n', '    for _ in range(100):\n', '        sct.shot()\n', '  # MacOS X\n', '  from mss.darwin import MSS as mss\n', '  \n', '  \n', '  """"""\n']"
./utilmy/tabular.py:log,log,function,1,1,1,8,8.0,0,0,['*s'],[None],[None],12,[]
./utilmy/tabular.py:test_anova,test_anova,function,23,78,55,663,8.5,2,1,"['df', 'col1', 'col2']","[None, None, None]","[None, None, None]",19,"['    """"""\n', '    ANOVA test two categorical features\n', '    Input dfframe, 1st feature and 2nd feature\n', '    """"""\n']"
./utilmy/tabular.py:test_normality2,test_normality2,function,19,122,59,890,7.3,1,6,"['df', 'column', 'test_type']","[None, None, None]","[None, None, None]",48,"['    """"""\n', '    Function to check Normal Distribution of a Feature by 3 methods\n', '    Input dfframe, feature name, and a test type\n', '    Three types of test\n', ""    1)'Shapiro'\n"", ""    2)'Normal'\n"", ""    3)'Anderson'\n"", '\n', '    output the statistical test score and result whether accept or reject\n', '    Accept mean the feature is Gaussain\n', '    Reject mean the feature is not Gaussain\n', '    """"""\n']"
./utilmy/tabular.py:test_plot_qqplot,test_plot_qqplot,function,15,29,25,338,11.66,0,0,"['df', 'col_name']","[None, None]","[None, None]",95,"['    """"""\n', '    Function to plot boxplot, histplot and qqplot for numerical feature analyze\n', '    """"""\n']"
./utilmy/tabular.py:test_heteroscedacity,test_heteroscedacity,function,61,111,85,993,8.95,0,0,"['y', 'y_pred', 'pred_value_only']","[None, None, None]","[None, None, '1']",112,[]
./utilmy/tabular.py:pd_stat_distribution_colnum,pd_stat_distribution_colnum,function,23,84,72,646,7.69,1,3,"['df', 'nrows', 'verbose']","[None, None, None]","[None, '2000', 'False']",289,"['    """""" Stats the tables\n', '    """"""\n']"
./utilmy/tabular.py:pd_stat_histogram,pd_stat_histogram,function,10,21,20,220,10.48,0,0,"['df', 'bins', 'coltarget']","[None, None, None]","[None, '50', '""diff""']",329,"['    """"""\n', '    :param df:\n', '    :param bins:\n', '    :param coltarget:\n', '    :return:\n', '    """"""\n']"
./utilmy/tabular.py:np_col_extractname,np_col_extractname,function,7,38,24,216,5.68,1,5,['col_onehot'],[None],[None],344,"['    """"""\n', '    Column extraction from onehot name\n', '    :param col_onehotp\n', '    :return:\n', '    """"""\n']"
./utilmy/tabular.py:np_list_remove,np_list_remove,function,12,42,26,214,5.1,3,4,"['cols', 'colsremove', 'mode']","[None, None, None]","[None, None, '""exact""']",367,"['    """"""\n', '    """"""\n']"
./utilmy/tabular.py:pd_stat_shift_trend_changes,pd_stat_shift_trend_changes,function,20,41,35,660,16.1,0,0,"['df', 'feature', 'target_col', 'threshold']","[None, None, None, None]","[None, None, None, '0.03']",392,"['    """"""\n', '    Calculates number of times the trend of feature wrt target changed direction.\n', '    :param df: df_grouped dataset\n', '    :param feature: feature column name\n', '    :param target_col: target column\n', '    :param threshold: minimum % difference required to count as trend change\n', '    :return: number of trend chagnes for the feature\n', '    """"""\n']"
./utilmy/tabular.py:pd_stat_shift_trend_correlation,pd_stat_shift_trend_correlation,function,19,63,55,788,12.51,0,2,"['df', 'df_test', 'colname', 'target_col']","[None, None, None, None]","[None, None, None, None]",416,"['    """"""\n', '    Calculates correlation between train and test trend of colname wrt target.\n', '    :param df: train df data\n', '    :param df_test: test df data\n', '    :param colname: colname column name\n', '    :param target_col: target column name\n', '    :return: trend correlation between train and test\n', '    """"""\n']"
./utilmy/tabular.py:pd_stat_shift_changes,pd_stat_shift_changes,function,33,99,81,1236,12.48,1,4,"['df', 'target_col', 'features_list', 'bins', 'df_test']","[None, None, None, None, None]","[None, None, '0', '10', '0']",447,"['    """"""\n', '    Calculates trend changes and correlation between train/test for list of features\n', '    :param df: dfframe containing features and target columns\n', '    :param target_col: target column name\n', '    :param features_list: by default creates plots for all features. If list passed, creates plots of only those features.\n', '    :param bins: number of bins to be created from continuous colname\n', '    :param df_test: test df which has to be compared with input df for correlation\n', '    :return: dfframe with trend changes and trend correlation (if test df passed)\n', '    """"""\n']"
./utilmy/tabular.py:np_conv_to_one_col,np_conv_to_one_col,function,5,11,10,137,12.45,0,0,"['np_array', 'sep_char']","[None, None]","[None, '""_""']",492,"['    """"""\n', '    converts string/numeric columns to one string column\n', '    :param np_array: the numpy array with more than one column\n', '    :param sep_char: the separator character\n', '    """"""\n']"
./utilmy/text.py:log,log,function,1,1,1,8,8.0,0,0,['*s'],[None],[None],17,[]
./utilmy/text.py:pd_text_hash_create_lsh,pd_text_hash_create_lsh,function,22,32,29,327,10.22,2,0,"['df', 'col', 'sep', 'threshold', 'num_perm']","[None, None, None, None, None]","[None, None, '"" ""', '0.7', '10']",24,"[""    '''\n"", '    For each of the entry create a hash function\n', ""    '''\n""]"
./utilmy/text.py:pd_text_getcluster,pd_text_getcluster,function,16,37,32,367,9.92,1,1,"['df', 'col', 'threshold', 'num_perm']","[None, None, None, None]","[None, None, None, None]",53,"[""    '''\n"", '    For each of the hash function find a cluster and assign unique id to the dataframe cluster_id\n', ""    '''\n""]"
./utilmy/text.py:pd_similarity,pd_similarity,function,20,65,51,548,8.43,1,3,"['df', 'cols', 'algo']","[' pd.DataFrame', None, None]","[None, '[]', ""''""]",81,"[""    '''\n"", '        Return similarities between two columns with \n', ""        python's SequenceMatcher algorithm\n"", '\n', '        Args:\n', '            df (pd.DataFrame): Pandas Dataframe.\n', '            algo (String)    : rapidfuzz | editdistance \n', '            cols (list[str]) : List of of columns name (2 columns)\n', '\n', '        Returns:\n', '            pd.DataFrame\n', '\n', ""    '''\n""]"
./utilmy/text.py:test_lsh,test_lsh,function,10,28,27,222,7.93,0,0,[],[],[],120,[]
./utilmy/utilmy.py:log,log,function,1,1,1,9,9.0,0,0,['*s'],[None],[None],6,[]
./utilmy/utilmy.py:pd_merge,pd_merge,function,3,17,16,120,7.06,0,0,"['df1', 'df2', 'on', 'colkeep']","[None, None, None, None]","[None, None, 'None', 'None']",11,[]
./utilmy/utilmy.py:pd_plot_multi,pd_plot_multi,function,40,109,78,1103,10.12,2,3,"['df', 'plot_type', 'cols_axe1', 'cols_axe2', 'figsize', '4']","[None, None, 'list', 'list', None, None]","[None, 'None', '[]', '[]', '(8', None]",17,[]
./utilmy/utilmy.py:pd_filter,pd_filter,function,18,106,52,531,5.01,2,7,"['df', 'filter_dict', 'verbose']","[None, None, None]","[None, '""shop_id=11, l1_genre_id>600, l2_genre_id<80311,""', 'False']",66,"['    """"""\n', '     dfi = pd_filter2(dfa, ""shop_id=11, l1_genre_id>600, l2_genre_id<80311,"" )\n', '     dfi2 = pd_filter(dfa, {""shop_id"" : 11} )\n', '     ### Dilter dataframe with basic expr\n', '    """"""\n']"
./utilmy/utilmy.py:pd_to_file,pd_to_file,function,14,35,24,272,7.77,0,3,"['df', 'filei', 'check', 'verbose', '**kw']","[None, None, None, None, None]","[None, None, '""check""', 'True', None]",104,[]
./utilmy/utilmy.py:pd_read_file,pd_read_file,function,66,249,142,1645,6.61,4,18,"['path_glob', 'ignore_index', 'cols', 'verbose', 'nrows', 'concat_sort', 'n_pool', 'drop_duplicates', 'col_filter', 'col_filter_val', 'dtype_reduce', '**kw']","[None, None, None, None, None, None, None, None, None, None, None, None]","['""*.pkl""', 'True', 'None', 'False', '-1', 'True', '1', 'None', 'None', 'None', 'None', None]",130,"['  """"""  Read file in parallel from disk : very Fast\n', '  :param path_glob: list of pattern, or sep by "";""\n', '  :return:\n', '  """"""\n']"
./utilmy/utilmy.py:pd_sample_strat,pd_sample_strat,function,5,10,9,104,10.4,0,0,"['df', 'col', 'n']","[None, None, None]","[None, None, None]",213,[]
./utilmy/utilmy.py:pd_cartesian,pd_cartesian,function,12,22,18,154,7.0,0,0,"['df1', 'df2']","[None, None]","[None, None]",221,[]
./utilmy/utilmy.py:pd_plot_histogram,pd_plot_histogram,function,24,71,45,428,6.03,0,4,"['dfi', 'path_save', 'nbin', 'q5', 'q95', 'nsample', 'show', 'clear']","[None, None, None, None, None, None, None, None]","[None, 'None', '20.0', '0.005', '0.995', ' -1', 'False', 'True']",233,[]
./utilmy/utilmy.py:pd_col_bins,pd_col_bins,function,8,19,18,128,6.74,0,0,"['df', 'col', 'nbins']","[None, None, None]","[None, None, '5']",258,[]
./utilmy/utilmy.py:pd_dtype_reduce,pd_dtype_reduce,function,9,35,23,238,6.8,1,1,"['dfm', 'int0 ', 'float0 ']","[None, None, None]","[None, ""'int32'"", "" 'float32'""]",265,[]
./utilmy/utilmy.py:pd_dtype_count_unique,pd_dtype_count_unique,function,17,73,57,541,7.41,1,3,"['df', 'col_continuous']","[None, None]","[None, '[]']",274,"['    """"""Learns the number of categories in each variable and standardizes the data.\n', '        ----------\n', '        data: pd.DataFrame\n', '        continuous_ids: list of ints\n', '            List containing the indices of known continuous variables. Useful for\n', '            discrete data like age, which is better modeled as continuous.\n', '        Returns\n', '        -------\n', '        ncat:  number of categories of each variable. -1 if the variable is  continuous.\n', '    """"""\n']"
./utilmy/utilmy.py:pd_dtype_to_category,pd_dtype_to_category,function,15,36,29,350,9.72,1,3,"['df', 'col_exclude', 'treshold']","[None, None, None]","[None, None, '0.5']",313,"['  """"""\n', '    Convert string to category\n', '  """"""\n']"
./utilmy/utilmy.py:pd_dtype_getcontinuous,pd_dtype_getcontinuous,function,10,43,29,261,6.07,1,2,"['df', 'cols_exclude', 'nsample']","[None, 'list', None]","[None, '[]', '-1']",332,[]
./utilmy/utilmy.py:pd_del,pd_del,function,6,13,13,50,3.85,1,0,"['df', 'cols']","[None, 'list']","[None, None]",348,[]
./utilmy/utilmy.py:pd_add_noise,pd_add_noise,function,18,41,33,295,7.2,1,1,"['df', 'level', 'cols_exclude']","[None, None, 'list']","[None, '0.05', '[]']",357,[]
./utilmy/utilmy.py:pd_cols_unique_count,pd_cols_unique_count,function,10,43,29,261,6.07,1,2,"['df', 'cols_exclude', 'nsample']","[None, 'list', None]","[None, '[]', '-1']",371,[]
./utilmy/utilmy.py:pd_show,pd_show,function,6,10,10,116,11.6,0,0,"['df', 'nrows', 'reader', '**kw']","[None, None, None, None]","[None, '100', ""'notepad.exe'"", None]",389,"['    """""" Show from Dataframe\n', '    """"""\n']"
./utilmy/utilmy.py:to_dict,to_dict,function,2,2,2,8,4.0,0,0,['**kw'],[None],[None],409,[]
./utilmy/utilmy.py:to_timeunix,to_timeunix,function,2,16,12,187,11.69,0,2,['datex'],[None],"['""2018-01-16""']",414,[]
./utilmy/utilmy.py:to_datetime,to_datetime,function,5,8,8,45,5.62,0,0,['x'],[None],[None],422,[]
./utilmy/utilmy.py:np_list_intersection,np_list_intersection,function,4,10,8,24,2.4,1,1,"['l1', 'l2']","[None, None]","[None, None]",427,[]
./utilmy/utilmy.py:np_add_remove,np_add_remove,function,7,10,9,116,11.6,1,0,"['set_', 'to_remove', 'to_add']","[None, None, None]","[None, None, None]",431,[]
./utilmy/utilmy.py:to_float,to_float,function,1,8,6,46,5.75,0,0,['x'],[None],[None],440,[]
./utilmy/utilmy.py:to_int,to_int,function,1,8,6,44,5.5,0,0,['x'],[None],[None],447,[]
./utilmy/utilmy.py:config_load,config_load,function,31,126,90,1072,8.51,2,4,"['config_path', 'path_default', 'config_default']","['str ', 'str', 'dict']","[' None', 'None', 'None']",458,"['    """"""Load Config file into a dict  from .json or .yaml file\n', '    TODO .cfg file\n', '    1) load config_path\n', '    2) If not, load default from HOME USER\n', '    3) If not, create default on in python code\n', '    Args:\n', ""        config_path: path of config or 'default' tag value\n"", '    Returns: dict config\n', '    """"""\n']"
./utilmy/utilmy.py:os_path_split,os_path_split,function,10,27,21,215,7.96,0,2,['fpath'],['str'],"['""""']",520,[]
./utilmy/utilmy.py:os_file_replacestring,os_file_replacestring,function,13,35,30,411,11.74,2,0,"['findstr', 'replacestr', 'some_dir', 'pattern', 'dirlevel']","[None, None, None, None, None]","[None, None, None, '""*.*""', '1']",537,"['    """""" #fil_replacestring_files(""logo.png"", ""logonew.png"", r""D:/__Alpaca__details/aiportfolio"",\n', '        pattern=""*.html"", dirlevel=5  )\n', '    """"""\n']"
./utilmy/utilmy.py:os_walk,os_walk,function,29,76,44,963,12.67,4,3,"['dir1', 'pattern', 'dirlevel', 'path_only']","[None, None, None, None]","[None, '""*.*""', '20', 'False']",559,"['    """"""\n', '            matches[""dirpath""]  = []\n', '            matches[""filename""] = []\n', '            matches[""fullpath""] = []\n', '\n', '    """"""\n']"
./utilmy/utilmy.py:z_os_search_fast,z_os_search_fast,function,29,122,72,893,7.32,4,4,"['fname', 'texts', 'mode']","[None, None, None]","[None, 'None', '""regex/str""']",603,[]
./utilmy/utilmy.py:os_search_content,os_search_content,function,13,37,33,301,8.14,1,1,"['srch_pattern', 'mode', 'dir1', 'file_pattern', 'dirlevel']","[None, None, None, None, None]","['None', '""str""', '""""', '""*.*""', '1']",647,"['    """"""  search inside the files\n', '\n', '    """"""\n']"
./utilmy/utilmy.py:os_get_function_name,os_get_function_name,function,6,31,18,199,6.42,0,0,[],[],[],663,[]
./utilmy/utilmy.py:os_variable_init,os_variable_init,function,3,12,10,45,3.75,1,0,"['ll', 'globs']","[None, None]","[None, None]",676,[]
./utilmy/utilmy.py:os_import,os_import,function,14,59,37,426,7.22,3,3,"['mod_name', 'globs', 'verbose']","[None, None, None]","['""myfile.config.model""', 'None', 'True']",684,[]
./utilmy/utilmy.py:os_variable_exist,os_variable_exist,function,4,19,16,111,5.84,0,1,"['x', 'globs', 'msg']","[None, None, None]","[None, None, '""""']",711,[]
./utilmy/utilmy.py:os_variable_check,os_variable_check,function,9,31,26,149,4.81,1,2,"['ll', 'globs', 'do_terminate']","[None, None, None]","[None, 'None', 'True']",721,[]
./utilmy/utilmy.py:os_clean_memory,os_clean_memory,function,5,13,12,56,4.31,1,0,"['varlist', 'globx']","[None, None]","[None, None]",733,[]
./utilmy/utilmy.py:os_system_list,os_system_list,function,11,45,38,219,4.87,1,1,"['ll', 'logfile', 'sleep_sec']","[None, None, None]","[None, 'None', '10']",741,[]
./utilmy/utilmy.py:os_file_check,os_file_check,function,4,16,14,121,7.56,0,0,['fp'],[None],[None],763,[]
./utilmy/utilmy.py:os_to_file,os_to_file,function,3,7,7,52,7.43,0,0,"['txt', 'filename', 'mode']","[None, None, None]","['""""', '""ztmp.txt""', ""'a'""]",771,[]
./utilmy/utilmy.py:os_platform_os,os_platform_os,function,2,2,2,18,9.0,0,0,[],[],[],776,[]
./utilmy/utilmy.py:os_cpu,os_cpu,function,2,2,2,20,10.0,0,0,[],[],[],781,[]
./utilmy/utilmy.py:os_platform_ip,os_platform_ip,function,0,1,1,4,4.0,0,0,[],[],[],786,[]
./utilmy/utilmy.py:os_memory,os_memory,function,13,36,30,278,7.72,1,1,[],[],[],791,"['    """""" Get node total memory and memory usage in linux\n', '    """"""\n']"
./utilmy/utilmy.py:os_sleep_cpu,os_sleep_cpu,function,8,19,14,169,8.89,1,0,"['priority', 'cpu_min', 'sleep']","[None, None, None]","['300', '50', '10']",808,[]
./utilmy/utilmy.py:os_ram_object,os_ram_object,function,17,58,39,319,5.5,0,4,"['o', 'ids', 'hint', 'set(']","[None, None, None, None]","[None, None, '"" deep_getsizeof(df_pd', None]",822,"['    """""" deep_getsizeof(df_pd, set())\n', '    Find the memory footprint of a Python object\n', '    The sys.getsizeof function does a shallow size of only. It counts each\n', '    object inside a container as pointer only regardless of how big it\n', '    """"""\n']"
./utilmy/utilmy.py:os_copy,os_copy,function,11,21,21,231,11.0,1,1,"['src', 'dst', 'overwrite', 'exclude']","[None, None, None, None]","[None, None, 'False', '""""']",853,[]
./utilmy/utilmy.py:os_removedirs,os_removedirs,function,12,48,32,294,6.12,3,1,['path'],[None],[None],865,"['    """"""  issues with no empty Folder\n', ""    # Delete everything reachable from the directory named in 'top',\n"", '    # assuming there are no symbolic links.\n', ""    # CAUTION:  This is dangerous!  For example, if top == '/', it could delete all your disk files.\n"", '    """"""\n']"
./utilmy/utilmy.py:os_getcwd,os_getcwd,function,3,6,5,66,11.0,0,0,[],[],[],892,[]
./utilmy/utilmy.py:os_system,os_system,function,11,45,38,219,4.87,1,1,"['ll', 'logfile', 'sleep_sec']","[None, None, None]","[None, 'None', '10']",898,"['  """""" get values\n', '       os_system( f""   ztmp "",  doprint=True)\n', '  """"""\n']"
./utilmy/utilmy.py:os_makedirs,os_makedirs,function,2,13,12,198,15.23,0,1,['dir_or_file'],[None],[None],915,[]
./utilmy/utilmy.py:global_verbosity,global_verbosity,function,10,54,35,442,8.19,0,2,"['cur_path', 'path_relative', 'default', 'key', '']","[None, None, None, None, None]","[None, '""/../../config.json""', '5', ""'verbosity'"", None]",924,"['    """""" Get global verbosity\n', '    verbosity = global_verbosity(__file__, ""/../../config.json"", default=5 )\n', '\n', '    verbosity = global_verbosity(""repo_root"", ""config/config.json"", default=5 )\n', '\n', '    :param cur_path:\n', '    :param path_relative:\n', '    :param key:\n', '    :param default:\n', '    :return:\n', '    """"""\n']"
./utilmy/utilmy.py:git_repo_root,git_repo_root,function,7,23,19,142,6.17,0,1,[],[],[],962,[]
./utilmy/utilmy.py:git_current_hash,git_current_hash,function,6,12,10,123,10.25,0,0,['mode'],[None],"[""'full'""]",972,[]
./utilmy/utilmy.py:plot_to_html,plot_to_html,function,21,53,39,426,8.04,1,1,"['dir_input', 'out_file', 'title', 'verbose']","[None, None, None, None]","['""*.png""', '""graph.html""', '""""', 'False']",984,"['    """"""\n', '      plot_to_html( model_path + ""/graph_shop_17_past/*.png"" , model_path + ""shop_17.html"" )\n', '\n', '    """"""\n']"
./utilmy/utilmy.py:save,save,function,5,10,10,140,14.0,0,0,"['dd', 'to_file', 'verbose']","[None, None, None]","[None, '""""', 'False']",1083,[]
./utilmy/utilmy.py:load,load,function,5,7,6,61,8.71,0,0,['to_file'],[None],"['""""']",1090,[]
./utilmy/utilmy.py:print_everywhere,print_everywhere,function,14,35,32,209,5.97,1,0,[],[],[],1100,"['    """"""\n', '    https://github.com/alexmojaki/snoop\n', '    """"""\n']"
./utilmy/utilmy.py:log5,log5,function,5,6,6,33,5.5,0,0,['*s'],[None],[None],1130,"['    """"""    ### Equivalent of print, but more :  https://github.com/gruns/icecream\n', '    pip install icrecream\n', '    ic()  --->  ic| example.py:4 in foo()\n', ""    ic(var)  -->   ic| d['key'][1]: 'one'\n"", '    \n', '    """"""\n']"
./utilmy/utilmy.py:log_trace,log_trace,function,4,4,4,37,9.25,0,0,"['msg', 'dump_path', 'globs']","[None, None, None]","['""""', '""""', 'None']",1141,[]
./utilmy/utilmy.py:profiler_start,profiler_start,function,6,9,9,82,9.11,0,0,[],[],[],1147,[]
./utilmy/utilmy.py:profiler_stop,profiler_stop,function,3,5,5,83,16.6,0,0,[],[],[],1155,[]
./utilmy/utilmy.py:dict_to_namespace,dict_to_namespace,class,3,5,5,36,7.2,0,0,[],[],[],403,[]
./utilmy/utilmy.py:Session,Session,class,42,178,114,1402,7.88,3,2,[],[],[],1014,[]
./utilmy/utilmy.py:dict_to_namespace:__init__,dict_to_namespace:__init__,method,2,2,2,15,7.5,0,0,"['self', 'd']","[None, None]","[None, None]",405,[]
./utilmy/utilmy.py:Session:__init__,Session:__init__,method,5,7,7,113,16.14,0,0,"['self', 'dir_session', '']","[None, None, None]","[None, '""ztmp/session/""', None]",1020,[]
./utilmy/utilmy.py:Session:show,Session:show,method,5,7,7,62,8.86,0,0,['self'],[None],[None],1026,[]
./utilmy/utilmy.py:Session:save,Session:save,method,4,8,8,146,18.25,0,0,"['self', 'name', 'glob', 'tag']","[None, None, None, None]","[None, None, 'None', '""""']",1031,[]
./utilmy/utilmy.py:Session:load,Session:load,method,4,9,9,126,14.0,0,0,"['self', 'name', 'glob', 'tag']","[None, None, 'dict', None]","[None, None, 'None', '""""']",1037,[]
./utilmy/utilmy.py:Session:save_session,Session:save_session,method,19,82,58,516,6.29,1,2,"['self', 'folder', 'globs', 'tag']","[None, None, None, None]","[None, None, None, '""""']",1044,[]
./utilmy/utilmy.py:Session:load_session,Session:load_session,method,11,33,28,208,6.3,2,0,"['self', 'folder', 'globs']","[None, None, None]","[None, None, 'None']",1067,"['      """"""\n', '      """"""\n']"
./utilmy/util_default.py:log,log,function,10,39,25,357,9.15,0,0,['*s'],[None],[None],18,[]
./utilmy/util_default.py:log2,log2,function,1,5,5,39,7.8,0,0,['*s'],[None],[None],22,[]
./utilmy/util_default.py:logw,logw,function,1,5,5,41,8.2,0,0,['*s'],[None],[None],26,[]
./utilmy/util_default.py:loge,loge,function,1,5,5,39,7.8,0,0,['*s'],[None],[None],30,[]
./utilmy/util_default.py:logger_setup,logger_setup,function,2,15,13,138,9.2,0,0,[],[],[],34,[]
./utilmy/util_default.py:config_load,config_load,function,16,74,63,807,10.91,0,1,"['config_path', 'pathlib.Path]] ']","[' Optional[Union[str', None]","[None, ' None']",51,"['    """"""Load Config file into a dict\n', '    1) load config_path\n', '    2) If not, load in HOME USER\n', '    3) If not, create default one\n', ""    # config_default = yaml.load(os.path.join(os.path.dirname(__file__), 'config', 'config.yaml'))\n"", '\n', '    Args:\n', ""        config_path: path of config or 'default' tag value\n"", '    Returns: dict config\n', '    """"""\n']"
./utilmy/util_default.py:dataset_donwload,dataset_donwload,function,9,19,17,246,12.95,0,0,"['url', 'path_target']","[None, None]","[None, None]",99,"['    """"""Donwload on disk the tar.gz file\n', '    Args:\n', '        url:\n', '        path_target:\n', '    Returns:\n', '\n', '    """"""\n']"
./utilmy/util_default.py:os_extract_archive,os_extract_archive,function,19,63,47,671,10.65,1,8,"['file_path', 'path', 'archive_format']","[None, None, None]","[None, '"".""', '""auto""']",117,"['    """"""Extracts an archive if it matches tar, tar.gz, tar.bz, or zip formats.\n', '    Args:\n', '        file_path: path to the archive file\n', '        path: path to extract the archive file\n', '        archive_format: Archive format to try for extracting the file.\n', ""            Options are 'auto', 'tar', 'zip', and None.\n"", ""            'tar' includes tar, tar.gz, and tar.bz files.\n"", ""            The default 'auto' is ['tar', 'zip'].\n"", '            None or an empty list will return no matches found.\n', '    Returns:\n', '        True if a match was found and an archive extraction was completed,\n', '        False otherwise.\n', '    """"""\n']"
./utilmy/util_default.py:to_file,to_file,function,3,7,7,51,7.29,0,0,"['s', 'filep']","[None, None]","[None, None]",164,[]
./utilmy/zutil.py:session_load_function,session_load_function,function,6,9,9,88,9.78,0,0,['name'],[None],"['""test_20160815""']",66,[]
./utilmy/zutil.py:session_save_function,session_save_function,function,6,11,10,111,10.09,0,0,['name'],[None],"['""test""']",75,[]
./utilmy/zutil.py:py_save_obj_dill,py_save_obj_dill,function,16,52,42,502,9.65,0,1,"['obj1', 'keyname', 'otherfolder']","[None, None, None]","[None, '""""', '0']",83,[]
./utilmy/zutil.py:aa_unicode_ascii_utf8_issue,aa_unicode_ascii_utf8_issue,function,0,0,0,0,0.0,0,0,[],[],[],111,"['    """"""Take All csv in a folder and provide Table, Column Schema, type\n', '\n', ' METHOD FOR Unicode / ASCII issue\n', '1. Decode early\n', ""Decode to <type 'unicode'> ASAP\n"", ""df['PREF_NAME']=       df['PREF_NAME'].apply(to_unicode)\n"", '\n', '2. Unicode everywhere\n', '\n', '\n', '3. Encode late\n', ""# >>> f = open('/tmp/ivan_out.txt','w')\n"", ""# >>> f.write(ivan_uni.encode('utf-8'))\n"", '\n', 'Important methods\n', ""s.decode(encoding)  <type 'str'> to <type 'unicode'>\n"", ""u.encode(encoding)  <type 'unicode'> to <type 'str'>\n"", '\n', 'http://farmdev.com/talks/unicode/\n', '\n', '   """"""\n']"
./utilmy/zutil.py:isfloat,isfloat,function,4,13,11,79,6.08,0,1,['x'],[None],[None],135,[]
./utilmy/zutil.py:isint,isint,function,2,6,6,50,8.33,0,0,['x'],[None],[None],145,[]
./utilmy/zutil.py:isanaconda,isanaconda,function,4,10,9,65,6.5,0,1,[],[],[],149,[]
./utilmy/zutil.py:a_run_ipython,a_run_ipython,function,1,1,1,33,33.0,0,0,['cmd1'],[None],[None],157,"['    """""" Execute Ipython Command in python code\n', '     run -i :  run including current interprete variable\n', ' """"""\n']"
./utilmy/zutil.py:py_autoreload,py_autoreload,function,1,4,4,64,16.0,0,0,[],[],[],164,[]
./utilmy/zutil.py:os_platform,os_platform,function,1,2,2,8,4.0,0,0,[],[],[],169,[]
./utilmy/zutil.py:a_start_log,a_start_log,function,3,15,14,103,6.87,0,0,"['id1', 'folder']","[None, None]","['""""', '""aaserialize/log/""']",173,[]
./utilmy/zutil.py:a_cleanmemory,a_cleanmemory,function,3,3,3,21,7.0,0,0,[],[],[],187,[]
./utilmy/zutil.py:a_info_conda_jupyter,a_info_conda_jupyter,function,1,2,2,5,2.5,0,0,[],[],[],193,[]
./utilmy/zutil.py:print_object_tofile,print_object_tofile,function,15,45,35,236,5.24,2,2,"['vv', 'txt', 'file1=""d']","[None, None, '']","[None, None, '""d:/regression_output.py""']",355,"['    """""" #Print to file Object   Table   """"""\n']"
./utilmy/zutil.py:print_progressbar,print_progressbar,function,9,32,29,316,9.88,0,1,"['iteration', 'total', 'prefix', 'suffix', 'decimals', 'bar_length']","[None, None, None, None, None, None]","[None, None, '""""', '""""', '1', '100']",372,"['    """"""# Print iterations progress\n', '     Call in a loop to create terminal progress bar\n', '    @params:\n', '        iteration   - Required  : current iteration (Int)\n', '        total       - Required  : total iterations (Int)\n', '        prefix      - Optional  : prefix string (Str)\n', '        suffix      - Optional  : suffix string (Str)\n', '        decimals    - Optional  : positive number of decimals in percent complete (Int)\n', '        bar_length   - Optional  : character length of bar (Int)\n', '    """"""\n']"
./utilmy/zutil.py:os_zip_checkintegrity,os_zip_checkintegrity,function,7,27,24,173,6.41,0,1,['filezip1'],[None],[None],401,[]
./utilmy/zutil.py:os_zipfile,os_zipfile,function,19,37,32,376,10.16,2,2,"['folderin', 'folderzipname', 'iscompress']","[None, None, None]","[None, None, 'True']",414,[]
./utilmy/zutil.py:os_zipfolder,os_zipfolder,function,2,8,5,116,14.5,0,0,"['dir_tozip', 'zipname', 'dir_prefix', 'iscompress=Trueimport shutil_ = iscompressdir_tozip = dir_tozip if dir_tozip[-1] != ""/"" else dir_tozip[']","[None, None, None, '']","['""/zdisks3/output""', '""/zdisk3/output.zip""', 'True', 'Trueimport shutil_ = iscompressdir_tozip = dir_tozip if dir_tozip[-1] != ""/"" else dir_tozip[:-1]if dir_prefix:']",432,"['    """"""\n', "" shutil.make_archive('/zdisks3/results/output', 'zip',\n"", ""                     root_dir=/zdisks3/results/',\n"", ""                     base_dir='output')\n"", ' os_zipfolder(\'zdisk/test/aapackage\', \'zdisk/test/aapackage.zip\', \'zdisk/test\')""""""\n']"
./utilmy/zutil.py:os_zipextractall,os_zipextractall,function,23,61,51,536,8.79,1,3,"['filezip_or_dir', 'tofolderextract', 'isprint']","[None, None, None]","['""folder1/*.zip""', '""zdisk/test""', '1']",484,"['    """"""os_zipextractall( \'aapackage.zip\',\'zdisk/test/\'      )  """"""\n']"
./utilmy/zutil.py:os_folder_copy,os_folder_copy,function,15,39,36,391,10.03,0,2,"['src', 'dst', 'symlinks', 'pattern1', 'fun_file_toignore']","[None, None, None, None, None]","[None, None, 'False', '""*.py""', 'None']",518,"['    """"""\n', '       callable(src, names) -> ignored_names\n', ""       'src' parameter, which is the directory being visited by copytree(), and\n"", ""       'names' which is the list of `src` contents, as returned by os.listdir():\n"", '\n', '    Since copytree() is called recursively, the callable will be called once for each\n', '    directory that is copied.\n', '    It returns a  list of names relative to the `src` directory that should not be copied.\n', '   """"""\n']"
./utilmy/zutil.py:os_folder_create,os_folder_create,function,5,7,7,86,12.29,0,1,['directory'],[None],[None],548,[]
./utilmy/zutil.py:os_folder_robocopy,os_folder_robocopy,function,3,15,15,163,10.87,0,1,"['from_folder', 'to_folder', 'my_log=""H']","[None, None, '']","['""""', '""""', '""H:/robocopy_log.txt""']",555,"['    """"""\n', '    Copy files to working directory\n', '    robocopy <Source> <Destination> [<File>[ ...]] [<Options>]\n', '    We want to copy the files to a fast SSD drive\n', '    """"""\n']"
./utilmy/zutil.py:os_file_replace,os_file_replace,function,27,73,56,824,11.29,3,0,"['source_file_path', 'pattern', 'substring']","[None, None, None]","[None, None, None]",568,[]
./utilmy/zutil.py:os_file_replacestring1,os_file_replacestring1,function,9,18,17,201,11.17,1,0,"['find_str', 'rep_str', 'file_path']","[None, None, None]","[None, None, None]",582,"['    """"""replaces all find_str by rep_str in file file_path""""""\n']"
./utilmy/zutil.py:os_file_replacestring2,os_file_replacestring2,function,5,13,12,162,12.46,1,0,"['findstr', 'replacestr', 'some_dir', 'pattern', 'dirlevel']","[None, None, None, None, None]","[None, None, None, '""*.*""', '1']",594,"['    """""" #fil_replacestring_files(""logo.png"", ""logonew.png"", r""D:/__Alpaca__details/aiportfolio"",\n', '    pattern=""*.html"", dirlevel=5  )\n', '  """"""\n']"
./utilmy/zutil.py:os_file_getname,os_file_getname,function,8,9,8,75,8.33,0,0,['path'],[None],[None],604,[]
./utilmy/zutil.py:os_file_getpath,os_file_getpath,function,7,7,7,52,7.43,0,0,['path'],[None],[None],611,[]
./utilmy/zutil.py:os_file_gettext,os_file_gettext,function,4,8,8,55,6.88,0,0,['file1'],[None],[None],618,[]
./utilmy/zutil.py:os_file_listall,os_file_listall,function,23,40,34,476,11.9,2,1,"['dir1', 'pattern', 'dirlevel', 'onlyfolder']","[None, None, None, None]","[None, '""*.*""', '1', '0']",625,[]
./utilmy/zutil.py:_os_file_search_fast,_os_file_search_fast,function,27,120,70,884,7.37,4,4,"['fname', 'texts', 'mode']","[None, None, None]","[None, 'None', '""regex/str""']",695,[]
./utilmy/zutil.py:os_file_search_content,os_file_search_content,function,10,33,29,296,8.97,1,1,"['srch_pattern', 'mode', 'dir1', 'file_pattern', 'dirlevel']","[None, None, None, None, None]","['None', '""str""', '""""', '""*.*""', '1']",740,[]
./utilmy/zutil.py:os_file_rename,os_file_rename,function,33,53,45,644,12.15,2,1,"['some_dir', 'pattern', 'pattern2', 'dirlevel']","[None, None, None, None]","[None, '""*.*""', '""""', '1']",758,[]
./utilmy/zutil.py:os_gui_popup_show,os_gui_popup_show,function,25,37,36,408,11.03,0,0,['txt'],[None],[None],788,[]
./utilmy/zutil.py:os_print_tofile,os_print_tofile,function,1,1,1,24,24.0,0,0,"['vv', 'file1', 'mode1=""a"")', 'mode1) as text_file']","[None, None, '', '']","[None, None, '""a""):  # print into a file=\'afile1', None]",808,"['    """"""\n', '    Here is a list of the different modes of opening a file:\n', 'r\n', 'Opens a file for reading only. The file pointer is placed at the beginning of the file.\n', 'This is the default mode.\n', '\n', 'rb\n', '\n', 'Opens a file for reading only in binary format. The file pointer is placed at the\n', 'beginning of the file. This is the default mode.\n', 'r+\n', '\n', 'Opens a file for both reading and writing. The file pointer will be at the beginning of the file.\n', 'rb+\n', '\n', 'Opens a file for both reading and writing in binary format. The file pointer will be at the\n', 'beginning of the file.\n', 'w\n', '\n', 'Opens a file for writing only. Overwrites the file if the file exists. If the file does not exist,\n', 'creates a new file for writing.\n', 'wb\n', '\n', 'Opens a file for writing only in binary format. Overwrites the file if the file exists.\n', 'If the file does not exist, creates a new file for writing.\n', 'w+\n', '\n', 'Opens a file for both writing and reading. Overwrites the existing file if the file exists.\n', 'If the file does not exist, creates a new file for reading and writing.\n', 'wb+\n', '\n', 'Opens a file for both writing and reading in binary format. Overwrites the existing file if\n', 'the file exists. If the file does not exist, creates a new file for reading and writing.\n', 'a\n', '\n', 'Opens a file for appending. The file pointer is at the end of the file if the file exists. That is,\n', 'the file is in the append mode. If the file does not exist, it creates a new file for writing.\n', 'ab\n', '\n', 'Opens a file for appending in binary format. The file pointer is at the end of the file if the file\n', 'exists. That is, the file is in the append mode. If the file does not exist, it creates a new file\n', 'for writing.\n', 'a+\n', '\n', 'Opens a file for both appending and reading. The file pointer is at the end of the file if the\n', 'file exists. The file opens in the append mode. If the file does not exist, it creates a new file\n', 'for reading and writing.\n', 'ab+\n', '\n', 'Opens a file for both appending and reading in binary format. The file pointer is at the end of\n', 'the file if the file exists. The file opens in the append mode. If the file does not exist,\n', 'it creates a new file for reading and writing.\n', 'To open a text file, use:\n', 'fh = open(""hello.txt"", ""r"")\n', '\n', 'To read a text file, use:\n', 'print fh.read()\n', '\n', 'To read one line at a time, use:\n', 'print fh.readline()\n', '\n', 'To read a list of lines use:\n', 'print fh.readlines()\n', '\n', 'To write to a file, use:\n', 'fh = open(""hello.txt"", ""w"")\n', 'lines_of_text = [""a line of text"", ""another line of text"", ""a third line""]\n', 'fh.writelines(lines_of_text)\n', 'fh.close()\n', '\n', 'To append to file, use:\n', 'fh = open(""Hello.txt"", ""a"")\n', 'fh.close()\n', '\n', '    """"""\n']"
./utilmy/zutil.py:os_path_norm,os_path_norm,function,8,20,18,175,8.75,0,1,['pth)'],"['  # Normalize path for Python directoryr"""""" #r""D:\\_devs\\Python01\\project\\03-Connect_Java_CPP_Excel\\PyBindGen\\examples"" """""") ']",['= 2:'],888,[]
./utilmy/zutil.py:os_path_change,os_path_change,function,3,8,8,68,8.5,0,0,['path1'],[None],[None],902,[]
./utilmy/zutil.py:os_path_current,os_path_current,function,2,2,2,17,8.5,0,0,[],[],[],907,[]
./utilmy/zutil.py:os_file_exist,os_file_exist,function,2,2,2,27,13.5,0,0,['file1'],[None],[None],911,[]
./utilmy/zutil.py:os_file_size,os_file_size,function,2,2,2,28,14.0,0,0,['file1'],[None],[None],915,[]
./utilmy/zutil.py:os_file_read,os_file_read,function,4,5,5,34,6.8,0,0,['file1'],[None],[None],919,[]
./utilmy/zutil.py:os_file_isame,os_file_isame,function,4,5,5,44,8.8,0,0,"['file1', 'file2']","[None, None]","[None, None]",924,[]
./utilmy/zutil.py:os_file_get_extension,os_file_get_extension,function,5,12,10,98,8.17,0,2,['file_path'],[None],[None],930,"['    """"""\n', '    # >>> get_file_extension(""/a/b/c"")\n', ""    ''\n"", '    # >>> get_file_extension(""/a/b/c.tar.xz"")\n', ""    'xz'\n"", '    """"""\n']"
./utilmy/zutil.py:os_file_normpath,os_file_normpath,function,2,8,8,67,8.38,0,0,['path'],[None],[None],944,"['    """"""Normalize path.\n', '    - eliminating double slashes, etc. (os.path.normpath)\n', '    - ensure paths contain ~[user]/ expanded.\n', '\n', '    :param path: Path string :: str\n', '    """"""\n']"
./utilmy/zutil.py:os_folder_is_path,os_folder_is_path,function,2,3,3,36,12.0,0,0,['path_or_stream'],[None],[None],954,"['    """"""\n', '    Is given object `path_or_stream` a file path?\n', '    :param path_or_stream: file path or stream, file/file-like object\n', '    :return: True if `path_or_stream` is a file path\n', '    """"""\n']"
./utilmy/zutil.py:os_file_get_path_from_stream,os_file_get_path_from_stream,function,7,20,15,187,9.35,0,2,['maybe_stream'],[None],[None],963,"['    """"""\n', '    Try to get file path from given stream `stream`.\n', '\n', '    :param maybe_stream: A file or file-like object\n', '    :return: Path of given file or file-like object or None\n', '\n', '    # >>> __file__ == get_path_from_stream(__file__)\n', '    True\n', ""    # >>> __file__ == get_path_from_stream(open(__file__, 'r'))\n"", '    True\n', '    # >>> strm = anyconfig.compat.StringIO()\n', '    # >>> get_path_from_stream(strm) is None\n', '    True\n', '    """"""\n']"
./utilmy/zutil.py:os_file_try_to_get_extension,os_file_try_to_get_extension,function,4,12,10,112,9.33,0,1,['path_or_strm'],[None],[None],988,"['    """"""\n', '    Try to get file extension from given path or file object.\n', '    :return: File extension or None\n', '    """"""\n']"
./utilmy/zutil.py:os_file_are_same_file_types,os_file_are_same_file_types,function,5,20,14,154,7.7,0,2,['paths'],[None],[None],1000,"['    """"""\n', '    Are given (maybe) file paths same type (extension) ?\n', '    :param paths: A list of file path or file(-like) objects\n', '\n', '    # >>> are_same_file_types([])\n', '    False\n', '    # >>> are_same_file_types([""a.conf""])\n', '    True\n', '    # >>> are_same_file_types([""a.yml"", ""b.json""])\n', '    False\n', '    # >>> strm = anyconfig.compat.StringIO()\n', '    # >>> are_same_file_types([""a.yml"", ""b.yml"", strm])\n', '    False\n', '    """"""\n']"
./utilmy/zutil.py:os_file_norm_paths,os_file_norm_paths,function,18,54,35,387,7.17,2,3,"['paths', 'marker']","[None, None]","[None, '""*""']",1024,"['    """"""\n', '    :param paths:\n', '        A glob path pattern string, or a list consists of path strings or glob\n', '        path pattern strings or file objects\n', ""    :param marker: Glob marker character or string, e.g. '*'\n"", '    :return: List of path strings\n', '    # >>> norm_paths([])\n', '    []\n', '    # >>> norm_paths(""/usr/lib/a/b.conf /etc/a/b.conf /run/a/b.conf"".split())\n', ""    ['/usr/lib/a/b.conf', '/etc/a/b.conf', '/run/a/b.conf']\n"", '    # >>> paths_s = os.path.join(os.path.dirname(__file__), ""u*.py"")\n', '    # >>> ref = sglob(paths_s)\n', '    # >>> ref = [""/etc/a.conf""] + ref\n', '    # >>> assert norm_paths([""/etc/a.conf"", paths_s]) == ref\n', '    # >>> strm = anyconfig.compat.StringIO()\n', '    # >>> assert norm_paths([""/etc/a.conf"", strm]) == [""/etc/a.conf"", strm]\n', '    """"""\n']"
./utilmy/zutil.py:os_file_mergeall,os_file_mergeall,function,10,19,19,173,9.11,1,0,"['nfile', 'dir1', 'pattern1', 'deepness']","[None, None, None, None]","[None, None, None, '2']",1068,[]
./utilmy/zutil.py:os_file_extracttext,os_file_extracttext,function,16,32,30,285,8.91,1,0,"['output_file', 'dir1', 'pattern1', 'htmltag', 'deepness']","[None, None, None, None, None]","[None, None, '""*.html""', '""p""', '2']",1077,"['    """""" Extract text from html """"""\n']"
./utilmy/zutil.py:os_path_append,os_path_append,function,4,19,11,124,6.53,0,3,"['p1', 'p2', 'p3', 'p4']","[None, None, None, None]","[None, 'None', 'None', 'None']",1093,[]
./utilmy/zutil.py:os_wait_cpu,os_wait_cpu,function,5,21,16,257,12.24,1,0,"['priority', 'cpu_min']","[None, None]","['300', '50']",1104,[]
./utilmy/zutil.py:os_split_dir_file,os_split_dir_file,function,7,15,13,114,7.6,0,1,['dirfile'],[None],[None],1116,[]
./utilmy/zutil.py:os_process_run,os_process_run,function,11,31,30,281,9.06,0,1,"['cmd_list', 'capture_output']","[None, None]","[None, 'False']",1126,"['    """"""os_process_run\n', '    \n', '    Args:\n', '         cmd_list: list [""program"", ""arg1"", ""arg2""]\n', '         capture_output: bool\n', '    """"""\n']"
./utilmy/zutil.py:os_process_2,os_process_2,function,0,1,1,4,4.0,0,0,[],[],[],1149,[]
./utilmy/zutil.py:py_importfromfile,py_importfromfile,function,12,24,20,269,11.21,0,1,"['modulename', 'dir1']","[None, None]","[None, None]",1183,[]
./utilmy/zutil.py:py_memorysize,py_memorysize,function,17,58,39,319,5.5,0,4,"['o', 'ids', 'hint', 'set(']","[None, None, None, None]","[None, None, '"" deep_getsizeof(df_pd', None]",1199,"['    """""" deep_getsizeof(df_pd, set())\n', '    Find the memory footprint of a Python object\n', '    The sys.getsizeof function does a shallow size of only. It counts each\n', '    object inside a container as pointer only regardless of how big it\n', '    """"""\n']"
./utilmy/zutil.py:save,save,function,2,4,4,64,16.0,0,0,"['obj', 'folder', 'isabsolutpath']","[None, None, None]","[None, '""/folder1/keyname""', '0']",1229,[]
./utilmy/zutil.py:load,load,function,2,3,3,60,20.0,0,0,"['folder', 'isabsolutpath']","[None, None]","['""/folder1/keyname""', '0']",1233,[]
./utilmy/zutil.py:save_test,save_test,function,5,10,10,126,12.6,0,0,"['folder', 'isabsolutpath']","[None, None]","['""/folder1/keyname""', '0']",1237,[]
./utilmy/zutil.py:py_save_obj,py_save_obj,function,16,52,42,502,9.65,0,1,"['obj1', 'keyname', 'otherfolder']","[None, None, None]","[None, '""""', '0']",1244,[]
./utilmy/zutil.py:py_load_obj,py_load_obj,function,18,33,30,277,8.39,0,1,"['folder', 'isabsolutpath', 'encoding1']","[None, None, None]","['""/folder1/keyname""', '0', '""utf-8""']",1257,"['    """"""def load_obj(name, encoding1=\'utf-8\' ):\n', ""         with open('D:/_devs/Python01/aaserialize/' + name + '.pkl', 'rb') as f:\n"", '            return pickle.load(f, encoding=encoding1)\n', '    """"""\n']"
./utilmy/zutil.py:z_key_splitinto_dir_name,z_key_splitinto_dir_name,function,7,15,13,114,7.6,0,1,['keyname'],[None],[None],1277,[]
./utilmy/zutil.py:os_config_setfile,os_config_setfile,function,9,32,23,223,6.97,1,1,"['dict_params', 'outfile', 'mode1']","[None, None, None]","[None, None, '""w+""']",1287,[]
./utilmy/zutil.py:os_config_getfile,os_config_getfile,function,6,14,14,73,5.21,1,0,['file1'],[None],[None],1299,[]
./utilmy/zutil.py:os_csv_process,os_csv_process,function,2,2,2,7,3.5,0,0,['file1'],[None],[None],1307,[]
./utilmy/zutil.py:pd_toexcel,pd_toexcel,function,24,91,60,862,9.47,0,8,"['df', 'outfile', 'sheet_name', 'append', 'returnfile']","[None, None, None, None, None]","[None, '""file.xlsx""', '""sheet1""', '1', '1']",1427,"['    """"""\n', '# Create a Pandas Excel writer using XlsxWriter as the engine.\n', ""writer = pd.ExcelWriter('test.xlsx', engine='xlsxwriter')\n"", ""df.to_excel(writer, sheet_name='Sheet1')\n"", 'writer.save()\n', '\n', '# Get the xlsxwriter objects from the dataframe writer object.\n', 'workbook  = writer.book\n', ""worksheet = writer.sheets['Sheet1']\n"", '\n', '# Add some cell formats.\n', ""format1 = workbook.add_format({'num_format': '#,##0.00'})\n"", ""format2 = workbook.add_format({'num_format': '0%'})\n"", ""format3 = workbook.add_format({'num_format': 'h:mm:ss AM/PM'})\n"", '\n', '# Set the column width and format.\n', ""worksheet.set_column('B:B', 18, format1)\n"", '\n', '# Set the format but not the column width.\n', ""worksheet.set_column('C:C', None, format2)\n"", '\n', ""worksheet.set_column('D:D', 16, format3)\n"", '\n', '# Close the Pandas Excel writer and output the Excel file.\n', 'writer.save()\n', '\n', 'from openpyxl import load_workbook\n', 'wb = load_workbook(outfile)\n', 'ws = wb.active\n', ""ws.title = 'Table 1'\n"", '\n', 'tableshape = np.shape(table)\n', 'alph = list(string.ascii_uppercase)\n', '\n', 'for i in range(tableshape[0]):\n', '    for j in range(tableshape[1]):\n', '        ws[alph[i]+str(j+1)] = table[i, j]\n', '\n', ""for cell in ws['A'] + ws[1]:\n"", ""    cell.style = 'Pandas'\n"", '\n', ""wb.save('Scores.xlsx')\n"", '\n', '   """"""\n']"
./utilmy/zutil.py:pd_toexcel_many,pd_toexcel_many,function,1,3,3,40,13.33,0,0,"['outfile', 'df1', 'df2', 'df3', 'df4', 'df5', 'df6', 'outfile', 'sheet_name=""df1"")if df2 is not None']","[None, None, None, None, None, None, None, None, '']","['""file1.xlsx""', 'None', 'None', 'None', 'None', 'None', 'Nonedf1', None, '""df1"")if df2 is not None:']",1492,[]
./utilmy/zutil.py:find_fuzzy,find_fuzzy,function,4,10,10,49,4.9,1,1,"['xstring', 'list_string']","[None, None]","[None, None]",1509,"['    """""" if xstring matches partially, add to the list   """"""\n']"
./utilmy/zutil.py:str_match_fuzzy,str_match_fuzzy,function,4,12,11,65,5.42,1,1,"['xstring', 'list_string']","[None, None]","[None, None]",1514,"['    """""" if any of list_strinf elt matches partially xstring """"""\n']"
./utilmy/zutil.py:str_parse_stringcalendar,str_parse_stringcalendar,function,14,40,30,282,7.05,3,1,['cal'],[None],[None],1522,"['    """"""----------Parse Calendar  --------""""""\n']"
./utilmy/zutil.py:str_make_unicode,str_make_unicode,function,6,13,10,123,9.46,0,1,"['input_str', 'errors']","[None, None]","[None, '""replace""']",1539,[]
./utilmy/zutil.py:str_empty_string_array,str_empty_string_array,function,8,33,23,182,5.52,2,1,"['x', 'y']","[None, None]","[None, '1']",1548,[]
./utilmy/zutil.py:str_empty_string_array_numpy,str_empty_string_array_numpy,function,4,9,8,56,6.22,0,0,"['nx', 'ny']","[None, None]","[None, '1']",1555,[]
./utilmy/zutil.py:str_isfloat,str_isfloat,function,2,8,7,58,7.25,0,0,['value'],[None],[None],1561,[]
./utilmy/zutil.py:str_is_azchar,str_is_azchar,function,2,8,7,54,6.75,0,0,['x'],[None],[None],1569,[]
./utilmy/zutil.py:str_is_az09char,str_is_az09char,function,2,8,7,54,6.75,0,0,['x'],[None],[None],1577,[]
./utilmy/zutil.py:str_reindent,str_reindent,function,3,8,7,65,8.12,0,0,"['s', 'num_spaces)', 'string', 'maxsplit=0)', 'delimiters))regex_pattern', 'string', 'maxsplit)sep2', 'll', 'maxsplit=0)', 're.S)lambda m', 'll)return llx)']","[None, '  # change indentation of multine string""\\n"")num_spaces * "" "") + line.lstrip() for line in s]s)return sdelimiters', None, '', None, None, None, None, '', ' m.group(1) if m.group(1) else ""P""', '']","[None, None, None, '0):  # Split into Sub-Sentenceimport remap(re.escape', None, None, None, None, '0):  # Find Sentence Patternimport re_ = maxsplitsep2)""("" + regex_pat + r"")|(?:(?!"" + regex_pat + "").)*""', None, None]",1585,"['    """"""\n', '   if args:\n', ""       aux= name1+'.'+obj.__name__ +'('+ str(args) +')  \\n' + str(inspect.getdoc(obj))\n"", ""       aux= aux.replace('\\n', '\\n       ')\n"", '       aux= aux.rstrip()\n', ""       aux= aux + ' \\n'\n"", '       wi( aux)\n', '    """"""\n']"
./utilmy/zutil.py:str_split2,str_split2,function,3,8,7,65,8.12,0,0,"['delimiters', 'string', 'maxsplit=0)', 'delimiters))regex_pattern', 'string', 'maxsplit)sep2', 'll', 'maxsplit=0)', 're.S)lambda m', 'll)return llx)']","[None, None, '', None, None, None, None, '', ' m.group(1) if m.group(1) else ""P""', '']","[None, None, '0):  # Split into Sub-Sentenceimport remap(re.escape', None, None, None, None, '0):  # Find Sentence Patternimport re_ = maxsplitsep2)""("" + regex_pat + r"")|(?:(?!"" + regex_pat + "").)*""', None, None]",1600,[]
./utilmy/zutil.py:str_split_pattern,str_split_pattern,function,3,8,7,65,8.12,0,0,"['sep2', 'll', 'maxsplit=0)', 're.S)lambda m', 'll)return llx)']","[None, None, '', ' m.group(1) if m.group(1) else ""P""', '']","[None, None, '0):  # Find Sentence Patternimport re_ = maxsplitsep2)""("" + regex_pat + r"")|(?:(?!"" + regex_pat + "").)*""', None, None]",1607,[]
./utilmy/zutil.py:pd_str_isascii,pd_str_isascii,function,3,8,7,65,8.12,0,0,['x'],[None],[None],1619,[]
./utilmy/zutil.py:str_to_utf8,str_to_utf8,function,2,2,2,23,11.5,0,0,['x'],[None],[None],1627,"['    """""" Do it before saving/output to external printer """"""\n']"
./utilmy/zutil.py:str_to_unicode,str_to_unicode,function,4,13,9,80,6.15,0,2,"['x', 'encoding']","[None, None]","[None, '""utf-8""']",1632,"['    """""" Do it First after Loading some text """"""\n']"
./utilmy/zutil.py:np_minimize,np_minimize,function,28,116,91,902,7.78,2,5,"['fun_obj', 'x0', 'argext', '0']","[None, None, None, None]","[None, 'None', '(0', None]",1642,[]
./utilmy/zutil.py:np_minimize_de,np_minimize_de,function,17,56,47,452,8.07,1,3,"['fun_obj', 'bounds', 'name1', 'maxiter', 'popsize', 'solver']","[None, None, None, None, None, None]","[None, None, None, '10', '5', 'None']",1662,[]
./utilmy/zutil.py:np_remove_na_inf_2d,np_remove_na_inf_2d,function,12,26,23,117,4.5,2,1,['x'],[None],[None],1686,[]
./utilmy/zutil.py:np_addcolumn,np_addcolumn,function,7,10,9,85,8.5,0,0,"['arr', 'nbcol']","[None, None]","[None, None]",1695,[]
./utilmy/zutil.py:np_addrow,np_addrow,function,8,18,17,138,7.67,0,1,"['arr', 'nbrow']","[None, None]","[None, None]",1702,[]
./utilmy/zutil.py:np_int_tostr,np_int_tostr,function,3,17,12,72,4.24,0,1,['i'],[None],[None],1712,[]
./utilmy/zutil.py:np_dictordered_create,np_dictordered_create,function,5,6,6,52,8.67,0,0,[],[],[],1721,[]
./utilmy/zutil.py:np_list_unique,np_list_unique,function,1,2,2,20,10.0,0,0,['seq'],[None],[None],1727,[]
./utilmy/zutil.py:np_list_tofreqdict,np_list_tofreqdict,function,10,41,25,214,5.22,2,2,"['l1', 'wweight']","[None, None]","[None, 'None']",1731,[]
./utilmy/zutil.py:np_list_flatten,np_list_flatten,function,11,25,19,132,5.28,2,1,['seq'],[None],[None],1754,[]
./utilmy/zutil.py:np_dict_tolist,np_dict_tolist,function,6,18,14,100,5.56,2,1,"['dd', 'withkey']","[None, None]","[None, '0']",1766,[]
./utilmy/zutil.py:np_dict_tostr_val,np_dict_tostr_val,function,1,7,7,52,7.43,0,0,['dd'],[None],[None],1773,[]
./utilmy/zutil.py:np_dict_tostr_key,np_dict_tostr_key,function,1,7,7,52,7.43,0,0,['dd'],[None],[None],1777,[]
./utilmy/zutil.py:np_removelist,np_removelist,function,7,20,16,100,5.0,1,2,"['x0', 'xremove']","[None, None]","[None, 'None']",1781,[]
./utilmy/zutil.py:np_transform2d_int_1d,np_transform2d_int_1d,function,18,47,39,238,5.06,2,0,"['m2d', 'onlyhalf']","[None, None]","[None, 'False']",1792,[]
./utilmy/zutil.py:np_mergelist,np_mergelist,function,5,9,9,55,6.11,1,0,"['x0', 'x1']","[None, None]","[None, None]",1809,[]
./utilmy/zutil.py:np_enumerate2,np_enumerate2,function,8,16,14,84,5.25,1,0,['vec_1d'],[None],[None],1816,[]
./utilmy/zutil.py:np_pivottable_count,np_pivottable_count,function,10,24,21,170,7.08,1,0,['mylist'],[None],[None],1825,[]
./utilmy/zutil.py:np_nan_helper,np_nan_helper,function,2,5,5,40,8.0,0,0,['y'],[None],[None],1834,"['    """""" Input:  - y, 1d numpy array with possible NaNs\n', '        Output - nans, logical indices of NaNs - index, a function, with signature\n', '              indices= index(logical_indices),\n', ""              to convert logical indices of NaNs to 'equivalent' indices\n"", '    """"""\n']"
./utilmy/zutil.py:np_interpolate_nan,np_interpolate_nan,function,7,9,9,76,8.44,0,0,['y'],[None],[None],1843,[]
./utilmy/zutil.py:np_and1,np_and1,function,8,69,25,362,5.25,0,6,"['x', 'y', 'x3', 'x4', 'x5', 'x6', 'x7', 'x8']","[None, None, None, None, None, None, None, None]","[None, None, 'None', 'None', 'None', 'None', 'None', 'None']",1849,[]
./utilmy/zutil.py:np_sortcol,np_sortcol,function,6,7,7,77,11.0,0,0,"['arr', 'colid', 'asc']","[None, None, None]","[None, None, '1']",1864,"['    """""" df.sort([\'A\', \'B\'], ascending=[1, 0])  """"""\n']"
./utilmy/zutil.py:np_ma,np_ma,function,2,6,6,45,7.5,0,0,"['vv', 'n']","[None, None]","[None, None]",1871,"['    """"""Moving average """"""\n']"
./utilmy/zutil.py:np_cleanmatrix,np_cleanmatrix,function,12,25,21,125,5.0,2,1,['m'],[None],[None],1877,[]
./utilmy/zutil.py:np_torecarray,np_torecarray,function,2,6,6,105,17.5,0,0,"['arr', 'colname']","[None, None]","[None, None]",1887,[]
./utilmy/zutil.py:np_sortbycolumn,np_sortbycolumn,function,6,7,7,77,11.0,0,0,"['arr', 'colid', 'asc']","[None, None, None]","[None, None, 'True']",1893,[]
./utilmy/zutil.py:np_sortbycol,np_sortbycol,function,8,26,19,257,9.88,0,1,"['arr', 'colid', 'asc']","[None, None, None]","[None, None, 'True']",1899,[]
./utilmy/zutil.py:np_min_kpos,np_min_kpos,function,2,5,5,36,7.2,0,0,"['arr', 'kth']","[None, None]","[None, None]",1912,"['    """""" return kth mininimun """"""\n']"
./utilmy/zutil.py:np_max_kpos,np_max_kpos,function,3,10,8,53,5.3,0,0,"['arr', 'kth']","[None, None]","[None, None]",1917,"['    """""" return kth mininimun """"""\n']"
./utilmy/zutil.py:np_findfirst,np_findfirst,function,5,11,10,55,5.0,1,1,"['item', 'vec']","[None, None]","[None, None]",1924,"['    """"""return the index of the first occurence of item in vec""""""\n']"
./utilmy/zutil.py:np_find,np_find,function,5,11,10,55,5.0,1,1,"['item', 'vec']","[None, None]","[None, None]",1933,"['    """"""return the index of the first occurence of item in vec""""""\n']"
./utilmy/zutil.py:find,find,function,4,10,10,49,4.9,1,1,"['xstring', 'list_string']","[None, None]","[None, None]",1941,"['    """"""return the index of the first occurence of item in vec""""""\n']"
./utilmy/zutil.py:findnone,findnone,function,4,12,11,55,4.58,1,1,['vec'],[None],[None],1949,"['    """"""return the index of the first occurence of item in vec""""""\n']"
./utilmy/zutil.py:findx,findx,function,8,24,19,130,5.42,0,2,"['item', 'vec']","[None, None]","[None, None]",1957,"['    """"""return the index of the first occurence of item in vec""""""\n']"
./utilmy/zutil.py:finds,finds,function,9,30,20,158,5.27,2,3,"['itemlist', 'vec']","[None, None]","[None, None]",1970,"['    """"""return the index of the first occurence of item in vec""""""\n']"
./utilmy/zutil.py:findhigher,findhigher,function,5,12,11,51,4.25,1,1,"['x', 'vec']","[None, None]","[None, None]",1987,"['    """"""return the index of the first occurence of item in vec""""""\n']"
./utilmy/zutil.py:findlower,findlower,function,5,12,11,51,4.25,1,1,"['x', 'vec']","[None, None]","[None, None]",1995,"['    """"""return the index of the first occurence of item in vec""""""\n']"
./utilmy/zutil.py:np_find_minpos,np_find_minpos,function,4,7,5,95,13.57,0,0,['values'],[None],[None],2003,[]
./utilmy/zutil.py:np_find_maxpos,np_find_maxpos,function,16,47,35,274,5.83,1,3,['values'],[None],[None],2008,[]
./utilmy/zutil.py:np_find_maxpos_2nd,np_find_maxpos_2nd,function,12,39,29,146,3.74,1,3,['numbers'],[None],[None],2013,[]
./utilmy/zutil.py:np_findlocalmax2,np_findlocalmax2,function,32,141,83,689,4.89,2,5,"['v', 'trig']","[None, None]","[None, None]",2028,[]
./utilmy/zutil.py:np_findlocalmin2,np_findlocalmin2,function,32,145,83,702,4.84,2,6,"['v', 'trig']","[None, None]","[None, None]",2064,[]
./utilmy/zutil.py:np_findlocalmax,np_findlocalmax,function,32,141,83,689,4.89,2,5,"['v', 'trig']","[None, None]","[None, None]",2100,[]
./utilmy/zutil.py:np_findlocalmin,np_findlocalmin,function,32,145,83,702,4.84,2,6,"['v', 'trig']","[None, None]","[None, None]",2116,[]
./utilmy/zutil.py:np_stack,np_stack,function,11,63,21,347,5.51,0,7,"['v1', 'v2', 'v3', 'v4', 'v5']","[None, None, None, None, None]","[None, 'None', 'None', 'None', 'None']",2134,[]
./utilmy/zutil.py:np_uniquerows,np_uniquerows,function,6,9,9,148,16.44,0,0,['a'],[None],[None],2156,[]
./utilmy/zutil.py:np_remove_zeros,np_remove_zeros,function,2,4,4,35,8.75,0,0,"['vv', 'axis1']","[None, None]","[None, '1']",2162,[]
./utilmy/zutil.py:np_sort,np_sort,function,6,7,7,77,11.0,0,0,"['arr', 'colid', 'asc']","[None, None, None]","[None, None, '1']",2166,"['    """"""\n', '    Creates a cross-tab or pivot table from a normalised input table. Use this\n', ""    function to 'denormalize' a table of normalized records.\n"", '\n', '    * The table argument can be a list of dictionaries or a Table object.\n', '    (http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/334621)\n', '    * The left argument is a tuple of headings which are displayed down the\n', '    left side of the new table.\n', '    * The top argument is a tuple of headings which are displayed across the\n', '    top of the new table.\n', '    Tuples are used so that multiple element headings and columns can be used.\n', '\n', '    E.g. To transform the list (listOfDicts):\n', '\n', '    Name,   Year,  Value\n', '    -----------------------\n', ""    'Simon', 2004, 32\n"", ""    'Simon', 2005, 128\n"", ""    'Russel', 2004, 64\n"", ""    'Eric', 2004, 52\n"", ""    'Russel', 2005, 32\n"", '\n', '    into the new list:\n', '\n', ""    'Name',   2004, 2005\n"", '    ------------------------\n', ""    'Simon',  32,     128\n"", ""    'Russel',  64,     32\n"", ""    'Eric',   52,     NA\n"", '\n', '    you would call pivot with the arguments:\n', '\n', ""    newList = pivot(listOfDicts, ('Name',), ('Year',), 'Value')\n"", '\n', '    """"""\n']"
./utilmy/zutil.py:np_memory_array_adress,np_memory_array_adress,function,2,2,2,38,19.0,0,0,['x'],[None],[None],2170,[]
./utilmy/zutil.py:np_pivotable_create,np_pivotable_create,function,28,100,60,701,7.01,4,5,"['table', 'left', 'top', 'value']","[None, None, None, None]","[None, None, None, None]",2175,"['    """"""\n', '    Creates a cross-tab or pivot table from a normalised input table. Use this\n', ""    function to 'denormalize' a table of normalized records.\n"", '\n', '    * The table argument can be a list of dictionaries or a Table object.\n', '    (http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/334621)\n', '    * The left argument is a tuple of headings which are displayed down the\n', '    left side of the new table.\n', '    * The top argument is a tuple of headings which are displayed across the\n', '    top of the new table.\n', '    Tuples are used so that multiple element headings and columns can be used.\n', '\n', '    E.g. To transform the list (listOfDicts):\n', '\n', '    Name,   Year,  Value\n', '    -----------------------\n', ""    'Simon', 2004, 32\n"", ""    'Simon', 2005, 128\n"", ""    'Russel', 2004, 64\n"", ""    'Eric', 2004, 52\n"", ""    'Russel', 2005, 32\n"", '\n', '    into the new list:\n', '\n', ""    'Name',   2004, 2005\n"", '    ------------------------\n', ""    'Simon',  32,     128\n"", ""    'Russel',  64,     32\n"", ""    'Eric',   52,     NA\n"", '\n', '    you would call pivot with the arguments:\n', '\n', ""    newList = pivot(listOfDicts, ('Name',), ('Year',), 'Value')\n"", '\n', '    """"""\n']"
./utilmy/zutil.py:pd_info,pd_info,function,12,24,22,257,10.71,1,2,"['df', 'doreturn']","[None, None]","[None, '1']",2259,[]
./utilmy/zutil.py:pd_info_memsize,pd_info_memsize,function,5,7,7,85,12.14,0,1,"['df', 'memusage']","[None, None]","[None, '0']",2268,[]
./utilmy/zutil.py:pd_row_findlast,pd_row_findlast,function,7,11,11,58,5.27,1,1,"['df', 'colid', 'emptyrowid']","[None, None, None]","[None, '0', 'None']",2275,[]
./utilmy/zutil.py:pd_row_select,pd_row_select,function,13,112,53,862,7.7,1,3,"['df', '**conditions']","[None, None]","[None, None]",2282,"['    """"""Select rows from a df according to conditions\n', '    pdselect(data, a=2, b__lt=3) __gt __ge __lte  __in  __not_in\n', ""    will select all rows where 'a' is 2 and 'b' is less than 3\n"", '    """"""\n']"
./utilmy/zutil.py:pd_csv_randomread,pd_csv_randomread,function,13,47,38,267,5.68,0,1,"['filename', 'nsample', 'filemaxline', 'dtype']","[None, None, None, None]","[None, '10000', '-1', 'None']",2328,[]
./utilmy/zutil.py:pd_array_todataframe,pd_array_todataframe,function,14,37,30,313,8.46,0,2,"['array', 'colname', 'index1', 'dotranspose']","[None, None, None, None]","[None, 'None', 'None', 'False']",2341,[]
./utilmy/zutil.py:pd_dataframe_toarray,pd_dataframe_toarray,function,9,11,10,103,9.36,0,0,['df'],[None],[None],2352,[]
./utilmy/zutil.py:pd_createdf,pd_createdf,function,2,4,4,55,13.75,0,0,"['array1', 'col1', 'idx1']","[None, None, None]","[None, 'None', 'None']",2359,[]
./utilmy/zutil.py:pd_create_colmapdict_nametoint,pd_create_colmapdict_nametoint,function,9,13,12,77,5.92,1,0,['df'],[None],[None],2363,"['    """""" \'close\' ---> 5    """"""\n']"
./utilmy/zutil.py:pd_extract_col_idx_val,pd_extract_col_idx_val,function,4,4,4,49,12.25,0,0,['df'],[None],[None],2373,[]
./utilmy/zutil.py:pd_extract_col_uniquevalue_tocsv,pd_extract_col_uniquevalue_tocsv,function,5,7,6,101,14.43,0,0,"['df', 'colname', 'csvfile']","[None, None, None]","[None, '""""', '""""']",2377,"['    """""" Write one column into a file   """"""\n']"
./utilmy/zutil.py:pd_split_col_idx_val,pd_split_col_idx_val,function,4,4,4,49,12.25,0,0,['df'],[None],[None],2385,[]
./utilmy/zutil.py:pd_splitdf_inlist,pd_splitdf_inlist,function,14,34,25,254,7.47,3,2,"['df', 'colid', 'type1']","[None, None, None]","[None, None, '""dict""']",2389,"['    """""" Split df into dictionnary of dict/list """"""\n']"
./utilmy/zutil.py:pd_find,pd_find,function,35,142,88,1051,7.4,4,8,"['df', 'regex_pattern', 'col_restrict', 'isnumeric', 'doreturnposition']","[None, None, None, None, None]","[None, '""*""', 'None', 'False', 'False']",2405,"['    """""" Find string / numeric values inside df columns, return position where found\n', '     col_restrict : restrict to these columns """"""\n']"
./utilmy/zutil.py:pd_dtypes_totype2,pd_dtypes_totype2,function,6,8,8,59,7.38,1,0,"['df', 'columns']","[None, None]","[None, '(']",2466,[]
./utilmy/zutil.py:pd_dtypes,pd_dtypes,function,21,58,46,358,6.17,2,2,"['df', 'columns']","[None, None]","[None, '(']",2472,[]
./utilmy/zutil.py:pd_df_todict2,pd_df_todict2,function,14,31,26,249,8.03,1,2,"['df', 'colkey', 'excludekey', '']","[None, None, None, None]","[None, '""table""', '(""""', None]",2492,[]
./utilmy/zutil.py:pd_df_todict,pd_df_todict,function,21,49,39,414,8.45,2,2,"['df', 'colkey', 'excludekey', '']","[None, None, None, None]","[None, '""table""', '(""""', None]",2507,[]
./utilmy/zutil.py:pd_col_addfrom_dfmap,pd_col_addfrom_dfmap,function,4,7,6,69,9.86,0,0,"['df', 'dfmap', 'colkey', 'colval', 'df_colused', 'df_colnew', 'exceptval', 'inplace', 'colkey', 'colval=colval)rowi)']","[None, None, None, None, None, None, None, None, None, '']","[None, None, None, None, None, None, '-1', 'Truedfmap', 'colkey', 'colval)rowi):']",2518,"['    """""" Add new columns based on df_map:  In Place Modification of df\n', '    df:     Dataframe of transactions.\n', '    dfmap:  FSMaster Dataframe\n', '      colkey: colum used for dict key.  machine_code\n', '      colval: colum used for dict val.  adress\n', '\n', '    df_colused  :     ""machine_code""\n', ""    exception val:  -1 or ''\n"", '  """"""\n']"
./utilmy/zutil.py:pd_applyfun_col,pd_applyfun_col,function,5,10,9,109,10.9,0,1,"['df', 'newcol', 'ff', 'use_colname']","[None, None, None, None]","[None, None, None, '""all/[colname]""']",2578,"['    """""" use all Columns to compute values """"""\n']"
./utilmy/zutil.py:pd_date_intersection,pd_date_intersection,function,7,17,13,157,9.24,1,0,['qlist'],[None],[None],2599,[]
./utilmy/zutil.py:pd_is_categorical,pd_is_categorical,function,3,13,11,118,9.08,0,1,['z'],[None],[None],2609,[]
./utilmy/zutil.py:pd_str_encoding_change,pd_str_encoding_change,function,6,8,8,76,9.5,1,0,"['df', 'cols', 'fromenc', 'toenc']","[None, None, None, None]","[None, None, '""iso-8859-1""', '""utf-8""']",2618,[]
./utilmy/zutil.py:pd_str_unicode_tostr,pd_str_unicode_tostr,function,4,6,6,72,12.0,0,0,"['df', 'targetype']","[None, None]","[None, 'str']",2625,"['    """"""\n', ' https://www.azavea.com/blog/2014/03/24/solving-unicode-problems-in-python-2-7/\n', ' Nearly every Unicode problem can be solved by the proper application of these tools;\n', ' they will help you build an airlock to keep the inside of your code nice and clean:\n', '\n', 'encode(): Gets you from Unicode -> bytes\n', 'decode(): Gets you from bytes -> Unicode\n', 'codecs.open(encoding=""utf-8""): Read and write files directly to/from Unicode (you can use any\n', 'encoding,\n', ' not just utf-8, but utf-8 is most common).\n', 'u"": Makes your string literals into Unicode objects rather than byte sequences.\n', ""Warning: Don't use encode() on bytes or decode() on Unicode objects\n"", '\n', '# >>> uni_greeting % utf8_name\n', 'Traceback (most recent call last):\n', ' File ""<stdin>"", line 1, in <module>\n', ""UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 3: ordinal not in range(128)\n"", '# Solution:\n', ""# >>> uni_greeting % utf8_name.decode('utf-8')\n"", ""u'Hi, my name is Josxe9.'\n"", '\n', ' """"""\n']"
./utilmy/zutil.py:pd_dtypes_type1_totype2,pd_dtypes_type1_totype2,function,7,11,11,100,9.09,1,1,"['df', 'fromtype', 'targetype']","[None, None, None]","[None, 'str', 'str']",2653,[]
./utilmy/zutil.py:pd_resetindex,pd_resetindex,function,3,5,5,50,10.0,0,0,['df'],[None],[None],2661,[]
./utilmy/zutil.py:pd_insertdatecol,pd_insertdatecol,function,4,7,7,71,10.14,0,0,"['df', 'col', 'format1=""%Y-%m-%d %H']","[None, None, '']","[None, None, '""%Y-%m-%d %H:%M:%S:%f""']",2666,[]
./utilmy/zutil.py:pd_replacevalues,pd_replacevalues,function,11,14,14,104,7.43,1,0,"['df', 'matrix']","[None, None]","[None, None]",2671,"['    """""" Matrix replaces df.values  """"""\n']"
./utilmy/zutil.py:pd_removerow,pd_removerow,function,2,2,2,29,14.5,0,0,"['df', 'row_list_index', '45']","[None, None, None]","[None, '(23', None]",2681,[]
./utilmy/zutil.py:pd_removecol,pd_removecol,function,2,3,3,28,9.33,0,0,"['df1', 'name1']","[None, None]","[None, None]",2685,[]
./utilmy/zutil.py:pd_insertrow,pd_insertrow,function,7,11,10,112,10.18,0,0,"['df', 'rowval', 'index1', 'isreset']","[None, None, None, None]","[None, None, 'None', '1']",2689,[]
./utilmy/zutil.py:pd_h5_cleanbeforesave,pd_h5_cleanbeforesave,function,4,13,11,91,7.0,0,0,['df'],[None],[None],2699,"['    """"""Clean Column type before Saving in HDFS: Unicode, Datetime  """"""\n']"
./utilmy/zutil.py:pd_h5_addtable,pd_h5_addtable,function,6,16,16,148,9.25,0,1,"['df', 'tablename', 'dbfile=""F']","[None, None, '']","[None, None, '""F:\\temp_pandas.h5""']",2716,[]
./utilmy/zutil.py:pd_h5_tableinfo,pd_h5_tableinfo,function,4,4,4,65,16.25,0,0,"['filenameh5', 'table']","[None, None]","[None, None]",2726,[]
./utilmy/zutil.py:pd_h5_dumpinfo,pd_h5_dumpinfo,function,13,28,26,334,11.93,1,0,"['dbfile=r""E']",[''],"['r""E:\\_data\\stock\\intraday_google.h5""']",2731,[]
./utilmy/zutil.py:pd_h5_save,pd_h5_save,function,4,5,5,64,12.8,0,0,"['df', 'filenameh5=""E', 'key']","[None, '', None]","[None, '""E:/_data/_data_outlier.h5""', '""data""']",2753,"['    """""" File is release after saving it""""""\n']"
./utilmy/zutil.py:pd_h5_load,pd_h5_load,function,9,24,20,210,8.75,0,2,"['filenameh5=""E', 'table_id', 'exportype', 'rowstart', 'rowend', ')', '']","['', None, None, None, None, None, None]","['""E:/_data/_data_outlier.h5""', '""data""', '""pandas""', '-1', '-1', None, None]",2760,[]
./utilmy/zutil.py:pd_h5_fromcsv_tohdfs,pd_h5_fromcsv_tohdfs,function,29,80,63,661,8.26,3,2,"['dircsv', 'filepattern', 'tofilehdfs', 'tablename', ')', 'dtype0', 'encoding', 'chunksize', 'mode', 'form', 'complib', '']","[None, None, None, None, None, None, None, None, None, None, None, None]","['""dir1/dir2/""', '""*.csv""', '""file1.h5""', '""df""', None, 'None', '""utf-8""', '2000000', '""a""', '""table""', 'None', None]",2780,[]
./utilmy/zutil.py:pd_np_toh5file,pd_np_toh5file,function,6,8,7,82,10.25,0,0,"['numpyarr', 'fileout', 'table1']","[None, None, None]","[None, '""file.h5""', '""data""']",2837,[]
./utilmy/zutil.py:date_allinfo,date_allinfo,function,0,0,0,0,0.0,0,0,[],[],[],2844,"['    """"""\n', '\n', 'https://aboutsimon.com/blog/2016/08/04/datetime-vs-Arrow-vs-Pendulum-vs-Delorean-vs-udatetime.html\n', '\n', '\n', '   """"""\n']"
./utilmy/zutil.py:datetime_tostring,datetime_tostring,function,9,21,15,245,11.67,1,2,['datelist1'],[None],[None],2853,[]
./utilmy/zutil.py:date_remove_bdays,date_remove_bdays,function,14,36,26,354,9.83,1,3,"['from_date', 'add_days']","[None, None]","[None, None]",2866,[]
./utilmy/zutil.py:date_add_bdays,date_add_bdays,function,14,36,27,353,9.81,1,3,"['from_date', 'add_days']","[None, None]","[None, None]",2884,[]
./utilmy/zutil.py:datenumpy_todatetime,datenumpy_todatetime,function,9,40,24,384,9.6,0,3,"['tt', 'islocaltime']","[None, None]","[None, 'True']",2902,[]
./utilmy/zutil.py:datetime_tonumpydate,datetime_tonumpydate,function,4,4,4,36,9.0,0,0,"['t', 'islocaltime']","[None, None]","[None, 'True']",2919,[]
./utilmy/zutil.py:datestring_todatetime,datestring_todatetime,function,9,16,14,136,8.5,1,1,"['datelist1', 'format1']","[None, None]","[None, '""%Y%m%d""']",2925,[]
./utilmy/zutil.py:datetime_toint,datetime_toint,function,6,14,12,156,11.14,1,1,['datelist1'],[None],[None],2937,[]
./utilmy/zutil.py:date_holiday,date_holiday,function,0,0,0,0,0.0,0,0,[],[],[],2946,"['    """"""\n', '   https://jakevdp.github.io/blog/2015/07/23/learning-seattles-work-habits-from-bicycle-counts/\n', '\n', 'from pandas.tseries.holiday import USFederalHolidayCalendar\n', 'cal = USFederalHolidayCalendar()\n', ""holidays = cal.holidays('2012', '2016', return_name=True)\n"", 'holidays.head()\n', '\n', 'holidays_all = pd.concat([holidays, ""Day Before "" + holidays.shift(-1, \'D\'),  ""Day After ""\n', ""+ holidays.shift(1, 'D')])\n"", 'holidays_all = holidays_all.sort_index()\n', 'holidays_all.head()\n', '\n', 'from pandas.tseries.offsets import CustomBusinessDay\n', 'from pandas.tseries.holiday import USFederalHolidayCalendar\n', 'bday_us = CustomBusinessDay(calendar=USFederalHolidayCalendar())\n', 'dateref[-1] - bday_us- bday_us\n', '\n', '   """"""\n']"
./utilmy/zutil.py:date_add_bday,date_add_bday,function,14,36,27,353,9.81,1,3,"['from_date', 'add_days']","[None, None]","[None, None]",2968,[]
./utilmy/zutil.py:dateint_todatetime,dateint_todatetime,function,7,14,12,136,9.71,1,1,['datelist1'],[None],[None],2983,[]
./utilmy/zutil.py:date_diffinday,date_diffinday,function,4,5,5,74,14.8,0,0,"['intdate1', 'intdate2']","[None, None]","[None, None]",2993,[]
./utilmy/zutil.py:date_diffinbday,date_diffinbday,function,7,11,9,112,10.18,0,0,"['intd2', 'intd1']","[None, None]","[None, None]",2998,[]
./utilmy/zutil.py:date_gencalendar,date_gencalendar,function,11,16,14,242,15.12,0,0,"['start', 'end', 'country']","[None, None, None]","['""2010-01-01""', '""2010-01-15""', '""us""']",3007,[]
./utilmy/zutil.py:date_finddateid,date_finddateid,function,3,75,12,447,5.96,0,10,"['date1', 'dateref']","[None, None]","[None, None]",3017,[]
./utilmy/zutil.py:datestring_toint,datestring_toint,function,6,14,12,108,7.71,1,1,['datelist1'],[None],[None],3042,[]
./utilmy/zutil.py:date_now,date_now,function,14,44,29,401,9.11,0,2,['i'],[None],['0'],3051,[]
./utilmy/zutil.py:date_nowtime,date_nowtime,function,8,22,18,208,9.45,0,1,"['type1', 'format1=""%Y-%m-%d %H']","[None, '']","['""str""', '""%Y-%m-%d %H:%M:%S:%f""']",3062,"['    """""" str / stamp /  """"""\n']"
./utilmy/zutil.py:date_generatedatetime,date_generatedatetime,function,17,32,28,268,8.38,0,1,"['start', 'nbday', 'end']","[None, None, None]","['""20100101""', '10', '""""']",3076,[]
./utilmy/zutil.py:np_numexpr_vec_calc,np_numexpr_vec_calc,function,5,12,12,110,9.17,0,0,[],[],[],3088,[]
./utilmy/zutil_features.py:log,log,function,6,30,20,188,6.27,0,2,"['*s', 'n', 'm', '**kw']","[None, None, None, None]","[None, '0', '1', None]",12,[]
./utilmy/zutil_features.py:log2,log2,function,2,7,7,40,5.71,0,1,"['*s', '**kw']","[None, None]","[None, None]",18,[]
./utilmy/zutil_features.py:log3,log3,function,2,7,7,40,5.71,0,1,"['*s', '**kw']","[None, None]","[None, None]",21,[]
./utilmy/zutil_features.py:os_get_function_name,os_get_function_name,function,4,4,4,47,11.75,0,0,[],[],[],32,[]
./utilmy/zutil_features.py:os_getcwd,os_getcwd,function,3,6,5,66,11.0,0,0,[],[],[],37,[]
./utilmy/zutil_features.py:pa_read_file,pa_read_file,function,38,129,74,709,5.5,2,9,"['path', 'cols', 'n_rows', 'file_start', 'file_end', 'verbose', '']","[None, None, None, None, None, None, None]","[""  'folder_parquet/'"", 'None', '1000', '0', '100000', '1', None]",43,"['    """"""Requied HDFS connection\n', '       http://arrow.apache.org/docs/python/parquet.html\n', '\n', '       conda install libhdfs3 pyarrow\n', '       in your script.py:\n', '        import os\n', ""        os.environ['ARROW_LIBHDFS_DIR'] = '/opt/cloudera/parcels/CDH/lib64/'\n"", '\n', '       https://stackoverflow.com/questions/18123144/missing-server-jvm-java-jre7-bin-server-jvm-dll\n', '\n', '    """"""\n']"
./utilmy/zutil_features.py:pa_write_file,pa_write_file,function,23,62,45,599,9.66,0,4,"['df', 'path', 'cols', 'n_rows', 'partition_cols', 'overwrite', 'verbose', 'filesystem ']","[None, None, None, None, None, None, None, None]","[None, ""  'folder_parquet/'"", 'None', '1000', 'None', 'True', '1', "" 'hdfs'""]",97,"['    """""" Pandas to HDFS\n', ""      pyarrow.parquet.write_table(table, where, row_group_size=None, version='1.0',\n"", ""      use_dictionary=True, compression='snappy', write_statistics=True, use_deprecated_int96_timestamps=None,\n"", '      coerce_timestamps=None, allow_truncated_timestamps=False, data_page_size=None,\n', ""      flavor=None, filesystem=None, compression_level=None, use_byte_stream_split=False, data_page_version='1.0', **kwargs)\n"", '\n', '      https://arrow.apache.org/docs/python/generated/pyarrow.parquet.write_to_dataset.html#pyarrow.parquet.write_to_dataset\n', '\n', '    """"""\n']"
./utilmy/zutil_features.py:test_get_classification_data,test_get_classification_data,function,20,44,40,470,10.68,1,0,['name'],[None],['None'],143,[]
./utilmy/zutil_features.py:params_check,params_check,function,7,56,26,259,4.62,1,5,"['pars', 'check_list', 'name']","[None, None, None]","[None, None, '""""']",160,"['    """"""\n', '      Validate a dict parans\n', '    :param pars:\n', '    :param check_list:\n', '    :param name:\n', '    :return:\n', '    """"""\n']"
./utilmy/zutil_features.py:save_features,save_features,function,7,30,26,275,9.17,0,2,"['df', 'name', 'path']","[None, None, None]","[None, None, 'None']",186,"['    """""" Save dataframe on disk\n', '    :param df:\n', '    :param name:\n', '    :param path:\n', '    :return:\n', '    """"""\n']"
./utilmy/zutil_features.py:load_features,load_features,function,3,10,9,110,11.0,0,0,"['name', 'path']","[None, None]","[None, None]",206,[]
./utilmy/zutil_features.py:save_list,save_list,function,8,21,20,166,7.9,1,0,"['path', 'name_list', 'glob']","[None, None, None]","[None, None, None]",214,[]
./utilmy/zutil_features.py:save,save,function,7,30,26,275,9.17,0,2,"['df', 'name', 'path']","[None, None, None]","[None, None, 'None']",221,"['  """"""\n', '      Read file in parallel from disk : very Fast\n', '  :param path_glob:\n', '  :param ignore_index:\n', '  :param cols:\n', '  :param verbose:\n', '  :param nrows:\n', '  :param concat_sort:\n', '  :param n_pool:\n', '  :param drop_duplicates:\n', '  :param shop_id:\n', '  :param kw:\n', '  :return:\n', '  """"""\n']"
./utilmy/zutil_features.py:load,load,function,3,10,9,110,11.0,0,0,"['name', 'path']","[None, None]","[None, None]",228,"['  """"""\n', '      Read file in parallel from disk : very Fast\n', '  :param path_glob:\n', '  :param ignore_index:\n', '  :param cols:\n', '  :param verbose:\n', '  :param nrows:\n', '  :param concat_sort:\n', '  :param n_pool:\n', '  :param drop_duplicates:\n', '  :param shop_id:\n', '  :param kw:\n', '  :return:\n', '  """"""\n']"
./utilmy/zutil_features.py:pd_read_file,pd_read_file,function,52,161,100,1083,6.73,3,10,"['path_glob', 'ignore_index', 'cols', 'verbose', 'nrows', 'concat_sort', 'n_pool', 'drop_duplicates', 'col_filter', 'col_filter_val', '**kw']","[None, None, None, None, None, None, None, None, None, None, None]","['""*.pkl""', 'True', 'None', 'False', '-1', 'True', '1', 'None', 'None', 'None', None]",233,"['  """"""\n', '      Read file in parallel from disk : very Fast\n', '  :param path_glob:\n', '  :param ignore_index:\n', '  :param cols:\n', '  :param verbose:\n', '  :param nrows:\n', '  :param concat_sort:\n', '  :param n_pool:\n', '  :param drop_duplicates:\n', '  :param shop_id:\n', '  :param kw:\n', '  :return:\n', '  """"""\n']"
./utilmy/zutil_features.py:load_dataset,load_dataset,function,35,207,126,1727,8.34,3,11,"['path_data_x', 'path_data_y', 'colid', 'n_sample']","[None, None, None, None]","[None, ""''"", '""jobId""', '-1']",300,"['    """"""\n', '      return a datraframe\n', '      https://raw.github.com/someguy/brilliant/master/somefile.txt\n', '\n', '    :param path_data_x:\n', '    :param path_data_y:\n', '    :param colid:\n', '    :param n_sample:\n', '    :return:\n', '    """"""\n']"
./utilmy/zutil_features.py:fetch_spark_koalas,fetch_spark_koalas,function,9,11,11,109,9.91,0,0,"['path_data_x', 'path_data_y', 'colid', 'n_sample']","[None, None, None, None]","[None, ""''"", '""jobId""', '-1']",378,[]
./utilmy/zutil_features.py:fetch_dataset,fetch_dataset,function,52,177,125,1978,11.18,1,6,"['url_dataset', 'path_target', 'file_target']","[None, None, None]","[None, 'None', 'None']",386,"['    """"""Fetch dataset from a given URL and save it.\n', '\n', '    Currently `github`, `gdrive` and `dropbox` are the only supported sources of\n', '    data. Also only zip files are supported.\n', '\n', '    :param url_dataset:   URL to send\n', '    :param path_target:   Path to save dataset\n', '    :param file_target:   File to save dataset\n', '\n', '    """"""\n']"
./utilmy/zutil_features.py:load_function_uri,load_function_uri,function,25,66,59,691,10.47,0,0,"['uri_name=""myfolder/myfile.py']",[''],"['""myfolder/myfile.py::myFunction""']",491,"['    """"""\n', '    #load dynamically function from URI pattern\n', '    #""dataset""        : ""mlmodels.preprocess.generic:pandasDataset""\n', '    ###### External File processor :\n', '    #""dataset""        : ""MyFolder/preprocess/myfile.py:pandasDataset""\n', '    """"""\n']"
./utilmy/zutil_features.py:metrics_eval,metrics_eval,function,23,71,52,902,12.7,2,3,"['metric_list', 'ytrue', 'ypred', 'ypred_proba', 'return_dict']","[None, None, None, None, None]","['[""mean_squared_error""]', 'None', 'None', 'None', 'False']",531,"['    """"""\n', '      Generic metrics calculation, using sklearn naming pattern\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_stat_dataset_shift,pd_stat_dataset_shift,function,14,24,23,328,13.67,1,0,"['dftrain', 'dftest', 'colused', 'nsample', 'buckets', 'axis']","[None, None, None, None, None, None]","[None, None, None, '10000', '5', '0']",572,[]
./utilmy/zutil_features.py:pd_stat_datashift_psi,pd_stat_datashift_psi,function,25,122,83,1188,9.74,1,5,"['expected', 'actual', 'buckettype', 'buckets', 'axis']","[None, None, None, None, None]","[None, None, ""'bins'"", '10', '0']",588,"[""    '''Calculate the PSI (population stability index) across all variables\n"", '    Args:\n', '       expected: numpy matrix of original values\n', '       actual: numpy matrix of new values, same size as expected\n', '       buckettype: type of strategy for creating buckets, bins splits into even splits, quantiles splits into quantile buckets\n', '       buckets: number of quantiles to use in bucketing variables\n', '       axis: axis by which variables are defined, 0 for vertical, 1 for horizontal\n', '    Returns:\n', '       psi_values: ndarray of psi values for each variable\n', ""    '''\n""]"
./utilmy/zutil_features.py:feature_importance_perm,feature_importance_perm,function,31,57,54,761,13.35,1,1,"['clf', 'Xtrain', 'ytrain', 'cols', 'n_repeats', 'scoring', 'show_graph']","[None, None, None, None, None, None, None]","[None, None, None, None, '8', ""'neg_root_mean_squared_error'"", '1']",660,[]
./utilmy/zutil_features.py:feature_selection_multicolinear,feature_selection_multicolinear,function,25,44,36,510,11.59,3,0,"['df', 'threshold']","[None, None]","[None, '1.0']",694,[]
./utilmy/zutil_features.py:feature_correlation_cat,feature_correlation_cat,function,24,45,41,582,12.93,0,0,"['df', 'colused']","[None, None]","[None, None]",712,[]
./utilmy/zutil_features.py:pd_feature_generate_cross,pd_feature_generate_cross,function,33,70,59,485,6.93,2,2,"['df', 'cols', 'cols_cross_input', 'pct_threshold', 'm_combination']","[None, None, None, None, None]","[None, None, 'None', '0.2', '2']",735,"['    """"""\n', '       Generate Xi.Xj features and filter based on stats threshold\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_col_to_onehot,pd_col_to_onehot,function,20,94,61,616,6.55,3,6,"['dfref', 'colname', 'colonehot', 'return_val']","[None, None, None, None]","[None, 'None', 'None', '""dataframe,column""']",770,"['    """"""\n', '    :param df:\n', '    :param colname:\n', '    :param colonehot: previous one hot columns\n', '    :param returncol:\n', '    :return:\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_colcat_mergecol,pd_colcat_mergecol,function,17,41,32,255,6.22,2,1,"['df', 'col_list', 'x0', 'colid']","[None, None, None, None]","[None, None, None, '""easy_id""']",813,"['    """"""\n', '       Merge category onehot column\n', '    :param df:\n', '    :param l:\n', '    :param x0:\n', '    :return:\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_colcat_tonum,pd_colcat_tonum,function,21,62,43,534,8.61,1,4,"['df', 'colcat', 'drop_single_label', 'drop_fact_dict']","[None, None, None, None]","[None, '""all""', 'False', 'True']",837,"['    """"""\n', '    Encoding a data-set with mixed data (numerical and categorical) to a numerical-only data-set,\n', '    using the following logic:\n', '    * categorical with only a single value will be marked as zero (or dropped, if requested)\n', '    * categorical with two values will be replaced with the result of Pandas `factorize`\n', '    * categorical with more than two values will be replaced with the result of Pandas `get_dummies`\n', '    * numerical columns will not be modified\n', '    **Returns:** DataFrame or (DataFrame, dict). If `drop_fact_dict` is True, returns the encoded DataFrame.\n', '    else, returns a tuple of the encoded DataFrame and dictionary, where each key is a two-value column, and the\n', '    value is the original labels, as supplied by Pandas `factorize`. Will be empty if no two-value columns are\n', '    present in the data-set\n', '    Parameters\n', '    ----------\n', '    df : NumPy ndarray / Pandas DataFrame\n', '        The data-set to encode\n', '    colcat : sequence / string\n', ""        A sequence of the nominal (categorical) columns in the dataset. If string, must be 'all' to state that\n"", ""        all columns are nominal. If None, nothing happens. Default: 'all'\n"", '    drop_single_label : Boolean, default = False\n', '        If True, nominal columns with a only a single value will be dropped.\n', '    drop_fact_dict : Boolean, default = True\n', '        If True, the return value will be the encoded DataFrame alone. If False, it will be a tuple of\n', '        the DataFrame and the dictionary of the binary factorization (originating from pd.factorize)\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_colcat_mapping,pd_colcat_mapping,function,9,35,20,271,7.74,4,0,"['df', 'colname']","[None, None]","[None, None]",889,"['    """"""\n', '       map category to integers\n', '    :param df:\n', '    :param colname:\n', '    :return:\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_colcat_toint,pd_colcat_toint,function,28,78,50,628,8.05,4,2,"['dfref', 'colname', 'colcat_map', 'suffix']","[None, None, None, None]","[None, None, 'None', 'None']",909,[]
./utilmy/zutil_features.py:pd_colnum_tocat,pd_colnum_tocat,function,42,147,98,1134,7.71,2,6,"['df', 'colname', 'colexclude', 'colbinmap', 'bins', 'suffix', 'method', 'na_value', 'return_val', 'params={""KMeans_n_clusters""', '""KMeans_init""', '""KMeans_n_init""']","[None, None, None, None, None, None, None, None, None, '', "" 'k-means++'"", ' 10,""KMeans_max_iter"": 300, ""KMeans_tol"": 0.0001, ""KMeans_precompute_distances"": \'auto\',""KMeans_verbose"": 0, ""KMeans_random_state"": None,""KMeans_copy_x"": True, ""KMeans_n_jobs"": None, ""KMeans_algorithm"": \'auto\'}']","[None, 'None', 'None', 'None', '5', '""_bin""', '""uniform""', '-1', '""dataframe,param""', '{""KMeans_n_clusters"": 8', None, None]",948,"['    """"""\n', '    colbinmap = for each column, definition of bins\n', '    https://scikit-learn.org/stable/modules/classes.html#module-sklearn.preprocessing\n', '       :param df:\n', '       :param method:\n', '       :return:\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_colnum_normalize,pd_colnum_normalize,function,29,134,64,840,6.27,3,6,"['df0', 'colname', 'pars', 'suffix', 'return_val']","[None, None, None, None, None]","[None, None, None, '""_norm""', ""'dataframe,param'""]",1039,"['    """"""\n', '    :param df:\n', '    :param colnum_log:\n', '    :param colproba:\n', '    :return:\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_col_merge_onehot,pd_col_merge_onehot,function,11,26,20,136,5.23,2,1,"['df', 'colname']","[None, None]","[None, None]",1085,"['    """"""\n', '      Merge columns into single (hotn\n', '    :param df:\n', '    :param colname:\n', '    :return :\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_col_to_num,pd_col_to_num,function,9,27,24,184,6.81,1,0,"['df', 'colname', 'default']","[None, None, None]","[None, 'None', 'np.nan']",1102,[]
./utilmy/zutil_features.py:pd_col_filter,pd_col_filter,function,12,28,23,186,6.64,1,2,"['df', 'filter_val', 'iscol']","[None, None, None]","[None, 'None', '1']",1115,"['    """"""\n', '   # Remove Columns where Index Value is not in the filter_value\n', ""   # filter1= X_client['client_id'].values\n"", '   :param df:\n', '   :param filter_val:\n', '   :param iscol:\n', '   :return:\n', '   """"""\n']"
./utilmy/zutil_features.py:pd_col_fillna,pd_col_fillna,function,22,70,49,586,8.37,1,6,"['dfref', 'colname', 'method', 'value', 'colgroupby', 'return_val', '']","[None, None, None, None, None, None, None]","[None, 'None', '""frequent""', 'None', 'None', '""dataframe,param""', None]",1134,"['    """"""\n', '    Function to fill NaNs with a specific value in certain columns\n', '    Arguments:\n', '        df:            dataframe\n', '        colname:      list of columns to remove text\n', '        value:         value to replace NaNs with\n', '    Returns:\n', '        df:            new dataframe with filled values\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_pipeline_apply,pd_pipeline_apply,function,8,29,22,259,8.93,1,0,"['df', 'pipeline']","[None, None]","[None, None]",1180,"['    """"""\n', '      pipe_preprocess_colnum = [\n', '      (pd_col_to_num, {""val"": ""?"", })\n', '    , (pd_colnum_tocat, {""colname"": None, ""colbinmap"": colnum_binmap, \'bins\': 5,\n', '                         ""method"": ""uniform"", ""suffix"": ""_bin"",\n', '                         ""return_val"": ""dataframe""})\n', '    , (pd_col_to_onehot, {""colname"": None, ""colonehot"": colnum_onehot,\n', '                          ""return_val"": ""dataframe""})\n', '      ]\n', '    :param df:\n', '    :param pipeline:\n', '    :return:\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_stat_correl_pair,pd_stat_correl_pair,function,12,33,30,316,9.58,1,1,"['df', 'coltarget', 'colname']","[None, None, None]","[None, 'None', 'None']",1204,"['    """"""\n', '      Genearte correletion between the column and target column\n', '      df represents the dataframe comprising the column and colname comprising the target column\n', '    :param df:\n', '    :param colname: list of columns\n', '    :param coltarget : target column\n', '    :return:\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_stat_pandas_profile,pd_stat_pandas_profile,function,7,9,8,175,19.44,0,0,"['df', 'savefile', 'title']","[None, None, None]","[None, '""report.html""', '""Pandas Profile""']",1225,"['    """""" Describe the tables\n', '        #Pandas-Profiling 2.0.0\n', '        df.profile_report()\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_stat_distribution_colnum,pd_stat_distribution_colnum,function,23,84,72,646,7.69,1,3,"['df', 'nrows', 'verbose']","[None, None, None]","[None, '2000', 'False']",1238,"['    """""" Stats the tables\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_stat_histogram,pd_stat_histogram,function,8,19,18,210,11.05,0,0,"['df', 'bins', 'coltarget']","[None, None, None]","[None, '50', '""diff""']",1278,"['    """"""\n', '    :param df:\n', '    :param bins:\n', '    :param coltarget:\n', '    :return:\n', '    """"""\n']"
./utilmy/zutil_features.py:col_extractname,col_extractname,function,7,37,23,207,5.59,1,5,['col_onehot'],[None],[None],1293,"['    """"""\n', '    Column extraction from onehot name\n', '    :param col_onehot\n', '    :return:\n', '    """"""\n']"
./utilmy/zutil_features.py:col_remove,col_remove,function,12,42,26,214,5.1,3,4,"['cols', 'colsremove', 'mode']","[None, None, None]","[None, None, '""exact""']",1316,"['    """"""\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_colnum_tocat_stat,pd_colnum_tocat_stat,function,53,152,107,1986,13.07,1,5,"['df', 'feature', 'target_col', 'bins', 'cuts']","[None, None, None, None, None]","[None, None, None, None, '0']",1341,"['    """"""\n', '    Bins continuous features into equal sample size buckets and returns the target mean in each bucket. Separates out\n', '    nulls into another bucket.\n', '    :param df: dataframe containg features and target column\n', '    :param feature: feature column name\n', '    :param target_col: target column\n', '    :param bins: Number bins required\n', '    :param cuts: if buckets of certain specific cuts are required. Used on test data to use cuts from train.\n', '    :return: If cuts are passed only df_grouped data is returned, else cuts and df_grouped data is returned\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_stat_shift_trend_changes,pd_stat_shift_trend_changes,function,20,41,35,660,16.1,0,0,"['df', 'feature', 'target_col', 'threshold']","[None, None, None, None]","[None, None, None, '0.03']",1410,"['    """"""\n', '    Calculates number of times the trend of feature wrt target changed direction.\n', '    :param df: df_grouped dataset\n', '    :param feature: feature column name\n', '    :param target_col: target column\n', '    :param threshold: minimum % difference required to count as trend change\n', '    :return: number of trend chagnes for the feature\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_stat_shift_trend_correlation,pd_stat_shift_trend_correlation,function,19,63,55,788,12.51,0,2,"['df', 'df_test', 'colname', 'target_col']","[None, None, None, None]","[None, None, None, None]",1434,"['    """"""\n', '    Calculates correlation between train and test trend of colname wrt target.\n', '    :param df: train df data\n', '    :param df_test: test df data\n', '    :param colname: colname column name\n', '    :param target_col: target column name\n', '    :return: trend correlation between train and test\n', '    """"""\n']"
./utilmy/zutil_features.py:pd_stat_shift_changes,pd_stat_shift_changes,function,33,99,81,1236,12.48,1,4,"['df', 'target_col', 'features_list', 'bins', 'df_test']","[None, None, None, None, None]","[None, None, '0', '10', '0']",1465,"['    """"""\n', '    Calculates trend changes and correlation between train/test for list of features\n', '    :param df: dfframe containing features and target columns\n', '    :param target_col: target column name\n', '    :param features_list: by default creates plots for all features. If list passed, creates plots of only those features.\n', '    :param bins: number of bins to be created from continuous colname\n', '    :param df_test: test df which has to be compared with input df for correlation\n', '    :return: dfframe with trend changes and trend correlation (if test df passed)\n', '    """"""\n']"
./utilmy/zutil_features.py:np_conv_to_one_col,np_conv_to_one_col,function,5,11,10,137,12.45,0,0,"['np_array', 'sep_char']","[None, None]","[None, '""_""']",1510,"['    """"""\n', '    converts string/numeric columns to one string column\n', '    :param np_array: the numpy array with more than one column\n', '    :param sep_char: the separator character\n', '    """"""\n']"
./utilmy/zutil_features.py:dict2,dict2,class,3,5,5,36,7.2,0,0,[],[],[],28,[]
./utilmy/zutil_features.py:dict2:__init__,dict2:__init__,method,2,2,2,15,7.5,0,0,"['self', 'd']","[None, None]","[None, None]",29,[]
./utilmy/configs/util_config.py:log,log,function,2,5,4,54,10.8,0,0,['*s'],[None],[None],23,[]
./utilmy/configs/util_config.py:loge,loge,function,1,2,2,20,10.0,0,0,['*s'],[None],[None],27,[]
./utilmy/configs/util_config.py:config_load,config_load,function,31,124,88,1231,9.93,0,5,"['config_path', 'path_default', 'config_default', 'save_default', 'to_dataclass', '']","[' str ', ' str ', ' dict ', ' bool ', ' bool ', None]","[' None', ' None', ' None', ' False', ' True', None]",32,"['    """"""Load Config file into a dict\n', '    1) load config_path\n', '    2) If not, load in USER/.myconfig/.config.yaml\n', '    3) If not, create default save in USER/.myconfig/.config.yaml\n', '    Args:\n', ""        config_path:   path of config or 'default' tag value\n"", '        path_default : path of default config\n', '        config_default: dict value of default config\n', '        save_default: save default config on disk\n', '    Returns: dict config\n', '    """"""\n']"
./utilmy/configs/util_config.py:config_isvalid_yamlschema,config_isvalid_yamlschema,function,6,21,20,242,11.52,0,1,"['config_dict', 'schema_path', 'silent']","[' dict', ' str ', ' bool ']","[None, "" 'config_val.yaml'"", ' False']",105,"['    """"""Validate using a  yaml file\n', '    Args:\n', '        config_dict:\n', '        schema_path:\n', '        silent:\n', '    Returns: True/False\n', '    """"""\n']"
./utilmy/configs/util_config.py:config_isvalid_pydantic,config_isvalid_pydantic,function,2,9,8,56,6.22,0,0,"['config_dict', 'pydanctic_schema', 'silent']","[' dict', ' str ', ' bool ']","[None, "" 'config_py.yaml'"", ' False']",129,"['    """"""Validate using a pydantic files\n', '    Args:\n', '        config_dict:\n', '        pydanctic_schema:\n', '        silent:\n', '    Returns: True/False\n', '    """"""\n']"
./utilmy/configs/util_config.py:convert_yaml_to_box,convert_yaml_to_box,function,6,8,8,57,7.12,0,0,['yaml_path'],[' str'],[None],147,[]
./utilmy/configs/util_config.py:convert_dict_to_pydantic,convert_dict_to_pydantic,function,10,13,13,253,19.46,0,0,"['config_dict', 'schema_name']","[' dict', ' str']","[None, None]",153,[]
./utilmy/configs/util_config.py:pydantic_model_generator,pydantic_model_generator,function,8,34,32,299,8.79,0,0,"['input_file', 'str]', 'input_file_type', 'output_file', '**kwargs', '']","[' Union[Path', None, None, ' Path', None, None]","[None, None, None, None, None, None]",166,"['    """"""\n', '    Args:\n', '        input_file:\n', '        input_file_type:\n', '        output_file:\n', '        **kwargs:\n', '\n', '    Returns:\n', '    # https://github.com/koxudaxi/datamodel-code-generator\n', '    # pip install datamodel-code-generator\n', '\n', '    """"""\n']"
./utilmy/configs/util_config.py:test_yamlschema,test_yamlschema,function,5,6,6,104,17.33,0,0,[],[],[],200,[]
./utilmy/configs/util_config.py:test_pydanticgenrator,test_pydanticgenrator,function,6,26,20,373,14.35,0,0,[],[],[],206,[]
./utilmy/configs/util_config.py:test4,test4,function,5,8,8,155,19.38,0,0,[],[],[],221,[]
./utilmy/configs/util_config.py:test_example,test_example,function,1,2,2,6,3.0,0,0,[],[],[],227,[]
./utilmy/docs/cli.py:run_cli,run_cli,function,15,51,41,602,11.8,0,1,[],[],[],8,"['    """""" USage\n', '    \n', '    doc-gen  doc-gen  --repo_dir utilmy/      --doc_dir docs/""\n', '    """"""\n']"
./utilmy/docs/code_parser.py:get_list_function_name,get_list_function_name,function,17,27,26,352,13.04,1,1,['file_path'],[None],[None],26,"['    """"""The function use to get all functions of the python file\n', '    Args:\n', '        IN: file_path         - the file path input\n', '        OUT: list_functions   - List all python functions in the input file\n', '    Example Output:\n', ""        ['func1', 'func2']\n"", '    """"""\n']"
./utilmy/docs/code_parser.py:get_list_class_name,get_list_class_name,function,17,27,26,347,12.85,1,1,['file_path'],[None],[None],48,"['    """"""The function use to get all classes of the python file\n', '    Args:\n', '        IN: file_path         - the file path input\n', '        OUT: list_classes     - List all python classes in the input file\n', '    Example Output:\n', ""        ['Class1', 'Class1']\n"", '    """"""\n']"
./utilmy/docs/code_parser.py:get_list_class_methods,get_list_class_methods,function,26,42,37,620,14.76,2,1,['file_path'],[None],[None],73,"['    """"""The function use to get all classes and all methods in this class of the python file\n', '    Args:\n', '        IN: file_path         - the file path input\n', '        OUT: An array of class info [{dict}, {dict}, ...]\n', '    Example Output:\n', '    [\n', '        {""class_name"": ""Class1"", ""listMethods"": [""method1"", ""method2"", ""method3""]},\n', '        {""class_name"": ""Class2"", ""listMethods"": [""method4"", ""method5"", ""method6""]},\n', '    ]\n', '    """"""\n']"
./utilmy/docs/code_parser.py:get_list_variable_global,get_list_variable_global,function,12,26,24,357,13.73,1,2,['file_path'],[None],[None],105,"['    """"""The function use to get all global variable of the python file\n', '    Args:\n', '        IN: file_path         - the file path input\n', '        OUT: list_var         - Array of all global variable\n', '    Example Output:\n', ""        ['Var1', 'Var2']\n"", '    """"""\n']"
./utilmy/docs/code_parser.py:_get_docs,_get_docs,function,12,77,32,669,8.69,1,6,"['all_lines', 'index_1', 'func_lines']","[None, None, None]","[None, None, None]",127,[]
./utilmy/docs/code_parser.py:get_list_function_info,get_list_function_info,function,29,55,48,787,14.31,2,0,['file_path'],[None],[None],167,"['    """"""The function use to get functions stars\n', '    Args:\n', '        IN: file_path         - the file path input\n', '        OUT: Array of functions, lines of the function, and variable in function\n', '    Example Output:\n', '        [\n', '            {""name"": ""function_name1"", ""lines"": 20, ""variables"": [""a"", ""b"", ""c""]},\n', '            {""name"": ""function_name2"", ""lines"": 30, ""variables"": []},\n', '        ]\n', '    """"""\n']"
./utilmy/docs/code_parser.py:get_list_class_info,get_list_class_info,function,20,49,42,584,11.92,2,0,['file_path'],[None],[None],205,"['    """"""The class use to get functions stars\n', '    Args:\n', '        IN: file_path         - the file path input\n', '        OUT: Array of functions, lines of the function, and variable in function\n', '    Example Output:\n', '        [\n', '            {""function"": ""function_name1"", ""lines"": 20, ""variables"": [""a"", ""b"", ""c""]},\n', '            {""function"": ""function_name2"", ""lines"": 30, ""variables"": []},\n', '        ]\n', '    """"""\n']"
./utilmy/docs/code_parser.py:get_list_method_info,get_list_method_info,function,35,65,54,966,14.86,3,0,['file_path'],[None],[None],241,"['    """"""get_list_method_info\n', '    Args:\n', '        IN: file_path         - the file path input\n', '        OUT: Array of methods in class\n', '    Example Output:\n', '        [\n', '            {""function"": ""function_name1"", ""lines"": 20, ""variables"": [""a"", ""b"", ""c""]},\n', '            {""function"": ""function_name2"", ""lines"": 30, ""variables"": []},\n', '        ]\n', '    """"""\n']"
./utilmy/docs/code_parser.py:get_list_method_stats,get_list_method_stats,function,6,12,11,148,12.33,0,1,['file_path'],[None],[None],283,"['    """"""The function use to get methods stars\n', '    Args:\n', '        IN: file_path         - the file path input\n', '        OUT: Dataframe with bellow fields\n', '            uri:   path1/path2/filename.py:function1\n', '            name: function1\n', '            n_lines\n', '            n_words\n', '            n_words_unqiue\n', '            n_characters\n', '            avg_char_per_word = n_charaecter / n_words\n', '            n_loop  : nb of for, while loop\n', '            n_ifthen  : nb of if_then\n', '        \n', '        **** return None if no function in file\n', '    Example Output:\n', '                                                    uri                                               name    type  n_variable  n_words  n_words_unique  n_characters  avg_char_per_word  n_loop  n_ifthen\n', '    0   d:/Project/job/test2/zz936/parser/test/keys.py...                              VerifyingKey:__init__  method           2       11              11           100           9.090909       0         1      \n', '    1   d:/Project/job/test2/zz936/parser/test/keys.py...                     VerifyingKey:from_public_point  method          10       13              12           185          14.230769       0         0      \n', '    2   d:/Project/job/test2/zz936/parser/test/keys.py...                           VerifyingKey:from_string  method          17       45              39           504          11.200000       0         1      \n', '    3   d:/Project/job/test2/zz936/parser/test/keys.py...                              VerifyingKey:from_pem  method           2        2               2            39          19.500000       0         0      \n', '    4   d:/Project/job/test2/zz936/parser/test/keys.py...                              VerifyingKey:from_der  method          19       64              38           683          10.671875       0         3      \n', '    5   d:/Project/job/test2/zz936/parser/test/keys.py...              VerifyingKey:from_public_key_recovery  method           4        8               8           137          17.125000       0         0      \n', '    6   d:/Project/job/test2/zz936/parser/test/keys.py...  VerifyingKey:from_public_key_recovery_with_digest  method          13       24              23           288          12.000000       0         0      \n', '    7   d:/Project/job/test2/zz936/parser/test/keys.py...                             VerifyingKey:to_string  method           6       11               8           145          13.181818       0         0      \n', '    8   d:/Project/job/test2/zz936/parser/test/keys.py...                                VerifyingKey:to_pem  method           2        4               4            42          10.500000       0         0  \n', '    """"""\n']"
./utilmy/docs/code_parser.py:get_list_class_stats,get_list_class_stats,function,6,12,11,147,12.25,0,1,['file_path'],[None],[None],319,"['    """"""The class use to get functions stars\n', '    Args:\n', '        IN: file_path         - the file path input\n', '        OUT: Dataframe with bellow fields\n', '            uri:   path1/path2/filename.py:function1\n', '            name: function1\n', '            n_lines\n', '            n_words\n', '            n_words_unqiue\n', '            n_characters\n', '            avg_char_per_word = n_charaecter / n_words\n', '            n_loop  : nb of for, while loop\n', '            n_ifthen  : nb of if_then\n', '        \n', '        **** return None if no function in file\n', '    Example Output:\n', '                                                    uri               name   type  n_variable  n_words  n_words_unique  n_characters  avg_char_per_word  n_loop  n_ifthen\n', '    0  d:/Project/job/test2/zz936/parser/test/keys.py...  BadSignatureError  class           0        1               1             4           4.000000       0         0\n', '    1  d:/Project/job/test2/zz936/parser/test/keys.py...     BadDigestError  class           0        1               1             4           4.000000       0         0\n', '    2  d:/Project/job/test2/zz936/parser/test/keys.py...       VerifyingKey  class          84      301             189          3584          11.906977       0         7\n', '    3  d:/Project/job/test2/zz936/parser/test/keys.py...         SigningKey  class         138      482             310          4615           9.574689       3         9\n', '    """"""\n']"
./utilmy/docs/code_parser.py:get_list_function_stats,get_list_function_stats,function,6,12,11,150,12.5,0,1,['file_path'],[None],[None],350,"['    """"""The function use to get functions stars\n', '    Args:\n', '        IN: file_path         - the file path input\n', '        OUT: Dataframe with bellow fields\n', '            uri:   path1/path2/filename.py:function1\n', '            name: function1\n', '            n_lines\n', '            n_words\n', '            n_words_unqiue\n', '            n_characters\n', '            avg_char_per_word = n_charaecter / n_words\n', '            n_loop  : nb of for, while loop\n', '            n_ifthen  : nb of if_then\n', '        \n', '        **** return None if no function in file\n', '    Example Output:\n', '            uri                                 name  n_variable  n_words  n_words_unique  n_characters  avg_char_per_word  n_loop  n_ifthen\n', '        0   d:\\Project\\job\\test2\\zz936\\parser/test/test2.p...     prepare_target_and_clean_up_test           8       92              32           535           5.815217       0         0\n', '        1   d:\\Project\\job\\test2\\zz936\\parser/test/test2.p...                 clean_up_config_test           6       55              19           241           4.381818       0         1\n', '        2   d:\\Project\\job\\test2\\zz936\\parser/test/test2.p...         check_default_network_config          22      388              74           955           2.461340       1         5\n', '        3   d:\\Project\\job\\test2\\zz936\\parser/test/test2.p...                     check_module_env           9      250              54           553           2.212000       1         1\n', '        4   d:\\Project\\job\\test2\\zz936\\parser/test/test2.p...     provision_certificates_to_target           7      101              29           384           3.801980       0         3\n', '        5   d:\\Project\\job\\test2\\zz936\\parser/test/test2.p...            config_session_connection           2       14               8            97           6.928571       0         0\n', '        6   d:\\Project\\job\\test2\\zz936\\parser/test/test2.p...  config_cipher_suite_and_tcps_action           8      101              30           335           3.316832       0         3\n', '    """"""\n']"
./utilmy/docs/code_parser.py:get_stats,get_stats,function,16,68,46,652,9.59,0,0,"['df', 'file_path']","['pd.DataFrame', 'str']","[None, None]",386,"['    """""" Calculate stats from datafaframe\n', '    Args:\n', '        df: pandas DataFrame\n', '\n', '    Returns:\n', '        pandas DataFrame\n', '\n', '    """"""\n']"
./utilmy/docs/code_parser.py:get_file_stats,get_file_stats,function,11,21,19,244,11.62,1,0,['file_path'],[None],[None],415,"['    """"""The function use to get file stars\n', '    Args:\n', '        IN: file_path         - the file path input\n', '        OUT: Dict of file stars\n', '    Example Output:\n', '        {\n', '            ""total_functions"": 22,\n', '            ""avg_lines"" : 110.2,\n', '            ""total_class"": 3\n', '        }\n', '    """"""\n']"
./utilmy/docs/code_parser.py:_get_words,_get_words,function,6,23,21,154,6.7,1,1,['row'],[None],[None],441,[]
./utilmy/docs/code_parser.py:_get_avg_char_per_word,_get_avg_char_per_word,function,1,9,9,76,8.44,0,0,['row'],[None],[None],451,[]
./utilmy/docs/code_parser.py:_validate_file,_validate_file,function,5,34,18,227,6.68,0,3,['file_path'],[None],[None],455,"['    """"""Check if the file is existed and it\'s a python file\n', '    """"""\n']"
./utilmy/docs/code_parser.py:_clean_data,_clean_data,function,10,75,27,699,9.32,3,9,['array'],[None],[None],470,"['    """"""Remove empty lines and comment lines start with #\n', '    """"""\n']"
./utilmy/docs/code_parser.py:_remove_empty_line,_remove_empty_line,function,2,7,7,37,5.29,0,1,['line'],[None],[None],513,[]
./utilmy/docs/code_parser.py:_remmove_commemt_line,_remmove_commemt_line,function,2,17,14,97,5.71,0,1,['line'],[None],[None],517,[]
./utilmy/docs/code_parser.py:_get_and_clean_all_lines,_get_and_clean_all_lines,function,5,11,8,124,11.27,0,1,['file_path'],[None],[None],523,"['    """"""Prepare all lines of the file\n', '    """"""\n']"
./utilmy/docs/code_parser.py:_get_all_line,_get_all_line,function,33,195,78,2107,10.81,7,10,['file_path'],[None],[None],533,[]
./utilmy/docs/code_parser.py:_get_all_lines_in_function,_get_all_lines_in_function,function,21,65,44,661,10.17,3,4,"['function_name', 'array', 'indentMethod']","[None, None, None]","[None, None, ""''""]",539,"['    """"""The function use to get all lines of the function\n', '    Args:\n', '        IN: function_name - name of the function will be used to get all line\n', '        IN: array         - list all lines of the file have this input function\n', '        OUT: list_lines   - Array of all line of this function\n', '        OUT: indent       - The indent of this function (this will be used for another calculation)\n', '    """"""\n']"
./utilmy/docs/code_parser.py:_get_all_lines_in_class,_get_all_lines_in_class,function,16,63,44,633,10.05,2,3,"['class_name', 'array']","[None, None]","[None, None]",584,"['    """"""The function use to get all lines of the class\n', '    Args:\n', '        IN: class_name    - name of the class will be used to get all line\n', '        IN: array         - list all lines of the file have this input class\n', '        OUT: list_lines   - Array of all line of this class\n', '    """"""\n']"
./utilmy/docs/code_parser.py:_get_all_lines_define_function,_get_all_lines_define_function,function,20,49,36,538,10.98,2,3,"['function_name', 'array', 'indentMethod']","[None, None, None]","[None, None, ""''""]",623,"['    """"""The function use to get all lines define_function\n', '    Args:\n', '        IN: function_name - name of the function will be used to get all line\n', '        IN: array         - list all lines of the file have this input function\n', '        OUT: list_lines   - Array of all line used to define the function\n', '        OUT: indent       - The indent of this function (this will be used for another calculation)\n', '    """"""\n']"
./utilmy/docs/code_parser.py:_get_define_function_stats,_get_define_function_stats,function,24,145,71,1337,9.22,4,8,['array'],[None],[None],660,"['    """"""The function use to get define function stats: arg_name, arg_type, arg_value\n', '    Args:\n', '        IN: array         - list all lines of function to get variables\n', '        OUT: function stats: arg_name, arg_type, arg_value\n', '    """"""\n']"
./utilmy/docs/code_parser.py:_get_function_stats,_get_function_stats,function,16,206,105,1958,9.5,4,11,"['array', 'indent']","[None, None]","[None, None]",721,"['    """"""The function use to get all lines of the function\n', '    Args:\n', '        IN: indent        - indent string\n', '        IN: array         - list all lines of function to get variables\n', '        OUT: list_var     - Array of all variables\n', '    """"""\n']"
./utilmy/docs/code_parser.py:export_stats_pertype,export_stats_pertype,function,9,46,22,381,8.28,0,4,"['in_path', 'type', 'out_path']","['str', 'str', 'str']","['None', 'None', 'None']",810,"['    """"""\n', '        python code_parser.py type <in_path> <type> <out_path>\n', '    Returns:\n', '\n', '    """"""\n']"
./utilmy/docs/code_parser.py:export_stats_perfile,export_stats_perfile,function,8,36,16,336,9.33,0,3,"['in_path', 'out_path']","['str', 'str']","['None', 'None']",836,"['    """"""\n', '        python code_parser.py  export_stats_perfile <in_path> <out_path>\n', '\n', '    Returns:\n', '\n', '    """"""\n']"
./utilmy/docs/code_parser.py:export_stats_perrepo,export_stats_perrepo,function,12,67,29,640,9.55,1,4,"['in_path', 'out_path']","['str', 'str']","['None', 'None']",860,"['    """""" \n', '        python code_parser.py  export_stats_perfile <in_path> <out_path>\n', '\n', '    Returns:\n', '        1  repo   --->  a single file stats for all sub-diractory\n', '    """"""\n']"
./utilmy/docs/code_parser.py:test_example,test_example,function,3,7,7,233,33.29,0,0,[],[],[],896,[]
./utilmy/docs/generate_doc.py:markdown_create_function,markdown_create_function,function,20,77,62,736,9.56,2,0,"['uri', 'name', 'type', 'args_name', 'args_type', 'args_value', 'start_line', 'list_docs', 'prefix']","[None, None, None, None, None, None, None, None, None]","[None, None, None, None, None, None, None, None, '""""']",22,[]
./utilmy/docs/generate_doc.py:markdown_create_file,markdown_create_file,function,1,2,2,7,3.5,0,0,"['list_info', 'prefix']","[None, None]","[None, ""''""]",55,[]
./utilmy/logs/test_log.py:test1,test1,function,17,28,28,206,7.36,0,0,[],[],[],9,[]
./utilmy/logs/test_log.py:test2,test2,function,19,35,34,331,9.46,0,0,[],[],[],28,[]
./utilmy/logs/test_log.py:test_launch_server,test_launch_server,function,12,16,16,155,9.69,0,0,[],[],[],81,"[""\t'''\n"", '\tServer code from loguru.readthedocs.io\n', '\tUse to test network logging\n', '\n', '     python   test.py test_launch_server\n', '\n', '\n', ""\t'''\n""]"
./utilmy/logs/test_log.py:test_server,test_server,function,19,35,34,337,9.63,0,0,[],[],[],95,[]
./utilmy/logs/test_log.py:LoggingStreamHandler,LoggingStreamHandler,class,13,34,28,381,11.21,2,1,[],[],[],65,[]
./utilmy/logs/test_log.py:LoggingStreamHandler:handle,LoggingStreamHandler:handle,method,12,32,26,364,11.38,2,1,['self'],[None],[None],66,[]
./utilmy/logs/util_log.py:logger_setup,logger_setup,function,33,105,82,1013,9.65,2,3,"['log_config_path', 'log_template', '**kwargs']","[' str ', ' str ', None]","[' None', ' ""default""', None]",34,"['    """""" Generic Logging setup\n', '      Overide logging using loguru setup\n', '      1) Custom config from log_config_path .yaml file\n', '      2) Use shortname log, log2, logw, loge for logging output\n', '\n', '    Args:\n', '        log_config_path:\n', '        template_name:\n', '        **kwargs:\n', '    Returns:None\n', '\n', '    TODO:\n', '\n', '\n', '    """"""\n']"
./utilmy/logs/util_log.py:log,log,function,33,105,82,1013,9.65,2,3,"['log_config_path', 'log_template', '**kwargs']","[' str ', ' str ', None]","[' None', ' ""default""', None]",115,[]
./utilmy/logs/util_log.py:log2,log2,function,1,6,6,62,10.33,0,0,['*s'],[None],[None],119,[]
./utilmy/logs/util_log.py:log3,log3,function,1,6,6,64,10.67,0,0,['*s)'],['  ### Debuggine level 2depth'],"['1, lazy=True).log(""DEBUG_2"", "","".join([str(t) for t in s]))*s):']",123,[]
./utilmy/logs/util_log.py:logw,logw,function,1,6,6,64,10.67,0,0,['*s'],[None],[None],128,[]
./utilmy/logs/util_log.py:logc,logc,function,1,6,6,65,10.83,0,0,['*s'],[None],[None],132,[]
./utilmy/logs/util_log.py:loge,loge,function,1,6,6,66,11.0,0,0,['*s'],[None],[None],136,[]
./utilmy/logs/util_log.py:logr,logr,function,1,6,6,62,10.33,0,0,['*s'],[None],[None],140,[]
./utilmy/logs/util_log.py:test,test,function,8,18,18,151,8.39,0,0,[],[],[],145,[]
./utilmy/logs/util_log.py:z_logger_stdout_override,z_logger_stdout_override,function,18,36,33,384,10.67,1,0,[],[],[],162,"['    """""" Redirect stdout --> logger\n', '    Returns:\n', '    """"""\n']"
./utilmy/logs/util_log.py:z_logger_custom_1,z_logger_custom_1,function,38,110,92,1250,11.36,2,1,[],[],[],187,[]
./utilmy/templates/cli.py:run_cli,run_cli,function,9,30,23,332,11.07,0,2,[],[],[],5,"['    """""" USage\n', '    \n', '    template  copy  --repo_dir utilmy/\n', '    """"""\n']"
./utilmy/templates/cli.py:template_show,template_show,function,7,9,9,115,12.78,0,0,[],[],[],26,[]
./utilmy/templates/cli.py:template_copy,template_copy,function,12,26,22,249,9.58,0,0,"['name', 'out_dir']","[None, None]","[None, None]",33,[]
./utilmy/templates/templist/pypi_package/run_pipy.py:get_current_githash,get_current_githash,function,6,10,8,126,12.6,0,0,[],[],[],39,[]
./utilmy/templates/templist/pypi_package/run_pipy.py:update_version,update_version,function,12,30,28,315,10.5,0,0,"['path', 'n']","[None, None]","[None, '1']",46,[]
./utilmy/templates/templist/pypi_package/run_pipy.py:git_commit,git_commit,function,3,29,19,164,5.66,0,2,['message'],[None],[None],65,[]
./utilmy/templates/templist/pypi_package/run_pipy.py:ask,ask,function,2,3,3,42,14.0,0,0,"['question', 'ans']","[None, None]","[None, ""'yes'""]",77,[]
./utilmy/templates/templist/pypi_package/run_pipy.py:pypi_upload,pypi_upload,function,5,40,35,391,9.78,1,1,[],[],[],81,"['    """"""\n', '      It requires credential in .pypirc  files\n', '      __token__\n', '      or in github SECRETS\n', '\n', '    """"""\n']"
./utilmy/templates/templist/pypi_package/run_pipy.py:main,main,function,2,6,6,75,12.5,0,0,['*args'],[None],[None],102,[]
./utilmy/templates/templist/pypi_package/run_pipy.py:Version,Version,class,21,58,48,650,11.21,0,1,[],[],[],10,[]
./utilmy/templates/templist/pypi_package/run_pipy.py:Version:__init__,Version:__init__,method,6,6,6,50,8.33,0,0,"['self', 'major', 'minor', 'patch']","[None, None, None, None]","[None, None, None, None]",13,[]
./utilmy/templates/templist/pypi_package/run_pipy.py:Version:__str__,Version:__str__,method,2,2,2,36,18.0,0,0,['self'],[None],[None],18,[]
./utilmy/templates/templist/pypi_package/run_pipy.py:Version:__repr__,Version:__repr__,method,2,2,2,20,10.0,0,0,['self'],[None],[None],21,[]
./utilmy/templates/templist/pypi_package/run_pipy.py:Version:stringify,Version:stringify,method,1,2,2,51,25.5,0,0,['self'],[None],[None],24,[]
./utilmy/templates/templist/pypi_package/run_pipy.py:Version:new_version,Version:new_version,method,1,3,3,53,17.67,0,0,"['self', 'orig']","[None, None]","[None, None]",27,[]
./utilmy/templates/templist/pypi_package/run_pipy.py:Version:parse,Version:parse,method,5,23,22,192,8.35,0,1,"['cls', 'string']","[None, None]","[None, None]",31,[]
./utilmy/templates/templist/pypi_package/setup.py:get_current_githash,get_current_githash,function,6,10,8,123,12.3,0,0,[],[],[],17,[]
