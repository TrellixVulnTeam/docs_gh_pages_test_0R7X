uri,name,type,n_variable,n_words,n_words_unique,n_characters,avg_char_per_word,n_loop,n_ifthen,arg_name,arg_type,arg_value,line,docs
./run_pipy.py:get_current_githash,get_current_githash,function,6,12,9,126,10.5,0,0,[],[],[],62,[]
./run_pipy.py:update_version,update_version,function,12,31,28,315,10.16,0,0,"['path', 'n']","[None, None]","[None, '1']",69,[]
./run_pipy.py:git_commit,git_commit,function,3,29,19,164,5.66,0,2,['message'],[None],[None],90,[]
./run_pipy.py:ask,ask,function,2,3,3,42,14.0,0,0,"['question', 'ans']","[None, None]","[None, ""'yes'""]",101,[]
./run_pipy.py:pypi_upload,pypi_upload,function,5,39,34,390,10.0,1,1,[],[],[],105,"['    """"""\n', '      It requires credential in .pypirc  files\n', '      __token__\n', '      or in github SECRETS\n', '\n', '    """"""\n']"
./run_pipy.py:main,main,function,2,8,7,75,9.38,0,0,['*args'],[None],[None],125,[]
./run_pipy.py:Version,Version,class,21,58,48,650,11.21,0,1,[],[],[],33,[]
./run_pipy.py:Version:__init__,Version:__init__,method,6,6,6,50,8.33,0,0,"['self', 'major', 'minor', 'patch']","[None, None, None, None]","[None, None, None, None]",36,[]
./run_pipy.py:Version:__str__,Version:__str__,method,2,2,2,36,18.0,0,0,['self'],[None],[None],41,[]
./run_pipy.py:Version:__repr__,Version:__repr__,method,2,2,2,20,10.0,0,0,['self'],[None],[None],44,[]
./run_pipy.py:Version:stringify,Version:stringify,method,1,2,2,51,25.5,0,0,['self'],[None],[None],47,[]
./run_pipy.py:Version:new_version,Version:new_version,method,1,3,3,53,17.67,0,0,"['self', 'orig']","[None, None]","[None, None]",50,[]
./run_pipy.py:Version:parse,Version:parse,method,5,23,22,192,8.35,0,1,"['cls', 'string']","[None, None]","[None, None]",54,[]
./setup.py:get_current_githash,get_current_githash,function,6,14,11,123,8.79,0,0,[],[],[],33,[]
./test.py:pd_random,pd_random,function,9,29,22,152,5.24,0,0,"['ncols', 'nrows']","[None, None]","['7', '100']",8,[]
./test.py:test_utilmy_plot,test_utilmy_plot,function,6,10,10,87,8.7,0,0,[],[],[],19,[]
./test.py:test_utilmy_pd_os_session,test_utilmy_pd_os_session,function,48,241,148,2263,9.39,2,0,[],[],[],25,[]
./test.py:test_utilmy_session,test_utilmy_session,function,17,48,40,459,9.56,1,0,[],[],[],118,[]
./test.py:test_docs_cli,test_docs_cli,function,2,9,9,80,8.89,0,0,[],[],[],142,"['    """"""\n', '      from utilmy.docs.generate_doc import run_markdown, run_table\n', '\n', '    """"""\n']"
./test.py:test_decorators_os,test_decorators_os,function,27,59,46,673,11.41,0,0,['*args'],[None],[None],155,[]
./test.py:pd_generate_data,pd_generate_data,function,19,66,49,467,7.08,0,0,"['ncols', 'nrows']","[None, None]","['7', '100']",209,"['    """"""\n', '    Generate sample data for function testing\n', '    categorical features for anova test\n', '    """"""\n']"
./test.py:test_tabular_test,test_tabular_test,function,10,16,16,182,11.38,0,0,[],[],[],227,"['        """"""\n', '        ANOVA test\n', '        """"""\n']"
./test.py:test_text_similarity,test_text_similarity,function,21,45,39,522,11.6,0,0,[],[],[],242,[]
./test.py:test_text_pdcluster,test_text_pdcluster,function,5,6,6,59,9.83,0,0,[],[],[],262,[]
./utilmy/dates.py:log,log,function,1,1,1,9,9.0,0,0,['*s'],[None],[None],6,[]
./utilmy/dates.py:pd_date_split,pd_date_split,function,31,153,68,1005,6.57,1,2,"['df', 'coldate ', 'prefix_col ', 'verbose']","[None, None, None, None]","[None, ""  'time_key'"", '""""', 'False']",11,[]
./utilmy/dates.py:date_now,date_now,function,14,17,15,220,12.94,0,0,"['fmt=""%Y-%m-%d %H', 'add_days', 'timezone']","['', None, None]","['""%Y-%m-%d %H:%M:%S %Z%z""', '0', ""'Asia/Tokyo'""]",41,[]
./utilmy/dates.py:date_is_holiday,date_is_holiday,function,8,23,21,146,6.35,0,0,['array'],[None],[None],53,"['    """"""\n', '      is_holiday([ pd.to_datetime(""2015/1/1"") ] * 10)\n', '\n', '    """"""\n']"
./utilmy/dates.py:date_weekmonth2,date_weekmonth2,function,3,17,12,51,3.0,0,1,['d'],[None],[None],63,[]
./utilmy/dates.py:date_weekmonth,date_weekmonth,function,4,37,18,194,5.24,0,2,['d'],[None],[None],71,[]
./utilmy/dates.py:date_weekyear2,date_weekyear2,function,1,6,6,53,8.83,0,0,['dt'],[None],[None],80,[]
./utilmy/dates.py:date_weekday_excel,date_weekday_excel,function,7,17,15,98,5.76,0,1,['x'],[None],[None],84,[]
./utilmy/dates.py:date_weekyear_excel,date_weekyear_excel,function,14,47,40,302,6.43,0,1,['x'],[None],[None],91,[]
./utilmy/dates.py:date_generate,date_generate,function,8,17,16,174,10.24,0,0,"['start', 'ndays']","[None, None]","[""'2018-01-01'"", '100']",110,[]
./utilmy/decorators.py:timeout,timeout,function,11,25,21,297,11.88,0,0,"['seconds', 'error_message']","[None, None]","['10', 'os.strerror(errno.ETIME']",22,"['    """"""Decorator to throw timeout error, if function doesnt complete in certain time\n', '    Args:\n', '        seconds:``int``\n', '            No of seconds to wait\n', '        error_message:``str``\n', '            Error message\n', '            \n', '    """"""\n']"
./utilmy/decorators.py:timer,timer,function,8,22,20,208,9.45,0,0,['func'],[None],[None],49,"['    """"""\n', '    Decorator to show the execution time of a function or a method in a class.\n', '    """"""\n']"
./utilmy/decorators.py:profiler_context,profiler_context,function,9,20,20,191,9.55,0,0,[],[],[],67,"['    """"""\n', ""    Context Manager the will profile code inside it's bloc.\n"", '    And print the result of profiler.\n', '    Example:\n', '        with profiler_context():\n', '            # code to profile here\n', '    """"""\n']"
./utilmy/decorators.py:profiler_deco,profiler_deco,function,26,45,39,511,11.36,0,0,['func'],[None],[None],87,"['    """"""\n', '    A decorator that will profile a function\n', '    And print the result of profiler.\n', '    """"""\n']"
./utilmy/decorators.py:profiler_decorator_base,profiler_decorator_base,function,15,23,22,245,10.65,0,0,['fnc'],[None],[None],105,"['    """"""\n', '    A decorator that uses cProfile to profile a function\n', '    And print the result\n', '    """"""\n']"
./utilmy/decorators.py:os_multithread,os_multithread,function,19,48,40,530,11.04,3,0,['**kwargs'],[None],[None],127,"['    """"""\n', '    Creating n number of threads:  1 thread per function,\n', '    starting them and waiting for their subsequent completion\n', '   Example:\n', '        os_multithread(function1=(function_name1, (arg1, arg2, ...)),\n', '                       ...)\n', '\n', '    def test_print(*args):\n', '        print(*args)\n', '\n', '    os_multithread(function1=(test_print, (""some text"",)),\n', '                          function2=(test_print, (""bbbbb"",)),\n', '                          function3=(test_print, (""ccccc"",)))\n', '\n', '\n', '    """"""\n']"
./utilmy/decorators.py:threading_deco,threading_deco,function,6,14,13,185,13.21,0,0,['func'],[None],[None],166,"['    """""" A decorator to run function in background on thread\n', '\tArgs:\n', '\t\tfunc:``function``\n', '\t\t\tFunction with args\n', '\n', '\tReturn:\n', '\t\tbackground_thread: ``Thread``\n', '\n', '    """"""\n']"
./utilmy/decorators.py:_TimeoutError,_TimeoutError,class,0,1,1,4,4.0,0,0,[],[],[],11,[]
./utilmy/images.py:log,log,function,1,1,1,8,8.0,0,0,['*s'],[None],[None],13,[]
./utilmy/images.py:deps,deps,function,5,7,7,74,10.57,0,0,[],[],[],17,[]
./utilmy/images.py:read_image,read_image,function,18,50,37,703,14.06,0,4,"['filepath_or_buffer', 'io.BytesIO]']","[' typing.Union[str', None]","[None, None]",24,"['    """"""Read a file into an image object\n', '    Args:\n', '        filepath_or_buffer: The path to the file, a URL, or any object\n', '            with a `read` method (such as `io.BytesIO`)\n', '    """"""\n']"
./utilmy/images.py:visualize_in_row,visualize_in_row,function,12,24,24,239,9.96,1,0,['**images'],[None],[None],53,"['    """"""Plot images in one row.""""""\n']"
./utilmy/images.py:maintain_aspect_ratio_resize,maintain_aspect_ratio_resize,function,10,40,29,229,5.72,0,2,"['image', 'width', 'height', 'inter']","[None, None, None, None]","[None, 'None', 'None', 'cv2.INTER_AREA']",68,[]
./utilmy/io.py:screenshot,screenshot,function,9,22,16,132,6.0,0,0,"['output', 'monitors']","[None, None]","[""'fullscreen.png'"", '-1']",4,"['  """"""\n', '  with mss() as sct:\n', '    for _ in range(100):\n', '        sct.shot()\n', '  # MacOS X\n', '  from mss.darwin import MSS as mss\n', '  \n', '  \n', '  """"""\n']"
./utilmy/tabular.py:log,log,function,1,1,1,8,8.0,0,0,['*s'],[None],[None],12,[]
./utilmy/tabular.py:test_anova,test_anova,function,23,78,55,663,8.5,2,1,"['df', 'col1', 'col2']","[None, None, None]","[None, None, None]",19,"['    """"""\n', '    ANOVA test two categorical features\n', '    Input dfframe, 1st feature and 2nd feature\n', '    """"""\n']"
./utilmy/tabular.py:test_normality2,test_normality2,function,19,122,59,890,7.3,1,6,"['df', 'column', 'test_type']","[None, None, None]","[None, None, None]",48,"['    """"""\n', '    Function to check Normal Distribution of a Feature by 3 methods\n', '    Input dfframe, feature name, and a test type\n', '    Three types of test\n', ""    1)'Shapiro'\n"", ""    2)'Normal'\n"", ""    3)'Anderson'\n"", '\n', '    output the statistical test score and result whether accept or reject\n', '    Accept mean the feature is Gaussain\n', '    Reject mean the feature is not Gaussain\n', '    """"""\n']"
./utilmy/tabular.py:test_plot_qqplot,test_plot_qqplot,function,15,29,25,338,11.66,0,0,"['df', 'col_name']","[None, None]","[None, None]",95,"['    """"""\n', '    Function to plot boxplot, histplot and qqplot for numerical feature analyze\n', '    """"""\n']"
./utilmy/tabular.py:test_heteroscedacity,test_heteroscedacity,function,61,111,85,993,8.95,0,0,"['y', 'y_pred', 'pred_value_only']","[None, None, None]","[None, None, '1']",112,[]
./utilmy/tabular.py:pd_stat_distribution_colnum,pd_stat_distribution_colnum,function,23,84,72,646,7.69,1,3,"['df', 'nrows', 'verbose']","[None, None, None]","[None, '2000', 'False']",289,"['    """""" Stats the tables\n', '    """"""\n']"
./utilmy/tabular.py:pd_stat_histogram,pd_stat_histogram,function,10,21,20,220,10.48,0,0,"['df', 'bins', 'coltarget']","[None, None, None]","[None, '50', '""diff""']",329,"['    """"""\n', '    :param df:\n', '    :param bins:\n', '    :param coltarget:\n', '    :return:\n', '    """"""\n']"
./utilmy/tabular.py:np_col_extractname,np_col_extractname,function,7,38,24,216,5.68,1,5,['col_onehot'],[None],[None],344,"['    """"""\n', '    Column extraction from onehot name\n', '    :param col_onehotp\n', '    :return:\n', '    """"""\n']"
./utilmy/tabular.py:np_list_remove,np_list_remove,function,12,42,26,214,5.1,3,4,"['cols', 'colsremove', 'mode']","[None, None, None]","[None, None, '""exact""']",367,"['    """"""\n', '    """"""\n']"
./utilmy/tabular.py:pd_stat_shift_trend_changes,pd_stat_shift_trend_changes,function,20,41,35,660,16.1,0,0,"['df', 'feature', 'target_col', 'threshold']","[None, None, None, None]","[None, None, None, '0.03']",392,"['    """"""\n', '    Calculates number of times the trend of feature wrt target changed direction.\n', '    :param df: df_grouped dataset\n', '    :param feature: feature column name\n', '    :param target_col: target column\n', '    :param threshold: minimum % difference required to count as trend change\n', '    :return: number of trend chagnes for the feature\n', '    """"""\n']"
./utilmy/tabular.py:pd_stat_shift_trend_correlation,pd_stat_shift_trend_correlation,function,19,63,55,788,12.51,0,2,"['df', 'df_test', 'colname', 'target_col']","[None, None, None, None]","[None, None, None, None]",416,"['    """"""\n', '    Calculates correlation between train and test trend of colname wrt target.\n', '    :param df: train df data\n', '    :param df_test: test df data\n', '    :param colname: colname column name\n', '    :param target_col: target column name\n', '    :return: trend correlation between train and test\n', '    """"""\n']"
./utilmy/tabular.py:pd_stat_shift_changes,pd_stat_shift_changes,function,33,99,81,1236,12.48,1,4,"['df', 'target_col', 'features_list', 'bins', 'df_test']","[None, None, None, None, None]","[None, None, '0', '10', '0']",447,"['    """"""\n', '    Calculates trend changes and correlation between train/test for list of features\n', '    :param df: dfframe containing features and target columns\n', '    :param target_col: target column name\n', '    :param features_list: by default creates plots for all features. If list passed, creates plots of only those features.\n', '    :param bins: number of bins to be created from continuous colname\n', '    :param df_test: test df which has to be compared with input df for correlation\n', '    :return: dfframe with trend changes and trend correlation (if test df passed)\n', '    """"""\n']"
./utilmy/tabular.py:np_conv_to_one_col,np_conv_to_one_col,function,5,11,10,137,12.45,0,0,"['np_array', 'sep_char']","[None, None]","[None, '""_""']",492,"['    """"""\n', '    converts string/numeric columns to one string column\n', '    :param np_array: the numpy array with more than one column\n', '    :param sep_char: the separator character\n', '    """"""\n']"
./utilmy/text.py:log,log,function,1,1,1,8,8.0,0,0,['*s'],[None],[None],17,[]
./utilmy/text.py:pd_text_hash_create_lsh,pd_text_hash_create_lsh,function,22,32,29,327,10.22,2,0,"['df', 'col', 'sep', 'threshold', 'num_perm']","[None, None, None, None, None]","[None, None, '"" ""', '0.7', '10']",24,"[""    '''\n"", '    For each of the entry create a hash function\n', ""    '''\n""]"
./utilmy/text.py:pd_text_getcluster,pd_text_getcluster,function,16,37,32,367,9.92,1,1,"['df', 'col', 'threshold', 'num_perm']","[None, None, None, None]","[None, None, None, None]",53,"[""    '''\n"", '    For each of the hash function find a cluster and assign unique id to the dataframe cluster_id\n', ""    '''\n""]"
./utilmy/text.py:pd_similarity,pd_similarity,function,20,65,51,548,8.43,1,3,"['df', 'cols', 'algo']","[' pd.DataFrame', None, None]","[None, '[]', ""''""]",81,"[""    '''\n"", '        Return similarities between two columns with \n', ""        python's SequenceMatcher algorithm\n"", '\n', '        Args:\n', '            df (pd.DataFrame): Pandas Dataframe.\n', '            algo (String)    : rapidfuzz | editdistance \n', '            cols (list[str]) : List of of columns name (2 columns)\n', '\n', '        Returns:\n', '            pd.DataFrame\n', '\n', ""    '''\n""]"
./utilmy/text.py:test_lsh,test_lsh,function,10,28,27,222,7.93,0,0,[],[],[],120,[]
./utilmy/utilmy.py:log,log,function,1,1,1,9,9.0,0,0,['*s'],[None],[None],6,[]
./utilmy/utilmy.py:pd_merge,pd_merge,function,3,17,16,120,7.06,0,0,"['df1', 'df2', 'on', 'colkeep']","[None, None, None, None]","[None, None, 'None', 'None']",11,[]
./utilmy/utilmy.py:pd_plot_multi,pd_plot_multi,function,40,109,78,1103,10.12,2,3,"['df', 'plot_type', 'cols_axe1', 'cols_axe2', 'figsize', '4']","[None, None, 'list', 'list', None, None]","[None, 'None', '[]', '[]', '(8', None]",17,[]
./utilmy/utilmy.py:pd_filter,pd_filter,function,18,106,52,531,5.01,2,7,"['df', 'filter_dict', 'verbose']","[None, None, None]","[None, '""shop_id=11, l1_genre_id>600, l2_genre_id<80311,""', 'False']",66,"['    """"""\n', '     dfi = pd_filter2(dfa, ""shop_id=11, l1_genre_id>600, l2_genre_id<80311,"" )\n', '     dfi2 = pd_filter(dfa, {""shop_id"" : 11} )\n', '     ### Dilter dataframe with basic expr\n', '    """"""\n']"
./utilmy/utilmy.py:pd_to_file,pd_to_file,function,14,35,24,272,7.77,0,3,"['df', 'filei', 'check', 'verbose', '**kw']","[None, None, None, None, None]","[None, None, '""check""', 'True', None]",104,[]
./utilmy/utilmy.py:pd_read_file,pd_read_file,function,66,249,142,1645,6.61,4,18,"['path_glob', 'ignore_index', 'cols', 'verbose', 'nrows', 'concat_sort', 'n_pool', 'drop_duplicates', 'col_filter', 'col_filter_val', 'dtype_reduce', '**kw']","[None, None, None, None, None, None, None, None, None, None, None, None]","['""*.pkl""', 'True', 'None', 'False', '-1', 'True', '1', 'None', 'None', 'None', 'None', None]",130,"['  """"""  Read file in parallel from disk : very Fast\n', '  :param path_glob: list of pattern, or sep by "";""\n', '  :return:\n', '  """"""\n']"
./utilmy/utilmy.py:pd_sample_strat,pd_sample_strat,function,5,10,9,104,10.4,0,0,"['df', 'col', 'n']","[None, None, None]","[None, None, None]",213,[]
./utilmy/utilmy.py:pd_cartesian,pd_cartesian,function,12,22,18,154,7.0,0,0,"['df1', 'df2']","[None, None]","[None, None]",221,[]
./utilmy/utilmy.py:pd_plot_histogram,pd_plot_histogram,function,24,71,45,428,6.03,0,4,"['dfi', 'path_save', 'nbin', 'q5', 'q95', 'nsample', 'show', 'clear']","[None, None, None, None, None, None, None, None]","[None, 'None', '20.0', '0.005', '0.995', ' -1', 'False', 'True']",233,[]
./utilmy/utilmy.py:pd_col_bins,pd_col_bins,function,8,19,18,128,6.74,0,0,"['df', 'col', 'nbins']","[None, None, None]","[None, None, '5']",258,[]
./utilmy/utilmy.py:pd_dtype_reduce,pd_dtype_reduce,function,9,35,23,238,6.8,1,1,"['dfm', 'int0 ', 'float0 ']","[None, None, None]","[None, ""'int32'"", "" 'float32'""]",265,[]
./utilmy/utilmy.py:pd_dtype_count_unique,pd_dtype_count_unique,function,17,73,57,541,7.41,1,3,"['df', 'col_continuous']","[None, None]","[None, '[]']",274,"['    """"""Learns the number of categories in each variable and standardizes the data.\n', '        ----------\n', '        data: pd.DataFrame\n', '        continuous_ids: list of ints\n', '            List containing the indices of known continuous variables. Useful for\n', '            discrete data like age, which is better modeled as continuous.\n', '        Returns\n', '        -------\n', '        ncat:  number of categories of each variable. -1 if the variable is  continuous.\n', '    """"""\n']"
./utilmy/utilmy.py:pd_dtype_to_category,pd_dtype_to_category,function,15,36,29,350,9.72,1,3,"['df', 'col_exclude', 'treshold']","[None, None, None]","[None, None, '0.5']",313,"['  """"""\n', '    Convert string to category\n', '  """"""\n']"
./utilmy/utilmy.py:pd_dtype_getcontinuous,pd_dtype_getcontinuous,function,10,43,29,261,6.07,1,2,"['df', 'cols_exclude', 'nsample']","[None, 'list', None]","[None, '[]', '-1']",332,[]
./utilmy/utilmy.py:pd_del,pd_del,function,6,13,13,50,3.85,1,0,"['df', 'cols']","[None, 'list']","[None, None]",348,[]
./utilmy/utilmy.py:pd_add_noise,pd_add_noise,function,18,41,33,295,7.2,1,1,"['df', 'level', 'cols_exclude']","[None, None, 'list']","[None, '0.05', '[]']",357,[]
./utilmy/utilmy.py:pd_cols_unique_count,pd_cols_unique_count,function,10,43,29,261,6.07,1,2,"['df', 'cols_exclude', 'nsample']","[None, 'list', None]","[None, '[]', '-1']",371,[]
./utilmy/utilmy.py:pd_show,pd_show,function,6,10,10,116,11.6,0,0,"['df', 'nrows', 'reader', '**kw']","[None, None, None, None]","[None, '100', ""'notepad.exe'"", None]",389,"['    """""" Show from Dataframe\n', '    """"""\n']"
./utilmy/utilmy.py:to_dict,to_dict,function,2,2,2,8,4.0,0,0,['**kw'],[None],[None],409,[]
./utilmy/utilmy.py:to_timeunix,to_timeunix,function,2,16,12,187,11.69,0,2,['datex'],[None],"['""2018-01-16""']",414,[]
./utilmy/utilmy.py:to_datetime,to_datetime,function,5,8,8,45,5.62,0,0,['x'],[None],[None],422,[]
./utilmy/utilmy.py:np_list_intersection,np_list_intersection,function,4,10,8,24,2.4,1,1,"['l1', 'l2']","[None, None]","[None, None]",427,[]
./utilmy/utilmy.py:np_add_remove,np_add_remove,function,7,10,9,116,11.6,1,0,"['set_', 'to_remove', 'to_add']","[None, None, None]","[None, None, None]",431,[]
./utilmy/utilmy.py:to_float,to_float,function,1,8,6,46,5.75,0,0,['x'],[None],[None],440,[]
./utilmy/utilmy.py:to_int,to_int,function,1,8,6,44,5.5,0,0,['x'],[None],[None],447,[]
./utilmy/utilmy.py:config_load,config_load,function,31,126,90,1072,8.51,2,4,"['config_path', 'path_default', 'config_default']","['str ', 'str', 'dict']","[' None', 'None', 'None']",458,"['    """"""Load Config file into a dict  from .json or .yaml file\n', '    TODO .cfg file\n', '    1) load config_path\n', '    2) If not, load default from HOME USER\n', '    3) If not, create default on in python code\n', '    Args:\n', ""        config_path: path of config or 'default' tag value\n"", '    Returns: dict config\n', '    """"""\n']"
./utilmy/utilmy.py:os_path_split,os_path_split,function,10,27,21,215,7.96,0,2,['fpath'],['str'],"['""""']",520,[]
./utilmy/utilmy.py:os_file_replacestring,os_file_replacestring,function,13,35,30,411,11.74,2,0,"['findstr', 'replacestr', 'some_dir', 'pattern', 'dirlevel']","[None, None, None, None, None]","[None, None, None, '""*.*""', '1']",537,"['    """""" #fil_replacestring_files(""logo.png"", ""logonew.png"", r""D:/__Alpaca__details/aiportfolio"",\n', '        pattern=""*.html"", dirlevel=5  )\n', '    """"""\n']"
./utilmy/utilmy.py:os_walk,os_walk,function,29,76,44,963,12.67,4,3,"['dir1', 'pattern', 'dirlevel', 'path_only']","[None, None, None, None]","[None, '""*.*""', '20', 'False']",559,"['    """"""\n', '            matches[""dirpath""]  = []\n', '            matches[""filename""] = []\n', '            matches[""fullpath""] = []\n', '\n', '    """"""\n']"
./utilmy/utilmy.py:z_os_search_fast,z_os_search_fast,function,29,122,72,893,7.32,4,4,"['fname', 'texts', 'mode']","[None, None, None]","[None, 'None', '""regex/str""']",603,[]
./utilmy/utilmy.py:os_search_content,os_search_content,function,13,37,33,301,8.14,1,1,"['srch_pattern', 'mode', 'dir1', 'file_pattern', 'dirlevel']","[None, None, None, None, None]","['None', '""str""', '""""', '""*.*""', '1']",647,"['    """"""  search inside the files\n', '\n', '    """"""\n']"
./utilmy/utilmy.py:os_get_function_name,os_get_function_name,function,6,31,18,199,6.42,0,0,[],[],[],663,[]
./utilmy/utilmy.py:os_variable_init,os_variable_init,function,3,12,10,45,3.75,1,0,"['ll', 'globs']","[None, None]","[None, None]",676,[]
./utilmy/utilmy.py:os_import,os_import,function,14,59,37,426,7.22,3,3,"['mod_name', 'globs', 'verbose']","[None, None, None]","['""myfile.config.model""', 'None', 'True']",684,[]
./utilmy/utilmy.py:os_variable_exist,os_variable_exist,function,4,19,16,111,5.84,0,1,"['x', 'globs', 'msg']","[None, None, None]","[None, None, '""""']",711,[]
./utilmy/utilmy.py:os_variable_check,os_variable_check,function,9,31,26,149,4.81,1,2,"['ll', 'globs', 'do_terminate']","[None, None, None]","[None, 'None', 'True']",721,[]
./utilmy/utilmy.py:os_clean_memory,os_clean_memory,function,5,13,12,56,4.31,1,0,"['varlist', 'globx']","[None, None]","[None, None]",733,[]
./utilmy/utilmy.py:os_system_list,os_system_list,function,11,45,38,219,4.87,1,1,"['ll', 'logfile', 'sleep_sec']","[None, None, None]","[None, 'None', '10']",741,[]
./utilmy/utilmy.py:os_file_check,os_file_check,function,4,16,14,121,7.56,0,0,['fp'],[None],[None],763,[]
./utilmy/utilmy.py:os_to_file,os_to_file,function,3,7,7,52,7.43,0,0,"['txt', 'filename', 'mode']","[None, None, None]","['""""', '""ztmp.txt""', ""'a'""]",771,[]
./utilmy/utilmy.py:os_platform_os,os_platform_os,function,2,2,2,18,9.0,0,0,[],[],[],776,[]
./utilmy/utilmy.py:os_cpu,os_cpu,function,2,2,2,20,10.0,0,0,[],[],[],781,[]
./utilmy/utilmy.py:os_platform_ip,os_platform_ip,function,0,1,1,4,4.0,0,0,[],[],[],786,[]
./utilmy/utilmy.py:os_memory,os_memory,function,13,36,30,278,7.72,1,1,[],[],[],791,"['    """""" Get node total memory and memory usage in linux\n', '    """"""\n']"
./utilmy/utilmy.py:os_sleep_cpu,os_sleep_cpu,function,8,19,14,169,8.89,1,0,"['priority', 'cpu_min', 'sleep']","[None, None, None]","['300', '50', '10']",808,[]
./utilmy/utilmy.py:os_ram_object,os_ram_object,function,17,58,39,319,5.5,0,4,"['o', 'ids', 'hint', 'set(']","[None, None, None, None]","[None, None, '"" deep_getsizeof(df_pd', None]",822,"['    """""" deep_getsizeof(df_pd, set())\n', '    Find the memory footprint of a Python object\n', '    The sys.getsizeof function does a shallow size of only. It counts each\n', '    object inside a container as pointer only regardless of how big it\n', '    """"""\n']"
./utilmy/utilmy.py:os_removedirs,os_removedirs,function,12,48,32,294,6.12,3,1,['path'],[None],[None],852,"['    """"""  issues with no empty Folder\n', ""    # Delete everything reachable from the directory named in 'top',\n"", '    # assuming there are no symbolic links.\n', ""    # CAUTION:  This is dangerous!  For example, if top == '/', it could delete all your disk files.\n"", '    """"""\n']"
./utilmy/utilmy.py:os_getcwd,os_getcwd,function,3,6,5,66,11.0,0,0,[],[],[],879,[]
./utilmy/utilmy.py:os_system,os_system,function,11,45,38,219,4.87,1,1,"['ll', 'logfile', 'sleep_sec']","[None, None, None]","[None, 'None', '10']",885,"['  """""" get values\n', '       os_system( f""   ztmp "",  doprint=True)\n', '  """"""\n']"
./utilmy/utilmy.py:os_makedirs,os_makedirs,function,2,13,12,198,15.23,0,1,['dir_or_file'],[None],[None],902,[]
./utilmy/utilmy.py:global_verbosity,global_verbosity,function,10,54,35,442,8.19,0,2,"['cur_path', 'path_relative', 'default', 'key', '']","[None, None, None, None, None]","[None, '""/../../config.json""', '5', ""'verbosity'"", None]",911,"['    """""" Get global verbosity\n', '    verbosity = global_verbosity(__file__, ""/../../config.json"", default=5 )\n', '\n', '    verbosity = global_verbosity(""repo_root"", ""config/config.json"", default=5 )\n', '\n', '    :param cur_path:\n', '    :param path_relative:\n', '    :param key:\n', '    :param default:\n', '    :return:\n', '    """"""\n']"
./utilmy/utilmy.py:git_repo_root,git_repo_root,function,7,23,19,142,6.17,0,1,[],[],[],949,[]
./utilmy/utilmy.py:git_current_hash,git_current_hash,function,6,12,10,123,10.25,0,0,['mode'],[None],"[""'full'""]",959,[]
./utilmy/utilmy.py:plot_to_html,plot_to_html,function,21,53,39,426,8.04,1,1,"['dir_input', 'out_file', 'title', 'verbose']","[None, None, None, None]","['""*.png""', '""graph.html""', '""""', 'False']",971,"['    """"""\n', '      plot_to_html( model_path + ""/graph_shop_17_past/*.png"" , model_path + ""shop_17.html"" )\n', '\n', '    """"""\n']"
./utilmy/utilmy.py:save,save,function,5,10,10,140,14.0,0,0,"['dd', 'to_file', 'verbose']","[None, None, None]","[None, '""""', 'False']",1070,[]
./utilmy/utilmy.py:load,load,function,5,7,6,61,8.71,0,0,['to_file'],[None],"['""""']",1077,[]
./utilmy/utilmy.py:print_everywhere,print_everywhere,function,14,35,32,209,5.97,1,0,[],[],[],1087,"['    """"""\n', '    https://github.com/alexmojaki/snoop\n', '    """"""\n']"
./utilmy/utilmy.py:log5,log5,function,5,6,6,33,5.5,0,0,['*s'],[None],[None],1117,"['    """"""    ### Equivalent of print, but more :  https://github.com/gruns/icecream\n', '    pip install icrecream\n', '    ic()  --->  ic| example.py:4 in foo()\n', ""    ic(var)  -->   ic| d['key'][1]: 'one'\n"", '    \n', '    """"""\n']"
./utilmy/utilmy.py:log_trace,log_trace,function,4,4,4,37,9.25,0,0,"['msg', 'dump_path', 'globs']","[None, None, None]","['""""', '""""', 'None']",1128,[]
./utilmy/utilmy.py:profiler_start,profiler_start,function,6,9,9,82,9.11,0,0,[],[],[],1134,[]
./utilmy/utilmy.py:profiler_stop,profiler_stop,function,3,5,5,83,16.6,0,0,[],[],[],1142,[]
./utilmy/utilmy.py:dict_to_namespace,dict_to_namespace,class,3,5,5,36,7.2,0,0,[],[],[],403,[]
./utilmy/utilmy.py:Session,Session,class,42,178,114,1402,7.88,3,2,[],[],[],1001,[]
./utilmy/utilmy.py:dict_to_namespace:__init__,dict_to_namespace:__init__,method,2,2,2,15,7.5,0,0,"['self', 'd']","[None, None]","[None, None]",405,[]
./utilmy/utilmy.py:Session:__init__,Session:__init__,method,5,7,7,113,16.14,0,0,"['self', 'dir_session', '']","[None, None, None]","[None, '""ztmp/session/""', None]",1007,[]
./utilmy/utilmy.py:Session:show,Session:show,method,5,7,7,62,8.86,0,0,['self'],[None],[None],1013,[]
./utilmy/utilmy.py:Session:save,Session:save,method,4,8,8,146,18.25,0,0,"['self', 'name', 'glob', 'tag']","[None, None, None, None]","[None, None, 'None', '""""']",1018,[]
./utilmy/utilmy.py:Session:load,Session:load,method,4,9,9,126,14.0,0,0,"['self', 'name', 'glob', 'tag']","[None, None, 'dict', None]","[None, None, 'None', '""""']",1024,[]
./utilmy/utilmy.py:Session:save_session,Session:save_session,method,19,82,58,516,6.29,1,2,"['self', 'folder', 'globs', 'tag']","[None, None, None, None]","[None, None, None, '""""']",1031,[]
./utilmy/utilmy.py:Session:load_session,Session:load_session,method,11,33,28,208,6.3,2,0,"['self', 'folder', 'globs']","[None, None, None]","[None, None, 'None']",1054,"['      """"""\n', '      """"""\n']"
./utilmy/util_default.py:log,log,function,10,39,25,357,9.15,0,0,['*s'],[None],[None],18,[]
./utilmy/util_default.py:log2,log2,function,1,5,5,39,7.8,0,0,['*s'],[None],[None],22,[]
./utilmy/util_default.py:logw,logw,function,1,5,5,41,8.2,0,0,['*s'],[None],[None],26,[]
./utilmy/util_default.py:loge,loge,function,1,5,5,39,7.8,0,0,['*s'],[None],[None],30,[]
./utilmy/util_default.py:logger_setup,logger_setup,function,2,15,13,138,9.2,0,0,[],[],[],34,[]
./utilmy/util_default.py:config_load,config_load,function,16,74,63,807,10.91,0,1,"['config_path', 'pathlib.Path]] ']","[' Optional[Union[str', None]","[None, ' None']",51,"['    """"""Load Config file into a dict\n', '    1) load config_path\n', '    2) If not, load in HOME USER\n', '    3) If not, create default one\n', ""    # config_default = yaml.load(os.path.join(os.path.dirname(__file__), 'config', 'config.yaml'))\n"", '\n', '    Args:\n', ""        config_path: path of config or 'default' tag value\n"", '    Returns: dict config\n', '    """"""\n']"
./utilmy/util_default.py:dataset_donwload,dataset_donwload,function,9,19,17,246,12.95,0,0,"['url', 'path_target']","[None, None]","[None, None]",99,"['    """"""Donwload on disk the tar.gz file\n', '    Args:\n', '        url:\n', '        path_target:\n', '    Returns:\n', '\n', '    """"""\n']"
./utilmy/util_default.py:os_extract_archive,os_extract_archive,function,19,63,47,671,10.65,1,8,"['file_path', 'path', 'archive_format']","[None, None, None]","[None, '"".""', '""auto""']",117,"['    """"""Extracts an archive if it matches tar, tar.gz, tar.bz, or zip formats.\n', '    Args:\n', '        file_path: path to the archive file\n', '        path: path to extract the archive file\n', '        archive_format: Archive format to try for extracting the file.\n', ""            Options are 'auto', 'tar', 'zip', and None.\n"", ""            'tar' includes tar, tar.gz, and tar.bz files.\n"", ""            The default 'auto' is ['tar', 'zip'].\n"", '            None or an empty list will return no matches found.\n', '    Returns:\n', '        True if a match was found and an archive extraction was completed,\n', '        False otherwise.\n', '    """"""\n']"
./utilmy/util_default.py:to_file,to_file,function,3,7,7,51,7.29,0,0,"['s', 'filep']","[None, None]","[None, None]",164,[]
